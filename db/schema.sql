-- MySQL Script generated by MySQL Workbench
-- Fri 30 Oct 2020 04:15:00 PM
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='';

-- -----------------------------------------------------
-- Schema cenozo
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `cenozo` ;

-- -----------------------------------------------------
-- Schema cenozo
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `cenozo` DEFAULT CHARACTER SET utf8 ;
-- -----------------------------------------------------
-- Schema magnolia
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `magnolia` ;

-- -----------------------------------------------------
-- Schema magnolia
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `magnolia` ;
USE `cenozo` ;

-- -----------------------------------------------------
-- Table `cenozo`.`cohort`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `cenozo`.`cohort` ;

CREATE TABLE IF NOT EXISTS `cenozo`.`cohort` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `update_timestamp` TIMESTAMP NOT NULL,
  `create_timestamp` TIMESTAMP NOT NULL,
  `name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `uq_name` (`name` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `cenozo`.`source`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `cenozo`.`source` ;

CREATE TABLE IF NOT EXISTS `cenozo`.`source` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `update_timestamp` TIMESTAMP NOT NULL,
  `create_timestamp` TIMESTAMP NOT NULL,
  `name` VARCHAR(45) NOT NULL,
  `override_quota` TINYINT(1) NOT NULL DEFAULT 0,
  `description` TEXT NULL DEFAULT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `uq_name` (`name` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `cenozo`.`language`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `cenozo`.`language` ;

CREATE TABLE IF NOT EXISTS `cenozo`.`language` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `update_timestamp` TIMESTAMP NOT NULL,
  `create_timestamp` TIMESTAMP NOT NULL,
  `name` VARCHAR(45) NOT NULL,
  `active` TINYINT(1) NOT NULL DEFAULT 0,
  `code` CHAR(2) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `uq_name` (`name` ASC),
  UNIQUE INDEX `uq_code` (`code` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `cenozo`.`availability_type`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `cenozo`.`availability_type` ;

CREATE TABLE IF NOT EXISTS `cenozo`.`availability_type` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `update_timestamp` TIMESTAMP NOT NULL,
  `create_timestamp` TIMESTAMP NOT NULL,
  `name` VARCHAR(25) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `uq_name` (`name` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `cenozo`.`exclusion`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `cenozo`.`exclusion` ;

CREATE TABLE IF NOT EXISTS `cenozo`.`exclusion` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `update_timestamp` TIMESTAMP NOT NULL,
  `create_timestamp` TIMESTAMP NOT NULL,
  `name` VARCHAR(100) NOT NULL,
  `description` VARCHAR(512) NULL DEFAULT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `uq_name` (`name` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `cenozo`.`participant`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `cenozo`.`participant` ;

CREATE TABLE IF NOT EXISTS `cenozo`.`participant` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `update_timestamp` TIMESTAMP NOT NULL,
  `create_timestamp` TIMESTAMP NOT NULL,
  `uid` VARCHAR(45) NOT NULL COMMENT 'External unique ID',
  `source_id` INT UNSIGNED NULL DEFAULT NULL,
  `cohort_id` INT UNSIGNED NOT NULL,
  `grouping` VARCHAR(45) NULL DEFAULT NULL,
  `honorific` VARCHAR(10) NOT NULL,
  `first_name` VARCHAR(45) NOT NULL,
  `other_name` VARCHAR(100) NULL DEFAULT NULL,
  `last_name` VARCHAR(45) NOT NULL,
  `sex` ENUM('male', 'female') NOT NULL,
  `date_of_birth` DATE NULL DEFAULT NULL,
  `date_of_death` DATE NULL DEFAULT NULL,
  `date_of_death_accuracy` ENUM('full date known', 'day unknown', 'month and day unknown') NULL DEFAULT NULL,
  `date_of_death_ministry` TINYINT(1) NULL DEFAULT NULL,
  `exclusion_id` INT UNSIGNED NULL DEFAULT NULL,
  `language_id` INT UNSIGNED NOT NULL,
  `availability_type_id` INT UNSIGNED NULL DEFAULT NULL,
  `callback` DATETIME NULL DEFAULT NULL,
  `override_quota` TINYINT(1) NOT NULL DEFAULT 0,
  `email` VARCHAR(255) NULL DEFAULT NULL,
  `email_datetime` DATETIME NULL DEFAULT NULL,
  `email_old` VARCHAR(255) NULL DEFAULT NULL,
  `mass_email` TINYINT(1) NOT NULL DEFAULT 1,
  `check_withdraw` DATETIME NULL DEFAULT NULL,
  `delink` TINYINT(1) NOT NULL DEFAULT 0,
  `withdraw_third_party` TINYINT(1) NULL DEFAULT NULL,
  `out_of_area` TINYINT(1) NOT NULL DEFAULT 0,
  `low_education` TINYINT(1) NOT NULL DEFAULT 0,
  `global_note` TEXT NULL DEFAULT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `uq_uid` (`uid` ASC),
  INDEX `dk_uid` (`uid` ASC),
  INDEX `fk_cohort_id` (`cohort_id` ASC),
  INDEX `fk_source_id` (`source_id` ASC),
  INDEX `dk_email_datetime` (`email_datetime` ASC),
  INDEX `fk_language_id` (`language_id` ASC),
  INDEX `fk_availability_type_id` (`availability_type_id` ASC),
  INDEX `dk_datetime` (`callback` ASC),
  INDEX `fk_exclusion_id` (`exclusion_id` ASC),
  CONSTRAINT `fk_participant_cohort_id`
    FOREIGN KEY (`cohort_id`)
    REFERENCES `cenozo`.`cohort` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_participant_source_id`
    FOREIGN KEY (`source_id`)
    REFERENCES `cenozo`.`source` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_participant_language_id`
    FOREIGN KEY (`language_id`)
    REFERENCES `cenozo`.`language` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_participant_availability_type_id`
    FOREIGN KEY (`availability_type_id`)
    REFERENCES `cenozo`.`availability_type` (`id`)
    ON DELETE SET NULL
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_participant_exclusion_id`
    FOREIGN KEY (`exclusion_id`)
    REFERENCES `cenozo`.`exclusion` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `cenozo`.`user`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `cenozo`.`user` ;

CREATE TABLE IF NOT EXISTS `cenozo`.`user` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `update_timestamp` TIMESTAMP NOT NULL,
  `create_timestamp` TIMESTAMP NOT NULL,
  `name` VARCHAR(45) NOT NULL,
  `password` VARCHAR(255) NULL DEFAULT NULL,
  `first_name` VARCHAR(255) NOT NULL,
  `last_name` VARCHAR(255) NOT NULL,
  `active` TINYINT(1) NOT NULL DEFAULT 1,
  `email` VARCHAR(255) NULL DEFAULT NULL,
  `timezone` VARCHAR(45) NOT NULL DEFAULT 'Canada/Eastern',
  `use_12hour_clock` TINYINT(1) NOT NULL DEFAULT 0,
  `login_failures` INT NOT NULL DEFAULT 0,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `uq_name` (`name` ASC),
  INDEX `dk_active` (`active` ASC),
  UNIQUE INDEX `uq_email` (`email` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `cenozo`.`region`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `cenozo`.`region` ;

CREATE TABLE IF NOT EXISTS `cenozo`.`region` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `update_timestamp` TIMESTAMP NOT NULL,
  `create_timestamp` TIMESTAMP NOT NULL,
  `name` VARCHAR(45) NOT NULL,
  `abbreviation` VARCHAR(5) NOT NULL,
  `country` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `uq_name` (`name` ASC),
  UNIQUE INDEX `uq_abbreviation` (`abbreviation` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `cenozo`.`role`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `cenozo`.`role` ;

CREATE TABLE IF NOT EXISTS `cenozo`.`role` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `update_timestamp` TIMESTAMP NOT NULL,
  `create_timestamp` TIMESTAMP NOT NULL,
  `name` VARCHAR(45) NOT NULL,
  `tier` INT UNSIGNED NOT NULL DEFAULT 1 COMMENT '1 = normal, 2 = site admin, 3 = global admin',
  `all_sites` TINYINT(1) NOT NULL DEFAULT 0,
  `special` TINYINT(1) NOT NULL DEFAULT 0,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `uq_name` (`name` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `cenozo`.`site`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `cenozo`.`site` ;

CREATE TABLE IF NOT EXISTS `cenozo`.`site` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `update_timestamp` TIMESTAMP NOT NULL,
  `create_timestamp` TIMESTAMP NOT NULL,
  `name` VARCHAR(45) NOT NULL,
  `timezone` VARCHAR(45) NOT NULL DEFAULT 'Canada/Eastern',
  `title` VARCHAR(45) NULL DEFAULT NULL,
  `phone_number` VARCHAR(45) NULL DEFAULT NULL,
  `address1` VARCHAR(512) NULL DEFAULT NULL,
  `address2` VARCHAR(512) NULL DEFAULT NULL,
  `city` VARCHAR(100) NULL DEFAULT NULL,
  `region_id` INT UNSIGNED NULL DEFAULT NULL,
  `postcode` VARCHAR(10) NULL DEFAULT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `uq_name` (`name` ASC),
  INDEX `fk_region_id` (`region_id` ASC),
  CONSTRAINT `fk_site_region_id`
    FOREIGN KEY (`region_id`)
    REFERENCES `cenozo`.`region` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `cenozo`.`event_type`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `cenozo`.`event_type` ;

CREATE TABLE IF NOT EXISTS `cenozo`.`event_type` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `update_timestamp` TIMESTAMP NOT NULL,
  `create_timestamp` TIMESTAMP NOT NULL,
  `name` VARCHAR(100) NOT NULL,
  `record_address` TINYINT(1) NOT NULL DEFAULT 0,
  `description` TEXT NULL DEFAULT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `uq_name` (`name` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `cenozo`.`postcode`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `cenozo`.`postcode` ;

CREATE TABLE IF NOT EXISTS `cenozo`.`postcode` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `update_timestamp` TIMESTAMP NOT NULL,
  `create_timestamp` TIMESTAMP NOT NULL,
  `name` VARCHAR(7) NOT NULL COMMENT 'Postcodes with the same province, tz and dst are grouped.',
  `region_id` INT UNSIGNED NOT NULL,
  `timezone_offset` FLOAT NOT NULL,
  `daylight_savings` TINYINT(1) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `uq_name` (`name` ASC),
  INDEX `fk_region_id` (`region_id` ASC),
  CONSTRAINT `fk_postcode_region_id`
    FOREIGN KEY (`region_id`)
    REFERENCES `cenozo`.`region` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `cenozo`.`consent_type`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `cenozo`.`consent_type` ;

CREATE TABLE IF NOT EXISTS `cenozo`.`consent_type` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `update_timestamp` TIMESTAMP NOT NULL,
  `create_timestamp` TIMESTAMP NOT NULL,
  `name` VARCHAR(100) NOT NULL,
  `description` TEXT NULL DEFAULT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `uq_name` (`name` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `cenozo`.`application_has_participant`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `cenozo`.`application_has_participant` ;

CREATE TABLE IF NOT EXISTS `cenozo`.`application_has_participant` (
  `application_id` INT UNSIGNED NOT NULL,
  `participant_id` INT UNSIGNED NOT NULL,
  `update_timestamp` TIMESTAMP NOT NULL,
  `create_timestamp` TIMESTAMP NOT NULL,
  `preferred_site_id` INT UNSIGNED NULL DEFAULT NULL,
  `datetime` DATETIME NULL DEFAULT NULL,
  PRIMARY KEY (`application_id`, `participant_id`),
  INDEX `fk_participant_id` (`participant_id` ASC),
  INDEX `fk_application_id` (`application_id` ASC),
  INDEX `fk_preferred_site_id` (`preferred_site_id` ASC),
  CONSTRAINT `fk_application_has_participant_participant_id`
    FOREIGN KEY (`participant_id`)
    REFERENCES `cenozo`.`participant` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_application_has_participant_preferred_site_id`
    FOREIGN KEY (`preferred_site_id`)
    REFERENCES `cenozo`.`site` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `cenozo`.`application_has_cohort`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `cenozo`.`application_has_cohort` ;

CREATE TABLE IF NOT EXISTS `cenozo`.`application_has_cohort` (
  `application_id` INT UNSIGNED NOT NULL,
  `cohort_id` INT UNSIGNED NOT NULL,
  `update_timestamp` TIMESTAMP NOT NULL,
  `create_timestamp` TIMESTAMP NOT NULL,
  `grouping` ENUM('region', 'jurisdiction') NOT NULL DEFAULT 'region',
  PRIMARY KEY (`application_id`, `cohort_id`),
  INDEX `fk_cohort_id` (`cohort_id` ASC),
  INDEX `fk_application_id` (`application_id` ASC),
  CONSTRAINT `fk_application_has_cohort_cohort_id`
    FOREIGN KEY (`cohort_id`)
    REFERENCES `cenozo`.`cohort` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `cenozo`.`user_has_language`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `cenozo`.`user_has_language` ;

CREATE TABLE IF NOT EXISTS `cenozo`.`user_has_language` (
  `user_id` INT UNSIGNED NOT NULL,
  `language_id` INT UNSIGNED NOT NULL,
  `update_timestamp` TIMESTAMP NOT NULL,
  `create_timestamp` TIMESTAMP NOT NULL,
  PRIMARY KEY (`user_id`, `language_id`),
  INDEX `fk_language_id` (`language_id` ASC),
  INDEX `fk_user_id` (`user_id` ASC),
  CONSTRAINT `fk_user_has_language_user_id`
    FOREIGN KEY (`user_id`)
    REFERENCES `cenozo`.`user` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_user_has_language_language_id`
    FOREIGN KEY (`language_id`)
    REFERENCES `cenozo`.`language` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `cenozo`.`collection`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `cenozo`.`collection` ;

CREATE TABLE IF NOT EXISTS `cenozo`.`collection` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `update_timestamp` TIMESTAMP NOT NULL,
  `create_timestamp` TIMESTAMP NOT NULL,
  `name` VARCHAR(100) NOT NULL,
  `active` TINYINT(1) NOT NULL DEFAULT 1,
  `locked` TINYINT(1) NOT NULL DEFAULT 0,
  `description` TEXT NULL DEFAULT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `uq_name` (`name` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `cenozo`.`activity`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `cenozo`.`activity` ;

CREATE TABLE IF NOT EXISTS `cenozo`.`activity` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `user_id` INT UNSIGNED NOT NULL,
  `application_id` INT UNSIGNED NOT NULL,
  `site_id` INT UNSIGNED NOT NULL,
  `role_id` INT UNSIGNED NOT NULL,
  `start_datetime` DATETIME NOT NULL,
  `end_datetime` DATETIME NULL DEFAULT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_user_id` (`user_id` ASC),
  INDEX `fk_site_id` (`site_id` ASC),
  INDEX `fk_role_id` (`role_id` ASC),
  INDEX `fk_application_id` (`application_id` ASC),
  CONSTRAINT `fk_activity_user_id`
    FOREIGN KEY (`user_id`)
    REFERENCES `cenozo`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_activity_site_id`
    FOREIGN KEY (`site_id`)
    REFERENCES `cenozo`.`site` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_activity_role_id`
    FOREIGN KEY (`role_id`)
    REFERENCES `cenozo`.`role` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `cenozo`.`system_message`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `cenozo`.`system_message` ;

CREATE TABLE IF NOT EXISTS `cenozo`.`system_message` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `update_timestamp` TIMESTAMP NOT NULL,
  `create_timestamp` TIMESTAMP NOT NULL,
  `application_id` INT UNSIGNED NULL DEFAULT NULL,
  `site_id` INT UNSIGNED NULL DEFAULT NULL,
  `role_id` INT UNSIGNED NULL DEFAULT NULL,
  `title` VARCHAR(255) NOT NULL,
  `note` TEXT NOT NULL,
  `expiry` DATE NULL DEFAULT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_site_id` (`site_id` ASC),
  INDEX `fk_role_id` (`role_id` ASC),
  INDEX `fk_system_message_id` (`application_id` ASC),
  CONSTRAINT `fk_system_message_site_id`
    FOREIGN KEY (`site_id`)
    REFERENCES `cenozo`.`site` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_system_message_role_id`
    FOREIGN KEY (`role_id`)
    REFERENCES `cenozo`.`role` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `cenozo`.`application_has_site`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `cenozo`.`application_has_site` ;

CREATE TABLE IF NOT EXISTS `cenozo`.`application_has_site` (
  `application_id` INT UNSIGNED NOT NULL,
  `site_id` INT UNSIGNED NOT NULL,
  `update_timestamp` TIMESTAMP NOT NULL,
  `create_timestamp` TIMESTAMP NOT NULL,
  PRIMARY KEY (`application_id`, `site_id`),
  INDEX `fk_site_id` (`site_id` ASC),
  INDEX `fk_application_id` (`application_id` ASC),
  CONSTRAINT `fk_application_has_site_site_id`
    FOREIGN KEY (`site_id`)
    REFERENCES `cenozo`.`site` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `cenozo`.`script`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `cenozo`.`script` ;

CREATE TABLE IF NOT EXISTS `cenozo`.`script` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `update_timestamp` TIMESTAMP NOT NULL,
  `create_timestamp` TIMESTAMP NOT NULL,
  `name` VARCHAR(255) NOT NULL,
  `started_event_type_id` INT UNSIGNED NULL DEFAULT NULL,
  `finished_event_type_id` INT UNSIGNED NULL DEFAULT NULL,
  `sid` INT NOT NULL,
  `repeated` TINYINT(1) NOT NULL DEFAULT 0,
  `withdraw` TINYINT(1) NOT NULL DEFAULT 0,
  `description` TEXT NULL DEFAULT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_started_event_type_id` (`started_event_type_id` ASC),
  UNIQUE INDEX `uq_name` (`name` ASC),
  INDEX `fk_finished_event_type_id` (`finished_event_type_id` ASC),
  UNIQUE INDEX `uq_sid` (`sid` ASC),
  CONSTRAINT `fk_script_started_event_type_id`
    FOREIGN KEY (`started_event_type_id`)
    REFERENCES `cenozo`.`event_type` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_script_finished_event_type_id`
    FOREIGN KEY (`finished_event_type_id`)
    REFERENCES `cenozo`.`event_type` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `cenozo`.`application_has_script`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `cenozo`.`application_has_script` ;

CREATE TABLE IF NOT EXISTS `cenozo`.`application_has_script` (
  `application_id` INT UNSIGNED NOT NULL,
  `script_id` INT UNSIGNED NOT NULL,
  `update_timestamp` TIMESTAMP NOT NULL,
  `create_timestamp` TIMESTAMP NOT NULL,
  PRIMARY KEY (`application_id`, `script_id`),
  INDEX `fk_script_id` (`script_id` ASC),
  INDEX `fk_application_id` (`application_id` ASC),
  CONSTRAINT `fk_application_has_script_script_id`
    FOREIGN KEY (`script_id`)
    REFERENCES `cenozo`.`script` (`id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `cenozo`.`application_type`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `cenozo`.`application_type` ;

CREATE TABLE IF NOT EXISTS `cenozo`.`application_type` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `update_timestamp` TIMESTAMP NOT NULL,
  `create_timestamp` TIMESTAMP NOT NULL,
  `name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `uq_name` (`name` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `cenozo`.`study_phase`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `cenozo`.`study_phase` ;

CREATE TABLE IF NOT EXISTS `cenozo`.`study_phase` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `update_timestamp` TIMESTAMP NOT NULL,
  `create_timestamp` TIMESTAMP NOT NULL,
  `rank` INT UNSIGNED NOT NULL,
  `name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `uq_rank` (`rank` ASC),
  UNIQUE INDEX `uq_name` (`name` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `cenozo`.`application`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `cenozo`.`application` ;

CREATE TABLE IF NOT EXISTS `cenozo`.`application` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `update_timestamp` TIMESTAMP NOT NULL,
  `create_timestamp` TIMESTAMP NOT NULL,
  `name` VARCHAR(45) NOT NULL,
  `title` VARCHAR(45) NOT NULL,
  `type` VARCHAR(45) NOT NULL,
  `study_phase_id` INT UNSIGNED NULL DEFAULT NULL,
  `application_type_id` INT UNSIGNED NOT NULL,
  `url` VARCHAR(511) NOT NULL,
  `version` VARCHAR(45) NOT NULL,
  `release_based` TINYINT(1) NOT NULL DEFAULT 1,
  `release_event_type_id` INT UNSIGNED NOT NULL,
  `country` VARCHAR(45) NOT NULL,
  `timezone` VARCHAR(45) NOT NULL DEFAULT 'Canada/Eastern',
  `update_queue` TINYINT(1) NOT NULL DEFAULT 0,
  `primary_color` CHAR(7) NOT NULL DEFAULT '#3f3f7d',
  `secondary_color` CHAR(7) NOT NULL DEFAULT '#9ba8b7',
  `theme_expired` TINYINT(1) NOT NULL DEFAULT 1,
  `mail_name` VARCHAR(255) NULL DEFAULT NULL,
  `mail_address` VARCHAR(127) NULL DEFAULT NULL,
  `mail_header` TEXT NULL DEFAULT NULL,
  `mail_footer` TEXT NULL DEFAULT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `uq_name` (`name` ASC),
  INDEX `fk_release_event_type_id` (`release_event_type_id` ASC),
  INDEX `fk_application_type_id` (`application_type_id` ASC),
  INDEX `fk_study_phase_id` (`study_phase_id` ASC),
  CONSTRAINT `fk_application_release_event_type_id`
    FOREIGN KEY (`release_event_type_id`)
    REFERENCES `cenozo`.`event_type` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_application_application_type_id`
    FOREIGN KEY (`application_type_id`)
    REFERENCES `cenozo`.`application_type` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_application_study_phase_id`
    FOREIGN KEY (`study_phase_id`)
    REFERENCES `cenozo`.`study_phase` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `cenozo`.`report_type`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `cenozo`.`report_type` ;

CREATE TABLE IF NOT EXISTS `cenozo`.`report_type` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `update_timestamp` TIMESTAMP NOT NULL,
  `create_timestamp` TIMESTAMP NOT NULL,
  `name` VARCHAR(45) NOT NULL,
  `title` VARCHAR(255) NOT NULL,
  `subject` VARCHAR(45) NOT NULL,
  `description` TEXT NULL DEFAULT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `uq_name` (`name` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `cenozo`.`report_schedule`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `cenozo`.`report_schedule` ;

CREATE TABLE IF NOT EXISTS `cenozo`.`report_schedule` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `update_timestamp` TIMESTAMP NOT NULL,
  `create_timestamp` TIMESTAMP NOT NULL,
  `report_type_id` INT UNSIGNED NOT NULL,
  `user_id` INT UNSIGNED NOT NULL,
  `application_id` INT UNSIGNED NOT NULL,
  `site_id` INT UNSIGNED NOT NULL,
  `role_id` INT UNSIGNED NOT NULL,
  `schedule` ENUM('daily', 'weekly', 'monthly') NOT NULL DEFAULT 'daily',
  `format` ENUM('CSV', 'Excel', 'LibreOffice') NOT NULL DEFAULT 'CSV',
  PRIMARY KEY (`id`),
  INDEX `fk_report_type_id` (`report_type_id` ASC),
  INDEX `fk_user_id` (`user_id` ASC),
  INDEX `fk_application_id` (`application_id` ASC),
  INDEX `fk_site_id` (`site_id` ASC),
  INDEX `fk_role_id` (`role_id` ASC),
  INDEX `dk_repeat` (`schedule` ASC),
  CONSTRAINT `fk_report_schedule_report_type_id`
    FOREIGN KEY (`report_type_id`)
    REFERENCES `cenozo`.`report_type` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_report_schedule_user_id`
    FOREIGN KEY (`user_id`)
    REFERENCES `cenozo`.`user` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_report_schedule_application_id`
    FOREIGN KEY (`application_id`)
    REFERENCES `cenozo`.`application` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_report_schedule_site_id`
    FOREIGN KEY (`site_id`)
    REFERENCES `cenozo`.`site` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_report_schedule_role_id`
    FOREIGN KEY (`role_id`)
    REFERENCES `cenozo`.`role` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `cenozo`.`report`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `cenozo`.`report` ;

CREATE TABLE IF NOT EXISTS `cenozo`.`report` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `update_timestamp` TIMESTAMP NOT NULL,
  `create_timestamp` TIMESTAMP NOT NULL,
  `report_type_id` INT UNSIGNED NOT NULL,
  `report_schedule_id` INT UNSIGNED NULL DEFAULT NULL,
  `user_id` INT UNSIGNED NOT NULL,
  `application_id` INT UNSIGNED NOT NULL,
  `site_id` INT UNSIGNED NOT NULL,
  `role_id` INT UNSIGNED NOT NULL,
  `format` ENUM('CSV', 'Excel', 'LibreOffice') NOT NULL DEFAULT 'CSV',
  `size` BIGINT UNSIGNED NULL DEFAULT NULL,
  `stage` ENUM('started', 'reading data', 'writing data', 'completed', 'failed') NOT NULL DEFAULT 'started',
  `progress` FLOAT NOT NULL DEFAULT 0,
  `datetime` DATETIME NOT NULL,
  `elapsed` FLOAT NULL DEFAULT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_report_type_id` (`report_type_id` ASC),
  INDEX `fk_user_id` (`user_id` ASC),
  INDEX `fk_site_id` (`site_id` ASC),
  INDEX `fk_role_id` (`role_id` ASC),
  INDEX `fk_application_id` (`application_id` ASC),
  INDEX `fk_report_schedule_id` (`report_schedule_id` ASC),
  INDEX `dk_datetime` (`datetime` ASC),
  INDEX `dk_stage` (`stage` ASC),
  INDEX `dk_size` (`size` ASC),
  CONSTRAINT `fk_report_report_type_id`
    FOREIGN KEY (`report_type_id`)
    REFERENCES `cenozo`.`report_type` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_report_user_id`
    FOREIGN KEY (`user_id`)
    REFERENCES `cenozo`.`user` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_report_site_id`
    FOREIGN KEY (`site_id`)
    REFERENCES `cenozo`.`site` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_report_role_id`
    FOREIGN KEY (`role_id`)
    REFERENCES `cenozo`.`role` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_report_application_id`
    FOREIGN KEY (`application_id`)
    REFERENCES `cenozo`.`application` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_report_report_schedule_id`
    FOREIGN KEY (`report_schedule_id`)
    REFERENCES `cenozo`.`report_schedule` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `cenozo`.`role_has_report_type`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `cenozo`.`role_has_report_type` ;

CREATE TABLE IF NOT EXISTS `cenozo`.`role_has_report_type` (
  `role_id` INT UNSIGNED NOT NULL,
  `report_type_id` INT UNSIGNED NOT NULL,
  `update_timestamp` TIMESTAMP NOT NULL,
  `create_timestamp` TIMESTAMP NOT NULL,
  PRIMARY KEY (`role_id`, `report_type_id`),
  INDEX `fk_report_type_id` (`report_type_id` ASC),
  INDEX `fk_role_id` (`role_id` ASC),
  CONSTRAINT `fk_role_has_report_type_role_id`
    FOREIGN KEY (`role_id`)
    REFERENCES `cenozo`.`role` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_role_has_report_type_report_type_id`
    FOREIGN KEY (`report_type_id`)
    REFERENCES `cenozo`.`report_type` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `cenozo`.`report_restriction`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `cenozo`.`report_restriction` ;

CREATE TABLE IF NOT EXISTS `cenozo`.`report_restriction` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `update_timestamp` TIMESTAMP NOT NULL,
  `create_timestamp` TIMESTAMP NOT NULL,
  `report_type_id` INT UNSIGNED NOT NULL,
  `rank` INT NOT NULL,
  `name` VARCHAR(45) NOT NULL,
  `title` VARCHAR(45) NOT NULL,
  `mandatory` TINYINT(1) NOT NULL DEFAULT 0,
  `null_allowed` TINYINT(1) NOT NULL DEFAULT 0,
  `restriction_type` ENUM('table', 'uid_list', 'string', 'integer', 'decimal', 'date', 'datetime', 'time', 'boolean', 'enum') NOT NULL,
  `custom` TINYINT(1) NOT NULL DEFAULT 0,
  `subject` VARCHAR(45) NULL DEFAULT NULL,
  `operator` ENUM('=', '<=>', '!=', '<>', '<', '<=', '>', '>=') NULL DEFAULT NULL,
  `enum_list` VARCHAR(511) NULL DEFAULT NULL,
  `description` TEXT NULL DEFAULT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_report_type_id` (`report_type_id` ASC),
  UNIQUE INDEX `uq_report_type_id_name` (`report_type_id` ASC, `name` ASC),
  UNIQUE INDEX `uq_report_type_id_rank` (`report_type_id` ASC, `rank` ASC),
  CONSTRAINT `fk_report_restriction_report_type_id`
    FOREIGN KEY (`report_type_id`)
    REFERENCES `cenozo`.`report_type` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `cenozo`.`report_has_report_restriction`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `cenozo`.`report_has_report_restriction` ;

CREATE TABLE IF NOT EXISTS `cenozo`.`report_has_report_restriction` (
  `report_id` INT UNSIGNED NOT NULL,
  `report_restriction_id` INT UNSIGNED NOT NULL,
  `update_timestamp` TIMESTAMP NOT NULL,
  `create_timestamp` TIMESTAMP NOT NULL,
  `value` TEXT NOT NULL,
  PRIMARY KEY (`report_id`, `report_restriction_id`),
  INDEX `fk_report_restriction_id` (`report_restriction_id` ASC),
  INDEX `fk_report_id` (`report_id` ASC),
  CONSTRAINT `fk_report_has_report_restriction_report_id`
    FOREIGN KEY (`report_id`)
    REFERENCES `cenozo`.`report` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_report_has_report_restriction_report_restriction_id`
    FOREIGN KEY (`report_restriction_id`)
    REFERENCES `cenozo`.`report_restriction` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `cenozo`.`report_schedule_has_report_restriction`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `cenozo`.`report_schedule_has_report_restriction` ;

CREATE TABLE IF NOT EXISTS `cenozo`.`report_schedule_has_report_restriction` (
  `report_schedule_id` INT UNSIGNED NOT NULL,
  `report_restriction_id` INT UNSIGNED NOT NULL,
  `update_timestamp` TIMESTAMP NOT NULL,
  `create_timestamp` TIMESTAMP NOT NULL,
  `value` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`report_schedule_id`, `report_restriction_id`),
  INDEX `fk_report_restriction_id` (`report_restriction_id` ASC),
  INDEX `fk_report_schedule_id` (`report_schedule_id` ASC),
  CONSTRAINT `fk_report_schedule_has_report_restriction_report_schedule_id`
    FOREIGN KEY (`report_schedule_id`)
    REFERENCES `cenozo`.`report_schedule` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_report_schedule_has_report_restriction_report_restriction_id`
    FOREIGN KEY (`report_restriction_id`)
    REFERENCES `cenozo`.`report_restriction` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `cenozo`.`application_type_has_report_type`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `cenozo`.`application_type_has_report_type` ;

CREATE TABLE IF NOT EXISTS `cenozo`.`application_type_has_report_type` (
  `application_type_id` INT UNSIGNED NOT NULL,
  `report_type_id` INT UNSIGNED NOT NULL,
  `update_timestamp` TIMESTAMP NOT NULL,
  `create_timestamp` TIMESTAMP NOT NULL,
  PRIMARY KEY (`application_type_id`, `report_type_id`),
  INDEX `fk_report_type_id` (`report_type_id` ASC),
  INDEX `fk_application_type_id` (`application_type_id` ASC),
  CONSTRAINT `fk_application_type_has_report_type_application_type_id`
    FOREIGN KEY (`application_type_id`)
    REFERENCES `cenozo`.`application_type` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_application_type_has_report_type_report_type_id`
    FOREIGN KEY (`report_type_id`)
    REFERENCES `cenozo`.`report_type` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `cenozo`.`application_has_collection`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `cenozo`.`application_has_collection` ;

CREATE TABLE IF NOT EXISTS `cenozo`.`application_has_collection` (
  `application_id` INT UNSIGNED NOT NULL,
  `collection_id` INT UNSIGNED NOT NULL,
  `update_timestamp` TIMESTAMP NOT NULL,
  `create_timestamp` TIMESTAMP NOT NULL,
  PRIMARY KEY (`application_id`, `collection_id`),
  INDEX `fk_collection_id` (`collection_id` ASC),
  INDEX `fk_application_id` (`application_id` ASC),
  CONSTRAINT `fk_application_has_collection_application_id`
    FOREIGN KEY (`application_id`)
    REFERENCES `cenozo`.`application` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_application_has_collection_collection_id`
    FOREIGN KEY (`collection_id`)
    REFERENCES `cenozo`.`collection` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `cenozo`.`overview`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `cenozo`.`overview` ;

CREATE TABLE IF NOT EXISTS `cenozo`.`overview` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `update_timestamp` TIMESTAMP NOT NULL,
  `create_timestamp` TIMESTAMP NOT NULL,
  `name` VARCHAR(45) NOT NULL,
  `title` VARCHAR(255) NOT NULL,
  `description` TEXT NULL DEFAULT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `uq_name` (`name` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `cenozo`.`role_has_overview`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `cenozo`.`role_has_overview` ;

CREATE TABLE IF NOT EXISTS `cenozo`.`role_has_overview` (
  `role_id` INT UNSIGNED NOT NULL,
  `overview_id` INT UNSIGNED NOT NULL,
  `update_timestamp` TIMESTAMP NOT NULL,
  `create_timestamp` TIMESTAMP NOT NULL,
  PRIMARY KEY (`role_id`, `overview_id`),
  INDEX `fk_overview_id` (`overview_id` ASC),
  INDEX `fk_role_id` (`role_id` ASC),
  CONSTRAINT `fk_role_has_overview_role_id`
    FOREIGN KEY (`role_id`)
    REFERENCES `cenozo`.`role` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_role_has_overview_overview_id`
    FOREIGN KEY (`overview_id`)
    REFERENCES `cenozo`.`overview` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `cenozo`.`application_type_has_overview`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `cenozo`.`application_type_has_overview` ;

CREATE TABLE IF NOT EXISTS `cenozo`.`application_type_has_overview` (
  `application_type_id` INT UNSIGNED NOT NULL,
  `overview_id` INT UNSIGNED NOT NULL,
  `update_timestamp` TIMESTAMP NOT NULL,
  `create_timestamp` TIMESTAMP NOT NULL,
  PRIMARY KEY (`application_type_id`, `overview_id`),
  INDEX `fk_overview_id` (`overview_id` ASC),
  INDEX `fk_application_type_id` (`application_type_id` ASC),
  CONSTRAINT `fk_application_type_has_overview_application_type_id`
    FOREIGN KEY (`application_type_id`)
    REFERENCES `cenozo`.`application_type` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_application_type_has_overview_overview_id`
    FOREIGN KEY (`overview_id`)
    REFERENCES `cenozo`.`overview` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `cenozo`.`application_type_has_role`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `cenozo`.`application_type_has_role` ;

CREATE TABLE IF NOT EXISTS `cenozo`.`application_type_has_role` (
  `application_type_id` INT UNSIGNED NOT NULL,
  `role_id` INT UNSIGNED NOT NULL,
  `update_timestamp` TIMESTAMP NOT NULL,
  `create_timestamp` TIMESTAMP NOT NULL,
  PRIMARY KEY (`application_type_id`, `role_id`),
  INDEX `fk_role_id` (`role_id` ASC),
  INDEX `fk_application_type_id` (`application_type_id` ASC),
  CONSTRAINT `fk_application_type_has_role_application_type_id`
    FOREIGN KEY (`application_type_id`)
    REFERENCES `cenozo`.`application_type` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_application_type_has_role_role_id`
    FOREIGN KEY (`role_id`)
    REFERENCES `cenozo`.`role` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `cenozo`.`user_has_system_message`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `cenozo`.`user_has_system_message` ;

CREATE TABLE IF NOT EXISTS `cenozo`.`user_has_system_message` (
  `user_id` INT UNSIGNED NOT NULL,
  `system_message_id` INT UNSIGNED NOT NULL,
  `update_timestamp` TIMESTAMP NOT NULL,
  `create_timestamp` TIMESTAMP NOT NULL,
  PRIMARY KEY (`user_id`, `system_message_id`),
  INDEX `fk_system_message_id` (`system_message_id` ASC),
  INDEX `fk_user_id` (`user_id` ASC),
  CONSTRAINT `fk_user_has_system_message_user_id`
    FOREIGN KEY (`user_id`)
    REFERENCES `cenozo`.`user` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_user_has_system_message_system_message_id`
    FOREIGN KEY (`system_message_id`)
    REFERENCES `cenozo`.`system_message` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `cenozo`.`hold_type`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `cenozo`.`hold_type` ;

CREATE TABLE IF NOT EXISTS `cenozo`.`hold_type` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `update_timestamp` TIMESTAMP NOT NULL,
  `create_timestamp` TIMESTAMP NOT NULL,
  `type` ENUM('final', 'temporary') NOT NULL,
  `name` VARCHAR(100) NOT NULL,
  `system` TINYINT(1) NOT NULL DEFAULT 0,
  `description` VARCHAR(512) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `uq_type_name` (`type` ASC, `name` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `cenozo`.`failed_login`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `cenozo`.`failed_login` ;

CREATE TABLE IF NOT EXISTS `cenozo`.`failed_login` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `update_timestamp` TIMESTAMP NOT NULL,
  `create_timestamp` TIMESTAMP NOT NULL,
  `user_id` INT UNSIGNED NOT NULL,
  `application_id` INT UNSIGNED NOT NULL,
  `address` VARCHAR(45) NOT NULL,
  `datetime` DATETIME NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_user_id` (`user_id` ASC),
  INDEX `fk_application_id` (`application_id` ASC),
  CONSTRAINT `fk_failed_login_user_id`
    FOREIGN KEY (`user_id`)
    REFERENCES `cenozo`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_failed_login_application_id`
    FOREIGN KEY (`application_id`)
    REFERENCES `cenozo`.`application` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `cenozo`.`mail`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `cenozo`.`mail` ;

CREATE TABLE IF NOT EXISTS `cenozo`.`mail` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `update_timestamp` TIMESTAMP NOT NULL,
  `create_timestamp` TIMESTAMP NOT NULL,
  `participant_id` INT UNSIGNED NOT NULL,
  `from_name` VARCHAR(255) NULL DEFAULT NULL,
  `from_address` VARCHAR(127) NOT NULL,
  `to_name` VARCHAR(255) NULL DEFAULT NULL,
  `to_address` VARCHAR(127) NOT NULL,
  `cc_address` VARCHAR(255) NULL DEFAULT NULL,
  `bcc_address` VARCHAR(255) NULL DEFAULT NULL,
  `schedule_datetime` DATETIME NOT NULL,
  `sent_datetime` DATETIME NULL DEFAULT NULL,
  `sent` TINYINT(1) NULL DEFAULT NULL,
  `subject` VARCHAR(255) NOT NULL,
  `body` TEXT NOT NULL,
  `note` TEXT NULL DEFAULT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_participant_id` (`participant_id` ASC),
  UNIQUE INDEX `uq_participant_id_scheduled_datetime` (`participant_id` ASC, `schedule_datetime` ASC),
  CONSTRAINT `fk_mail_participant_id`
    FOREIGN KEY (`participant_id`)
    REFERENCES `cenozo`.`participant` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `cenozo`.`study`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `cenozo`.`study` ;

CREATE TABLE IF NOT EXISTS `cenozo`.`study` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `update_timestamp` TIMESTAMP NOT NULL,
  `create_timestamp` TIMESTAMP NOT NULL,
  `name` VARCHAR(45) NOT NULL,
  `consent_type_id` INT UNSIGNED NULL DEFAULT NULL,
  `completed_event_type_id` INT UNSIGNED NULL DEFAULT NULL,
  `description` TEXT NULL DEFAULT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `uq_name` (`name` ASC),
  INDEX `fk_consent_type_id` (`consent_type_id` ASC),
  INDEX `fk_completed_event_type_id` (`completed_event_type_id` ASC),
  CONSTRAINT `fk_study_consent_type_id`
    FOREIGN KEY (`consent_type_id`)
    REFERENCES `cenozo`.`consent_type` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_study_completed_event_type_id`
    FOREIGN KEY (`completed_event_type_id`)
    REFERENCES `cenozo`.`event_type` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `cenozo`.`identifier`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `cenozo`.`identifier` ;

CREATE TABLE IF NOT EXISTS `cenozo`.`identifier` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `update_timestamp` TIMESTAMP NOT NULL,
  `create_timestamp` TIMESTAMP NOT NULL,
  `name` VARCHAR(255) NOT NULL,
  `regex` VARCHAR(255) NULL DEFAULT NULL,
  `description` TEXT NULL DEFAULT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `uq_name` (`name` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `cenozo`.`participant_identifier`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `cenozo`.`participant_identifier` ;

CREATE TABLE IF NOT EXISTS `cenozo`.`participant_identifier` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `update_timestamp` TIMESTAMP NOT NULL,
  `create_timestamp` TIMESTAMP NOT NULL,
  `identifier_id` INT UNSIGNED NOT NULL,
  `participant_id` INT UNSIGNED NOT NULL,
  `value` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_identifier_id` (`identifier_id` ASC),
  INDEX `fk_participant_id` (`participant_id` ASC),
  UNIQUE INDEX `uq_identifier_id_participant_id` (`identifier_id` ASC, `participant_id` ASC),
  UNIQUE INDEX `uq_identifier_id_value` (`identifier_id` ASC, `value` ASC),
  CONSTRAINT `fk_participant_identifier_identifier_id`
    FOREIGN KEY (`identifier_id`)
    REFERENCES `cenozo`.`identifier` (`id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_participant_identifier_participant_id`
    FOREIGN KEY (`participant_id`)
    REFERENCES `cenozo`.`participant` (`id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `cenozo`.`stratum`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `cenozo`.`stratum` ;

CREATE TABLE IF NOT EXISTS `cenozo`.`stratum` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `update_timestamp` TIMESTAMP NOT NULL,
  `create_timestamp` TIMESTAMP NOT NULL,
  `study_id` INT UNSIGNED NOT NULL,
  `name` VARCHAR(255) NOT NULL,
  `description` TEXT NULL DEFAULT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_study_id` (`study_id` ASC),
  UNIQUE INDEX `uq_study_id_name` (`study_id` ASC, `name` ASC),
  CONSTRAINT `fk_stratum_study_id`
    FOREIGN KEY (`study_id`)
    REFERENCES `cenozo`.`study` (`id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `cenozo`.`stratum_has_participant`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `cenozo`.`stratum_has_participant` ;

CREATE TABLE IF NOT EXISTS `cenozo`.`stratum_has_participant` (
  `stratum_id` INT UNSIGNED NOT NULL,
  `participant_id` INT UNSIGNED NOT NULL,
  `update_timestamp` TIMESTAMP NOT NULL,
  `create_timestamp` TIMESTAMP NOT NULL,
  PRIMARY KEY (`stratum_id`, `participant_id`),
  INDEX `fk_participant_id` (`participant_id` ASC),
  INDEX `fk_stratum_id` (`stratum_id` ASC),
  CONSTRAINT `fk_stratum_has_participant_stratum_id`
    FOREIGN KEY (`stratum_id`)
    REFERENCES `cenozo`.`stratum` (`id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_stratum_has_participant_participant_id`
    FOREIGN KEY (`participant_id`)
    REFERENCES `cenozo`.`participant` (`id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

USE `magnolia` ;

-- -----------------------------------------------------
-- Table `magnolia`.`service`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `magnolia`.`service` ;

CREATE TABLE IF NOT EXISTS `magnolia`.`service` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `update_timestamp` TIMESTAMP NOT NULL,
  `create_timestamp` TIMESTAMP NOT NULL,
  `method` ENUM('DELETE', 'GET', 'PATCH', 'POST', 'PUT') NOT NULL,
  `subject` VARCHAR(45) NOT NULL,
  `resource` TINYINT(1) NOT NULL DEFAULT 0,
  `restricted` TINYINT(1) NOT NULL DEFAULT 1,
  PRIMARY KEY (`id`),
  INDEX `uq_method_subject_resource` (`method` ASC, `subject` ASC, `resource` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `magnolia`.`writelog`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `magnolia`.`writelog` ;

CREATE TABLE IF NOT EXISTS `magnolia`.`writelog` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `user_id` INT UNSIGNED NOT NULL,
  `site_id` INT UNSIGNED NOT NULL,
  `role_id` INT UNSIGNED NOT NULL,
  `method` ENUM('DELETE', 'PATCH', 'POST', 'PUT') NOT NULL,
  `path` VARCHAR(512) NOT NULL,
  `elapsed` FLOAT NULL DEFAULT NULL,
  `status` INT NULL DEFAULT NULL,
  `datetime` DATETIME NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_user_id` (`user_id` ASC),
  INDEX `fk_site_id` (`site_id` ASC),
  INDEX `fk_role_id` (`role_id` ASC),
  INDEX `dk_datetime` (`datetime` DESC),
  CONSTRAINT `fk_writelog_user_id`
    FOREIGN KEY (`user_id`)
    REFERENCES `cenozo`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_writelog_site_id`
    FOREIGN KEY (`site_id`)
    REFERENCES `cenozo`.`site` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_writelog_role_id`
    FOREIGN KEY (`role_id`)
    REFERENCES `cenozo`.`role` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `magnolia`.`role_has_service`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `magnolia`.`role_has_service` ;

CREATE TABLE IF NOT EXISTS `magnolia`.`role_has_service` (
  `role_id` INT UNSIGNED NOT NULL,
  `service_id` INT UNSIGNED NOT NULL,
  `update_timestamp` TIMESTAMP NULL DEFAULT NULL,
  `create_timestamp` TIMESTAMP NULL DEFAULT NULL,
  PRIMARY KEY (`role_id`, `service_id`),
  INDEX `fk_role_id` (`role_id` ASC),
  INDEX `fk_service_id` (`service_id` ASC),
  CONSTRAINT `fk_role_has_service_role_id`
    FOREIGN KEY (`role_id`)
    REFERENCES `cenozo`.`role` (`id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_role_has_service_service_id`
    FOREIGN KEY (`service_id`)
    REFERENCES `magnolia`.`service` (`id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `magnolia`.`setting`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `magnolia`.`setting` ;

CREATE TABLE IF NOT EXISTS `magnolia`.`setting` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `update_timestamp` TIMESTAMP NOT NULL,
  `create_timestamp` TIMESTAMP NOT NULL,
  `site_id` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_site_id` (`site_id` ASC),
  UNIQUE INDEX `uq_site_id` (`site_id` ASC),
  CONSTRAINT `fk_setting_site_id`
    FOREIGN KEY (`site_id`)
    REFERENCES `cenozo`.`site` (`id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `magnolia`.`access`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `magnolia`.`access` ;

CREATE TABLE IF NOT EXISTS `magnolia`.`access` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `update_timestamp` TIMESTAMP NOT NULL,
  `create_timestamp` TIMESTAMP NOT NULL,
  `user_id` INT UNSIGNED NOT NULL,
  `role_id` INT UNSIGNED NOT NULL,
  `site_id` INT UNSIGNED NOT NULL,
  `datetime` DATETIME NULL DEFAULT NULL,
  `microtime` DOUBLE NULL DEFAULT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_user_id` (`user_id` ASC),
  INDEX `fk_role_id` (`role_id` ASC),
  INDEX `fk_site_id` (`site_id` ASC),
  UNIQUE INDEX `uq_user_id_role_id_site_id` (`user_id` ASC, `role_id` ASC, `site_id` ASC),
  INDEX `dk_datetime_microtime` (`datetime` ASC, `microtime` ASC),
  CONSTRAINT `fk_access_user_id`
    FOREIGN KEY (`user_id`)
    REFERENCES `cenozo`.`user` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_access_role_id`
    FOREIGN KEY (`role_id`)
    REFERENCES `cenozo`.`role` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_access_site_id`
    FOREIGN KEY (`site_id`)
    REFERENCES `cenozo`.`site` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `magnolia`.`deadline`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `magnolia`.`deadline` ;

CREATE TABLE IF NOT EXISTS `magnolia`.`deadline` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `update_timestamp` TIMESTAMP NOT NULL,
  `create_timestamp` TIMESTAMP NOT NULL,
  `name` VARCHAR(45) NOT NULL,
  `date` DATE NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `uq_date` (`date` ASC),
  UNIQUE INDEX `uq_name` (`name` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `magnolia`.`reqn_type`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `magnolia`.`reqn_type` ;

CREATE TABLE IF NOT EXISTS `magnolia`.`reqn_type` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `update_timestamp` TIMESTAMP NOT NULL,
  `create_timestamp` TIMESTAMP NOT NULL,
  `name` VARCHAR(45) NOT NULL,
  `available` TINYINT(1) NOT NULL DEFAULT 0,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `uq_name` (`name` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `magnolia`.`reqn`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `magnolia`.`reqn` ;

CREATE TABLE IF NOT EXISTS `magnolia`.`reqn` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `update_timestamp` TIMESTAMP NOT NULL,
  `create_timestamp` TIMESTAMP NOT NULL,
  `reqn_type_id` INT UNSIGNED NOT NULL,
  `user_id` INT UNSIGNED NOT NULL,
  `trainee_user_id` INT UNSIGNED NULL DEFAULT NULL,
  `language_id` INT UNSIGNED NOT NULL,
  `deadline_id` INT UNSIGNED NULL,
  `identifier` VARCHAR(45) NOT NULL,
  `external` TINYINT(1) NOT NULL DEFAULT 0,
  `data_directory` VARCHAR(255) NULL DEFAULT NULL,
  `data_expiry_date` DATE NULL DEFAULT NULL,
  `state` ENUM('deferred', 'inactive', 'abandoned') NULL DEFAULT NULL,
  `state_date` DATE NULL DEFAULT NULL,
  `website` TINYINT(1) NOT NULL DEFAULT 0,
  `instruction_filename` VARCHAR(255) NULL DEFAULT NULL,
  `suggested_revisions` TINYINT(1) NOT NULL DEFAULT 0,
  `deferral_note_amendment` TEXT NULL DEFAULT NULL,
  `deferral_note_1a` TEXT NULL DEFAULT NULL,
  `deferral_note_1b` TEXT NULL DEFAULT NULL,
  `deferral_note_1c` TEXT NULL DEFAULT NULL,
  `deferral_note_1d` TEXT NULL DEFAULT NULL,
  `deferral_note_1e` TEXT NULL DEFAULT NULL,
  `deferral_note_1f` TEXT NULL DEFAULT NULL,
  `deferral_note_2a` TEXT NULL DEFAULT NULL,
  `deferral_note_2b` TEXT NULL DEFAULT NULL,
  `deferral_note_2c` TEXT NULL DEFAULT NULL,
  `deferral_note_2d` TEXT NULL DEFAULT NULL,
  `deferral_note_2e` TEXT NULL DEFAULT NULL,
  `note` TEXT NULL DEFAULT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_user_id` (`user_id` ASC),
  INDEX `fk_language_id` (`language_id` ASC),
  INDEX `fk_deadline_id` (`deadline_id` ASC),
  UNIQUE INDEX `uq_identifier` (`identifier` ASC),
  UNIQUE INDEX `uq_data_directory` (`data_directory` ASC),
  INDEX `fk_reqn_type_id` (`reqn_type_id` ASC),
  INDEX `dk_state_date` (`state_date` ASC),
  INDEX `fk_trainee_user_id` (`trainee_user_id` ASC),
  CONSTRAINT `fk_reqn_user_id`
    FOREIGN KEY (`user_id`)
    REFERENCES `cenozo`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_reqn_language_id`
    FOREIGN KEY (`language_id`)
    REFERENCES `cenozo`.`language` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_reqn_deadline_id`
    FOREIGN KEY (`deadline_id`)
    REFERENCES `magnolia`.`deadline` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_reqn_reqn_type_id`
    FOREIGN KEY (`reqn_type_id`)
    REFERENCES `magnolia`.`reqn_type` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_reqn_trainee_user_id`
    FOREIGN KEY (`trainee_user_id`)
    REFERENCES `cenozo`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `magnolia`.`reqn_version`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `magnolia`.`reqn_version` ;

CREATE TABLE IF NOT EXISTS `magnolia`.`reqn_version` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `update_timestamp` TIMESTAMP NOT NULL,
  `create_timestamp` TIMESTAMP NOT NULL,
  `reqn_id` INT UNSIGNED NOT NULL,
  `new_user_id` INT UNSIGNED NULL DEFAULT NULL,
  `amendment` CHAR(1) NOT NULL DEFAULT '.',
  `version` INT UNSIGNED NOT NULL DEFAULT 1,
  `datetime` DATETIME NOT NULL,
  `applicant_position` VARCHAR(255) NULL DEFAULT NULL,
  `applicant_affiliation` VARCHAR(255) NULL DEFAULT NULL,
  `applicant_address` VARCHAR(511) NULL DEFAULT NULL,
  `applicant_phone` VARCHAR(45) NULL DEFAULT NULL,
  `trainee_program` VARCHAR(255) NULL DEFAULT NULL,
  `trainee_institution` VARCHAR(255) NULL DEFAULT NULL,
  `trainee_address` VARCHAR(511) NULL DEFAULT NULL,
  `trainee_phone` VARCHAR(45) NULL DEFAULT NULL,
  `coapplicant_agreement_filename` VARCHAR(255) NULL DEFAULT NULL,
  `start_date` DATE NULL DEFAULT NULL,
  `duration` ENUM('2 years', '3 years', '2 years + 1 additional year', '2 years + 2 additional years', '2 years + 3 additional years', '3 years + 1 additional year', '3 years + 2 additional years', '3 years + 3 additional years') NULL DEFAULT NULL,
  `title` VARCHAR(511) NULL DEFAULT NULL,
  `keywords` VARCHAR(255) NULL DEFAULT NULL,
  `lay_summary` VARCHAR(2047) NULL DEFAULT NULL,
  `background` TEXT NULL DEFAULT NULL,
  `objectives` TEXT NULL DEFAULT NULL,
  `methodology` TEXT NULL DEFAULT NULL,
  `analysis` TEXT NULL DEFAULT NULL,
  `funding` ENUM('yes', 'no', 'requested') NULL DEFAULT NULL,
  `funding_filename` VARCHAR(255) NULL DEFAULT NULL,
  `funding_agency` VARCHAR(255) NULL DEFAULT NULL,
  `grant_number` VARCHAR(45) NULL DEFAULT NULL,
  `ethics` ENUM('yes', 'no', 'exempt') NULL DEFAULT NULL,
  `ethics_date` DATE NULL DEFAULT NULL,
  `ethics_filename` VARCHAR(255) NULL DEFAULT NULL,
  `waiver` ENUM('graduate', 'postdoc') NULL DEFAULT NULL,
  `comprehensive` TINYINT(1) NULL DEFAULT NULL,
  `tracking` TINYINT(1) NULL DEFAULT NULL,
  `longitudinal` TINYINT(1) NULL DEFAULT NULL,
  `previous_identifier` CHAR(10) NULL DEFAULT NULL,
  `data_sharing_filename` VARCHAR(255) NULL DEFAULT NULL,
  `agreement_filename` VARCHAR(255) NULL DEFAULT NULL,
  `part2_a_comment` TEXT NULL DEFAULT NULL,
  `part2_b_comment` TEXT NULL DEFAULT NULL,
  `part2_c_comment` TEXT NULL DEFAULT NULL,
  `part2_d_comment` TEXT NULL DEFAULT NULL,
  `cimt` TINYINT(1) NOT NULL DEFAULT 0,
  `cimt_justification` TEXT NULL DEFAULT NULL,
  `dxa` TINYINT(1) NOT NULL DEFAULT 0,
  `dxa_justification` TEXT NULL DEFAULT NULL,
  `ecg` TINYINT(1) NOT NULL DEFAULT 0,
  `ecg_justification` TEXT NULL DEFAULT NULL,
  `retinal` TINYINT(1) NOT NULL DEFAULT 0,
  `retinal_justification` TEXT NULL DEFAULT NULL,
  `spirometry` TINYINT(1) NOT NULL DEFAULT 0,
  `spirometry_justification` TEXT NULL DEFAULT NULL,
  `tonometry` TINYINT(1) NOT NULL DEFAULT 0,
  `tonometry_justification` TEXT NULL DEFAULT NULL,
  `fsa` TINYINT(1) NOT NULL DEFAULT 0,
  `fsa_justification` TEXT NULL DEFAULT NULL,
  `csd` TINYINT(1) NOT NULL DEFAULT 0,
  `csd_justification` TEXT NULL DEFAULT NULL,
  `amendment_justification` TEXT NULL DEFAULT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_reqn_id` (`reqn_id` ASC),
  UNIQUE INDEX `uq_reqn_id_amendment_version` (`reqn_id` ASC, `amendment` ASC, `version` ASC),
  INDEX `fk_new_user_id` (`new_user_id` ASC),
  CONSTRAINT `fk_reqn_version_reqn_id`
    FOREIGN KEY (`reqn_id`)
    REFERENCES `magnolia`.`reqn` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_reqn_version_new_user_id`
    FOREIGN KEY (`new_user_id`)
    REFERENCES `cenozo`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `magnolia`.`coapplicant`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `magnolia`.`coapplicant` ;

CREATE TABLE IF NOT EXISTS `magnolia`.`coapplicant` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `update_timestamp` TIMESTAMP NOT NULL,
  `create_timestamp` TIMESTAMP NOT NULL,
  `reqn_version_id` INT UNSIGNED NOT NULL,
  `name` VARCHAR(63) NOT NULL,
  `position` VARCHAR(255) NOT NULL,
  `affiliation` VARCHAR(255) NOT NULL,
  `email` VARCHAR(127) NOT NULL,
  `role` VARCHAR(45) NOT NULL,
  `access` TINYINT(1) NOT NULL DEFAULT 1,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `uq_reqn_version_id_name` (`reqn_version_id` ASC, `name` ASC),
  INDEX `fk_reqn_version_id` (`reqn_version_id` ASC),
  CONSTRAINT `fk_coapplicant_reqn_version_id`
    FOREIGN KEY (`reqn_version_id`)
    REFERENCES `magnolia`.`reqn_version` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `magnolia`.`reference`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `magnolia`.`reference` ;

CREATE TABLE IF NOT EXISTS `magnolia`.`reference` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `update_timestamp` TIMESTAMP NOT NULL,
  `create_timestamp` TIMESTAMP NOT NULL,
  `reqn_version_id` INT UNSIGNED NOT NULL,
  `rank` INT UNSIGNED NOT NULL,
  `reference` VARCHAR(512) NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_reqn_version_id` (`reqn_version_id` ASC),
  UNIQUE INDEX `uq_reqn_version_id_rank` (`reqn_version_id` ASC, `rank` ASC),
  CONSTRAINT `fk_reference_reqn_version_id`
    FOREIGN KEY (`reqn_version_id`)
    REFERENCES `magnolia`.`reqn_version` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `magnolia`.`data_option_category`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `magnolia`.`data_option_category` ;

CREATE TABLE IF NOT EXISTS `magnolia`.`data_option_category` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `update_timestamp` TIMESTAMP NOT NULL,
  `create_timestamp` TIMESTAMP NOT NULL,
  `rank` INT UNSIGNED NOT NULL,
  `name_en` VARCHAR(127) NOT NULL,
  `name_fr` VARCHAR(127) NOT NULL,
  `note_en` TEXT NULL DEFAULT NULL,
  `note_fr` TEXT NULL DEFAULT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `uq_rank` (`rank` ASC),
  UNIQUE INDEX `uq_name_en` (`name_en` ASC),
  UNIQUE INDEX `uq_name_fr` (`name_fr` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `magnolia`.`data_option`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `magnolia`.`data_option` ;

CREATE TABLE IF NOT EXISTS `magnolia`.`data_option` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `update_timestamp` TIMESTAMP NOT NULL,
  `create_timestamp` TIMESTAMP NOT NULL,
  `data_option_category_id` INT UNSIGNED NOT NULL,
  `rank` INT UNSIGNED NOT NULL,
  `name_en` VARCHAR(127) NOT NULL,
  `name_fr` VARCHAR(127) NOT NULL,
  `note_en` TEXT NULL DEFAULT NULL,
  `note_fr` TEXT NULL DEFAULT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_data_option_category_id` (`data_option_category_id` ASC),
  UNIQUE INDEX `uq_data_option_category_id_rank` (`data_option_category_id` ASC, `rank` ASC),
  UNIQUE INDEX `uq_name_en` (`name_en` ASC),
  UNIQUE INDEX `uq_name_fr` (`name_fr` ASC),
  CONSTRAINT `fk_data_option_data_option_category_id`
    FOREIGN KEY (`data_option_category_id`)
    REFERENCES `magnolia`.`data_option_category` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `magnolia`.`final_report`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `magnolia`.`final_report` ;

CREATE TABLE IF NOT EXISTS `magnolia`.`final_report` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `update_timestamp` TIMESTAMP NOT NULL,
  `create_timestamp` TIMESTAMP NOT NULL,
  `reqn_id` INT UNSIGNED NOT NULL,
  `activities` TEXT NULL DEFAULT NULL,
  `findings` TEXT NULL DEFAULT NULL,
  `outcomes` TEXT NULL DEFAULT NULL,
  `thesis_status` TEXT NULL DEFAULT NULL,
  `thesis_title` TEXT NULL DEFAULT NULL,
  `impact` TEXT NULL DEFAULT NULL,
  `opportunities` TEXT NULL DEFAULT NULL,
  `dissemination` TEXT NULL DEFAULT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `uq_reqn_id` (`reqn_id` ASC),
  INDEX `fk_reqn_id` (`reqn_id` ASC),
  UNIQUE INDEX `uq_reqn_id` (`reqn_id` ASC),
  CONSTRAINT `fk_final_report_reqn_id`
    FOREIGN KEY (`reqn_id`)
    REFERENCES `magnolia`.`reqn` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `magnolia`.`production_type`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `magnolia`.`production_type` ;

CREATE TABLE IF NOT EXISTS `magnolia`.`production_type` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `update_timestamp` TIMESTAMP NOT NULL,
  `create_timestamp` TIMESTAMP NOT NULL,
  `rank` INT NOT NULL,
  `name_en` VARCHAR(127) NOT NULL,
  `name_fr` VARCHAR(127) NOT NULL,
  `note_en` VARCHAR(255) NULL DEFAULT NULL,
  `note_fr` VARCHAR(255) NULL DEFAULT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `uq_rank` (`rank` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `magnolia`.`production`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `magnolia`.`production` ;

CREATE TABLE IF NOT EXISTS `magnolia`.`production` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `update_timestamp` TIMESTAMP NOT NULL,
  `create_timestamp` TIMESTAMP NOT NULL,
  `final_report_id` INT UNSIGNED NOT NULL,
  `production_type_id` INT UNSIGNED NOT NULL,
  `detail` VARCHAR(1023) NOT NULL,
  `filename` VARCHAR(255) NULL DEFAULT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_final_report_id` (`final_report_id` ASC),
  INDEX `fk_production_type_id` (`production_type_id` ASC),
  CONSTRAINT `fk_production_final_report_id`
    FOREIGN KEY (`final_report_id`)
    REFERENCES `magnolia`.`final_report` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_production_type_id1`
    FOREIGN KEY (`production_type_id`)
    REFERENCES `magnolia`.`production_type` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `magnolia`.`notification_type`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `magnolia`.`notification_type` ;

CREATE TABLE IF NOT EXISTS `magnolia`.`notification_type` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `update_timestamp` TIMESTAMP NOT NULL,
  `create_timestamp` TIMESTAMP NOT NULL,
  `name` VARCHAR(45) NOT NULL,
  `title_en` VARCHAR(127) NOT NULL,
  `title_fr` VARCHAR(127) NOT NULL,
  `message_en` TEXT NOT NULL,
  `message_fr` TEXT NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `uq_name` (`name` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `magnolia`.`stage_type`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `magnolia`.`stage_type` ;

CREATE TABLE IF NOT EXISTS `magnolia`.`stage_type` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `update_timestamp` TIMESTAMP NOT NULL,
  `create_timestamp` TIMESTAMP NOT NULL,
  `phase` ENUM('new', 'review', 'active', 'complete') NOT NULL,
  `rank` INT UNSIGNED NOT NULL,
  `name` VARCHAR(45) NOT NULL,
  `status` VARCHAR(45) NOT NULL,
  `notification_type_id` INT UNSIGNED NULL DEFAULT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `uq_name` (`name` ASC),
  UNIQUE INDEX `uq_rank` (`rank` ASC),
  INDEX `fk_notification_type_id` (`notification_type_id` ASC),
  CONSTRAINT `fk_stage_type_notification_type_id`
    FOREIGN KEY (`notification_type_id`)
    REFERENCES `magnolia`.`notification_type` (`id`)
    ON DELETE SET NULL
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `magnolia`.`stage`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `magnolia`.`stage` ;

CREATE TABLE IF NOT EXISTS `magnolia`.`stage` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `update_timestamp` TIMESTAMP NOT NULL,
  `create_timestamp` TIMESTAMP NOT NULL,
  `reqn_id` INT UNSIGNED NOT NULL,
  `stage_type_id` INT UNSIGNED NOT NULL,
  `user_id` INT UNSIGNED NULL DEFAULT NULL,
  `datetime` DATETIME NULL DEFAULT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_stage_type_id` (`stage_type_id` ASC),
  INDEX `fk_user_id` (`user_id` ASC),
  INDEX `fk_reqn_id` (`reqn_id` ASC),
  CONSTRAINT `fk_stage_stage_type_id`
    FOREIGN KEY (`stage_type_id`)
    REFERENCES `magnolia`.`stage_type` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_stage_user_id`
    FOREIGN KEY (`user_id`)
    REFERENCES `cenozo`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_stage_reqn_id`
    FOREIGN KEY (`reqn_id`)
    REFERENCES `magnolia`.`reqn` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `magnolia`.`stage_type_has_stage_type`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `magnolia`.`stage_type_has_stage_type` ;

CREATE TABLE IF NOT EXISTS `magnolia`.`stage_type_has_stage_type` (
  `stage_type_id` INT UNSIGNED NOT NULL,
  `next_stage_type_id` INT UNSIGNED NOT NULL,
  `update_timestamp` TIMESTAMP NOT NULL,
  `create_timestamp` TIMESTAMP NOT NULL,
  PRIMARY KEY (`stage_type_id`, `next_stage_type_id`),
  INDEX `fk_next_stage_type_id` (`next_stage_type_id` ASC),
  INDEX `fk_stage_type_id` (`stage_type_id` ASC),
  CONSTRAINT `fk_stage_type_has_stage_type_stage_type_id`
    FOREIGN KEY (`stage_type_id`)
    REFERENCES `magnolia`.`stage_type` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_stage_type_has_stage_type_next_stage_type_id`
    FOREIGN KEY (`next_stage_type_id`)
    REFERENCES `magnolia`.`stage_type` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `magnolia`.`notification`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `magnolia`.`notification` ;

CREATE TABLE IF NOT EXISTS `magnolia`.`notification` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `update_timestamp` TIMESTAMP NOT NULL,
  `create_timestamp` TIMESTAMP NOT NULL,
  `reqn_id` INT UNSIGNED NOT NULL,
  `notification_type_id` INT UNSIGNED NOT NULL,
  `datetime` DATETIME NOT NULL,
  `sent` TINYINT(1) NOT NULL DEFAULT 0,
  PRIMARY KEY (`id`),
  INDEX `fk_notification_type_id` (`notification_type_id` ASC),
  INDEX `fk_reqn_id` (`reqn_id` ASC),
  CONSTRAINT `fk_notification_notification_type_id`
    FOREIGN KEY (`notification_type_id`)
    REFERENCES `magnolia`.`notification_type` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_notification_reqn_id`
    FOREIGN KEY (`reqn_id`)
    REFERENCES `magnolia`.`reqn` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `magnolia`.`review_type`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `magnolia`.`review_type` ;

CREATE TABLE IF NOT EXISTS `magnolia`.`review_type` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `update_timestamp` TIMESTAMP NOT NULL,
  `create_timestamp` TIMESTAMP NOT NULL,
  `name` VARCHAR(45) NOT NULL,
  `stage_type_id` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_stage_type_id` (`stage_type_id` ASC),
  UNIQUE INDEX `uq_name` (`name` ASC),
  CONSTRAINT `fk_review_type_stage_type_id`
    FOREIGN KEY (`stage_type_id`)
    REFERENCES `magnolia`.`stage_type` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `magnolia`.`recommendation_type`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `magnolia`.`recommendation_type` ;

CREATE TABLE IF NOT EXISTS `magnolia`.`recommendation_type` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `update_timestamp` TIMESTAMP NOT NULL,
  `create_timestamp` TIMESTAMP NOT NULL,
  `name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `uq_name` (`name` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `magnolia`.`review`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `magnolia`.`review` ;

CREATE TABLE IF NOT EXISTS `magnolia`.`review` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `update_timestamp` TIMESTAMP NOT NULL,
  `create_timestamp` TIMESTAMP NOT NULL,
  `reqn_id` INT UNSIGNED NOT NULL,
  `amendment` CHAR(1) NOT NULL DEFAULT '.',
  `review_type_id` INT UNSIGNED NOT NULL,
  `user_id` INT UNSIGNED NULL DEFAULT NULL,
  `date` DATE NOT NULL,
  `recommendation_type_id` INT UNSIGNED NULL DEFAULT NULL,
  `note` TEXT NULL DEFAULT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_user_id` (`user_id` ASC),
  INDEX `fk_review_review_type_id` (`review_type_id` ASC),
  INDEX `fk_recommendation_type_id` (`recommendation_type_id` ASC),
  INDEX `fk_reqn_id` (`reqn_id` ASC),
  UNIQUE INDEX `uq_reqn_id_amendment_review_type_id` (`reqn_id` ASC, `amendment` ASC, `review_type_id` ASC),
  CONSTRAINT `fk_review_user_id`
    FOREIGN KEY (`user_id`)
    REFERENCES `cenozo`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_review_review_type_id`
    FOREIGN KEY (`review_type_id`)
    REFERENCES `magnolia`.`review_type` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_review_recommendation_type_id`
    FOREIGN KEY (`recommendation_type_id`)
    REFERENCES `magnolia`.`recommendation_type` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_review_reqn_id`
    FOREIGN KEY (`reqn_id`)
    REFERENCES `magnolia`.`reqn` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `magnolia`.`pdf_form_type`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `magnolia`.`pdf_form_type` ;

CREATE TABLE IF NOT EXISTS `magnolia`.`pdf_form_type` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `update_timestamp` TIMESTAMP NOT NULL,
  `create_timestamp` TIMESTAMP NOT NULL,
  `name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `uq_name` (`name` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `magnolia`.`pdf_form`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `magnolia`.`pdf_form` ;

CREATE TABLE IF NOT EXISTS `magnolia`.`pdf_form` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `update_timestamp` TIMESTAMP NOT NULL,
  `create_timestamp` TIMESTAMP NOT NULL,
  `pdf_form_type_id` INT UNSIGNED NOT NULL,
  `version` DATE NOT NULL,
  `active` TINYINT(1) NOT NULL DEFAULT 0,
  `filename` VARCHAR(255) NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_pdf_form_type_id` (`pdf_form_type_id` ASC),
  UNIQUE INDEX `uq_pdf_form_type_id_version` (`pdf_form_type_id` ASC, `version` ASC),
  CONSTRAINT `fk_pdf_form_pdf_form_type_id`
    FOREIGN KEY (`pdf_form_type_id`)
    REFERENCES `magnolia`.`pdf_form_type` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `magnolia`.`role_has_review_type`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `magnolia`.`role_has_review_type` ;

CREATE TABLE IF NOT EXISTS `magnolia`.`role_has_review_type` (
  `role_id` INT UNSIGNED NOT NULL,
  `review_type_id` INT UNSIGNED NOT NULL,
  `update_timestamp` TIMESTAMP NOT NULL,
  `create_timestamp` TIMESTAMP NOT NULL,
  PRIMARY KEY (`role_id`, `review_type_id`),
  INDEX `fk_review_type_id` (`review_type_id` ASC),
  INDEX `fk_role_id` (`role_id` ASC),
  CONSTRAINT `fk_role_has_review_type_role_id`
    FOREIGN KEY (`role_id`)
    REFERENCES `cenozo`.`role` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_role_has_review_type_review_type_id`
    FOREIGN KEY (`review_type_id`)
    REFERENCES `magnolia`.`review_type` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `magnolia`.`notification_type_email`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `magnolia`.`notification_type_email` ;

CREATE TABLE IF NOT EXISTS `magnolia`.`notification_type_email` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `update_timestamp` TIMESTAMP NOT NULL,
  `create_timestamp` TIMESTAMP NOT NULL,
  `notification_type_id` INT UNSIGNED NOT NULL,
  `email` VARCHAR(127) NULL,
  `blind` TINYINT(1) NOT NULL DEFAULT 0,
  PRIMARY KEY (`id`),
  INDEX `fk_notification_type_id` (`notification_type_id` ASC),
  UNIQUE INDEX `uq_notification_type_id_email` (`notification_type_id` ASC, `email` ASC),
  CONSTRAINT `fk_notification_type_email_notification_type_id`
    FOREIGN KEY (`notification_type_id`)
    REFERENCES `magnolia`.`notification_type` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `magnolia`.`data_option_detail`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `magnolia`.`data_option_detail` ;

CREATE TABLE IF NOT EXISTS `magnolia`.`data_option_detail` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `update_timestamp` TIMESTAMP NOT NULL,
  `create_timestamp` TIMESTAMP NOT NULL,
  `data_option_id` INT UNSIGNED NOT NULL,
  `study_phase_id` INT UNSIGNED NOT NULL,
  `rank` INT UNSIGNED NOT NULL,
  `name_en` VARCHAR(127) NOT NULL,
  `name_fr` VARCHAR(127) NOT NULL,
  `note_en` TEXT NULL DEFAULT NULL,
  `note_fr` TEXT NULL DEFAULT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_data_option_id` (`data_option_id` ASC),
  INDEX `fk_study_phase_id` (`study_phase_id` ASC),
  UNIQUE INDEX `uq_data_option_id_study_phase_id_rank` (`data_option_id` ASC, `study_phase_id` ASC, `rank` ASC),
  CONSTRAINT `fk_data_option_detail_data_option_id`
    FOREIGN KEY (`data_option_id`)
    REFERENCES `magnolia`.`data_option` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_data_option_detail_study_phase_id`
    FOREIGN KEY (`study_phase_id`)
    REFERENCES `cenozo`.`study_phase` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `magnolia`.`review_type_has_recommendation_type`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `magnolia`.`review_type_has_recommendation_type` ;

CREATE TABLE IF NOT EXISTS `magnolia`.`review_type_has_recommendation_type` (
  `review_type_id` INT UNSIGNED NOT NULL,
  `recommendation_type_id` INT UNSIGNED NOT NULL,
  `update_timestamp` TIMESTAMP NOT NULL,
  `create_timestamp` TIMESTAMP NOT NULL,
  PRIMARY KEY (`review_type_id`, `recommendation_type_id`),
  INDEX `fk_recommendation_type_id` (`recommendation_type_id` ASC),
  INDEX `fk_review_type_id` (`review_type_id` ASC),
  CONSTRAINT `fk_review_type_has_recommendation_typereview_type_id`
    FOREIGN KEY (`review_type_id`)
    REFERENCES `magnolia`.`review_type` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_review_type_has_recommendation_typerecommendation_type_id`
    FOREIGN KEY (`recommendation_type_id`)
    REFERENCES `magnolia`.`recommendation_type` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `magnolia`.`applicant`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `magnolia`.`applicant` ;

CREATE TABLE IF NOT EXISTS `magnolia`.`applicant` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `update_timestamp` TIMESTAMP NOT NULL,
  `create_timestamp` TIMESTAMP NOT NULL,
  `user_id` INT UNSIGNED NOT NULL,
  `supervisor_user_id` INT UNSIGNED NULL DEFAULT NULL,
  `newsletter` TINYINT(1) NOT NULL DEFAULT 0,
  PRIMARY KEY (`id`),
  INDEX `fk_user_id` (`user_id` ASC),
  UNIQUE INDEX `uq_user_id` (`user_id` ASC),
  INDEX `fk_supervisor_user_id` (`supervisor_user_id` ASC),
  CONSTRAINT `fk_applicant_user_id`
    FOREIGN KEY (`user_id`)
    REFERENCES `cenozo`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_applicant_supervisor_user_id`
    FOREIGN KEY (`supervisor_user_id`)
    REFERENCES `cenozo`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `magnolia`.`supplemental_file`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `magnolia`.`supplemental_file` ;

CREATE TABLE IF NOT EXISTS `magnolia`.`supplemental_file` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `update_timestamp` TIMESTAMP NOT NULL,
  `create_timestamp` TIMESTAMP NOT NULL,
  `name_en` VARCHAR(127) NOT NULL,
  `name_fr` VARCHAR(127) NOT NULL,
  `filename_en` VARCHAR(255) NULL,
  `filename_fr` VARCHAR(255) NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `uq_name_en` (`name_en` ASC),
  UNIQUE INDEX `uq_name_fr` (`name_fr` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `magnolia`.`data_option_has_study_phase`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `magnolia`.`data_option_has_study_phase` ;

CREATE TABLE IF NOT EXISTS `magnolia`.`data_option_has_study_phase` (
  `data_option_id` INT UNSIGNED NOT NULL,
  `study_phase_id` INT UNSIGNED NOT NULL,
  `update_timestamp` TIMESTAMP NOT NULL,
  `create_timestamp` TIMESTAMP NOT NULL,
  PRIMARY KEY (`data_option_id`, `study_phase_id`),
  INDEX `fk_study_phase_id` (`study_phase_id` ASC),
  INDEX `fk_data_option_has_study_phase_data_option_id` (`data_option_id` ASC),
  CONSTRAINT `fk_data_option_has_study_phase_data_option_id`
    FOREIGN KEY (`data_option_id`)
    REFERENCES `magnolia`.`data_option` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_data_option_has_study_phase_study_phase_id`
    FOREIGN KEY (`study_phase_id`)
    REFERENCES `cenozo`.`study_phase` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `magnolia`.`reqn_version_data_option`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `magnolia`.`reqn_version_data_option` ;

CREATE TABLE IF NOT EXISTS `magnolia`.`reqn_version_data_option` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `update_timestamp` TIMESTAMP NOT NULL,
  `create_timestamp` TIMESTAMP NOT NULL,
  `reqn_version_id` INT UNSIGNED NOT NULL,
  `data_option_id` INT UNSIGNED NOT NULL,
  `study_phase_id` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_reqn_version_id` (`reqn_version_id` ASC),
  INDEX `fk_data_option_id` (`data_option_id` ASC),
  INDEX `fk_study_phase_id` (`study_phase_id` ASC),
  UNIQUE INDEX `uq_reqn_version_id_data_option_id_study_phase_id` (`reqn_version_id` ASC, `data_option_id` ASC, `study_phase_id` ASC),
  CONSTRAINT `fk_reqn_version_data_option_reqn_version_id`
    FOREIGN KEY (`reqn_version_id`)
    REFERENCES `magnolia`.`reqn_version` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_reqn_version_data_option_data_option_id`
    FOREIGN KEY (`data_option_id`)
    REFERENCES `magnolia`.`data_option` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_reqn_version_data_option_study_phase_id`
    FOREIGN KEY (`study_phase_id`)
    REFERENCES `cenozo`.`study_phase` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `magnolia`.`reqn_current_reqn_version`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `magnolia`.`reqn_current_reqn_version` ;

CREATE TABLE IF NOT EXISTS `magnolia`.`reqn_current_reqn_version` (
  `reqn_id` INT UNSIGNED NOT NULL,
  `reqn_version_id` INT UNSIGNED NULL,
  `update_timestamp` TIMESTAMP NOT NULL,
  `create_timestamp` TIMESTAMP NOT NULL,
  PRIMARY KEY (`reqn_id`),
  INDEX `fk_reqn_version_id` (`reqn_version_id` ASC),
  CONSTRAINT `fk_reqn_current_reqn_version_reqn_id`
    FOREIGN KEY (`reqn_id`)
    REFERENCES `magnolia`.`reqn` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_reqn_current_reqn_version_reqn_version_id`
    FOREIGN KEY (`reqn_version_id`)
    REFERENCES `magnolia`.`reqn_version` (`id`)
    ON DELETE SET NULL
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `magnolia`.`notification_email`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `magnolia`.`notification_email` ;

CREATE TABLE IF NOT EXISTS `magnolia`.`notification_email` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `update_timestamp` TIMESTAMP NOT NULL,
  `create_timestamp` TIMESTAMP NOT NULL,
  `notification_id` INT UNSIGNED NOT NULL,
  `email` VARCHAR(127) NOT NULL,
  `name` VARCHAR(127) NULL DEFAULT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_notification_id` (`notification_id` ASC),
  UNIQUE INDEX `uq_notification_id_email` (`notification_id` ASC, `email` ASC),
  CONSTRAINT `fk_notification_email_notification_id`
    FOREIGN KEY (`notification_id`)
    REFERENCES `magnolia`.`notification` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `magnolia`.`reqn_type_has_stage_type`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `magnolia`.`reqn_type_has_stage_type` ;

CREATE TABLE IF NOT EXISTS `magnolia`.`reqn_type_has_stage_type` (
  `reqn_type_id` INT UNSIGNED NOT NULL,
  `stage_type_id` INT UNSIGNED NOT NULL,
  `update_timestamp` TIMESTAMP NOT NULL,
  `create_timestamp` TIMESTAMP NOT NULL,
  PRIMARY KEY (`reqn_type_id`, `stage_type_id`),
  INDEX `fk_stage_type_id` (`stage_type_id` ASC),
  INDEX `fk_reqn_type_id` (`reqn_type_id` ASC),
  CONSTRAINT `fk_reqn_type_has_stage_type_reqn_type_id`
    FOREIGN KEY (`reqn_type_id`)
    REFERENCES `magnolia`.`reqn_type` (`id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_reqn_type_has_stage_type_stage_type_id`
    FOREIGN KEY (`stage_type_id`)
    REFERENCES `magnolia`.`stage_type` (`id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `magnolia`.`amendment_type`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `magnolia`.`amendment_type` ;

CREATE TABLE IF NOT EXISTS `magnolia`.`amendment_type` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `update_timestamp` TIMESTAMP NOT NULL,
  `create_timestamp` TIMESTAMP NOT NULL,
  `rank` INT UNSIGNED NOT NULL,
  `new_user` TINYINT(1) NOT NULL DEFAULT 0,
  `reason_en` VARCHAR(127) NOT NULL,
  `reason_fr` VARCHAR(127) NOT NULL,
  `justification_prompt_en` TEXT NULL DEFAULT NULL,
  `justification_prompt_fr` TEXT NULL DEFAULT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `uq_reason_en` (`reason_en` ASC),
  UNIQUE INDEX `uq_reason_fr` (`reason_fr` ASC),
  UNIQUE INDEX `uq_rank` (`rank` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `magnolia`.`notice`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `magnolia`.`notice` ;

CREATE TABLE IF NOT EXISTS `magnolia`.`notice` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `update_timestamp` TIMESTAMP NOT NULL,
  `create_timestamp` TIMESTAMP NOT NULL,
  `reqn_id` INT UNSIGNED NOT NULL,
  `datetime` DATETIME NOT NULL,
  `title` VARCHAR(127) NOT NULL,
  `description` TEXT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_reqn_id` (`reqn_id` ASC),
  CONSTRAINT `fk_notice_reqn_id`
    FOREIGN KEY (`reqn_id`)
    REFERENCES `magnolia`.`reqn` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `magnolia`.`data_version`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `magnolia`.`data_version` ;

CREATE TABLE IF NOT EXISTS `magnolia`.`data_version` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `update_timestamp` TIMESTAMP NOT NULL,
  `create_timestamp` TIMESTAMP NOT NULL,
  `name` VARCHAR(127) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `uq_name` (`name` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `magnolia`.`data_release`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `magnolia`.`data_release` ;

CREATE TABLE IF NOT EXISTS `magnolia`.`data_release` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `update_timestamp` TIMESTAMP NOT NULL,
  `create_timestamp` TIMESTAMP NOT NULL,
  `reqn_id` INT UNSIGNED NOT NULL,
  `data_version_id` INT UNSIGNED NOT NULL,
  `category` ENUM('standard', 'amendment', 'data release update') NOT NULL DEFAULT 'standard',
  `date` DATE NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_reqn_id` (`reqn_id` ASC),
  INDEX `fk_data_version_id` (`data_version_id` ASC),
  CONSTRAINT `fk_data_release_reqn_id`
    FOREIGN KEY (`reqn_id`)
    REFERENCES `magnolia`.`reqn` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_data_release_data_version_id`
    FOREIGN KEY (`data_version_id`)
    REFERENCES `magnolia`.`data_version` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `magnolia`.`reqn_version_has_amendment_type`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `magnolia`.`reqn_version_has_amendment_type` ;

CREATE TABLE IF NOT EXISTS `magnolia`.`reqn_version_has_amendment_type` (
  `reqn_version_id` INT UNSIGNED NOT NULL,
  `amendment_type_id` INT UNSIGNED NOT NULL,
  `update_timestamp` TIMESTAMP NOT NULL,
  `create_timestamp` TIMESTAMP NOT NULL,
  PRIMARY KEY (`reqn_version_id`, `amendment_type_id`),
  INDEX `fk_amendment_type_id` (`amendment_type_id` ASC),
  INDEX `fk_reqn_version_id` (`reqn_version_id` ASC),
  CONSTRAINT `fk_reqn_version_has_amendment_type_reqn_version_id`
    FOREIGN KEY (`reqn_version_id`)
    REFERENCES `magnolia`.`reqn_version` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_reqn_version_has_amendment_type_amendment_type_id`
    FOREIGN KEY (`amendment_type_id`)
    REFERENCES `magnolia`.`amendment_type` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `magnolia`.`publication`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `magnolia`.`publication` ;

CREATE TABLE IF NOT EXISTS `magnolia`.`publication` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `update_timestamp` TIMESTAMP NOT NULL,
  `create_timestamp` TIMESTAMP NOT NULL,
  `reqn_id` INT UNSIGNED NOT NULL,
  `filename` VARCHAR(255) NOT NULL,
  `reference` VARCHAR(512) NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_reqn_id1_idx` (`reqn_id` ASC),
  CONSTRAINT `fk_reqn_id1`
    FOREIGN KEY (`reqn_id`)
    REFERENCES `magnolia`.`reqn` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `magnolia`.`ethics_approval`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `magnolia`.`ethics_approval` ;

CREATE TABLE IF NOT EXISTS `magnolia`.`ethics_approval` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `update_timestamp` TIMESTAMP NOT NULL,
  `create_timestamp` TIMESTAMP NOT NULL,
  `reqn_id` INT UNSIGNED NOT NULL,
  `filename` VARCHAR(255) NOT NULL,
  `date` DATE NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_reqn_id` (`reqn_id` ASC),
  UNIQUE INDEX `uq_reqn_id_date` (`reqn_id` ASC, `date` ASC),
  CONSTRAINT `fk_ethics_approval_reqn_id`
    FOREIGN KEY (`reqn_id`)
    REFERENCES `magnolia`.`reqn` (`id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `magnolia`.`reqn_last_ethics_approval`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `magnolia`.`reqn_last_ethics_approval` ;

CREATE TABLE IF NOT EXISTS `magnolia`.`reqn_last_ethics_approval` (
  `reqn_id` INT UNSIGNED NOT NULL,
  `ethics_approval_id` INT UNSIGNED NULL DEFAULT NULL,
  `update_timestamp` TIMESTAMP NOT NULL,
  `create_timestamp` TIMESTAMP NOT NULL,
  PRIMARY KEY (`reqn_id`),
  INDEX `fk_ethics_approval_id` (`ethics_approval_id` ASC),
  CONSTRAINT `fk_reqn_last_ethics_approval_reqn_id`
    FOREIGN KEY (`reqn_id`)
    REFERENCES `magnolia`.`reqn` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_reqn_last_ethics_approval_ethics_approval_id`
    FOREIGN KEY (`ethics_approval_id`)
    REFERENCES `magnolia`.`ethics_approval` (`id`)
    ON DELETE SET NULL
    ON UPDATE CASCADE)
ENGINE = InnoDB;

USE `magnolia` ;

-- -----------------------------------------------------
-- procedure update_reqn_current_reqn_version
-- -----------------------------------------------------

USE `magnolia`;
DROP procedure IF EXISTS `magnolia`.`update_reqn_current_reqn_version`;

DELIMITER $$
USE `magnolia`$$
CREATE PROCEDURE `update_reqn_current_reqn_version` (IN proc_reqn_id INT(10) UNSIGNED)
BEGIN
  REPLACE INTO reqn_current_reqn_version( reqn_id, reqn_version_id )
  SELECT reqn.id, reqn_version.id
  FROM reqn
  LEFT JOIN reqn_version ON reqn.id = reqn_version.reqn_id
  AND CONCAT( reqn_version.amendment, reqn_version.version ) <=> (
    SELECT MAX( CONCAT( amendment, version ) )
    FROM reqn_version
    WHERE reqn.id = reqn_version.reqn_id
    GROUP BY reqn_version.reqn_id
    LIMIT 1
  )
  WHERE reqn.id = proc_reqn_id;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure update_reqn_last_ethics_approval
-- -----------------------------------------------------

USE `magnolia`;
DROP procedure IF EXISTS `magnolia`.`update_reqn_last_ethics_approval`;

DELIMITER $$
USE `magnolia`$$
CREATE PROCEDURE `update_reqn_last_ethics_approval` (IN proc_reqn_id INT(10) UNSIGNED)
BEGIN
  REPLACE INTO reqn_last_ethics_approval( reqn_id, ethics_approval_id )
  SELECT reqn.id, ethics_approval.id
  FROM reqn
  LEFT JOIN ethics_approval ON reqn.id = ethics_approval.reqn_id
  AND ethics_approval.date <=> (
    SELECT MAX( date )
    FROM ethics_approval
    WHERE reqn.id = ethics_approval.reqn_id
    GROUP BY ethics_approval.reqn_id
    LIMIT 1
  )
  WHERE reqn.id = proc_reqn_id;
END$$

DELIMITER ;
USE `cenozo`;

DELIMITER $$

USE `cenozo`$$
DROP TRIGGER IF EXISTS `cenozo`.`participant_BEFORE_INSERT` $$
USE `cenozo`$$
CREATE DEFINER = CURRENT_USER TRIGGER `cenozo`.`participant_BEFORE_INSERT` BEFORE INSERT ON `participant` FOR EACH ROW
BEGIN
  DELETE FROM unique_identifier_pool WHERE uid = new.uid;
END;$$


USE `cenozo`$$
DROP TRIGGER IF EXISTS `cenozo`.`participant_AFTER_INSERT` $$
USE `cenozo`$$
CREATE DEFINER = CURRENT_USER TRIGGER `cenozo`.`participant_AFTER_INSERT` AFTER INSERT ON `participant` FOR EACH ROW
BEGIN
  CALL update_participant_site_for_participant( NEW.id );
  CALL update_participant_first_address( NEW.id );
  CALL update_participant_primary_address( NEW.id );
  CALL update_participant_last_consents( NEW.id );
  CALL update_participant_last_written_consents( NEW.id );
  CALL update_participant_last_events( NEW.id );
END;$$


USE `cenozo`$$
DROP TRIGGER IF EXISTS `cenozo`.`event_type_AFTER_INSERT` $$
USE `cenozo`$$
CREATE DEFINER = CURRENT_USER TRIGGER `cenozo`.`event_type_AFTER_INSERT` AFTER INSERT ON `event_type` FOR EACH ROW
BEGIN
  INSERT INTO participant_last_event( participant_id, event_type_id, event_id )
  SELECT participant.id, NEW.id, NULL
  FROM participant;
END;$$


USE `cenozo`$$
DROP TRIGGER IF EXISTS `cenozo`.`application_has_participant_AFTER_INSERT` $$
USE `cenozo`$$
CREATE DEFINER = CURRENT_USER TRIGGER `cenozo`.`application_has_participant_AFTER_INSERT` AFTER INSERT ON `application_has_participant` FOR EACH ROW
BEGIN

  IF( NEW.preferred_site_id IS NOT NULL ) THEN
    CALL update_participant_site_for_participant( NEW.participant_id );
  END IF;

END;$$


USE `cenozo`$$
DROP TRIGGER IF EXISTS `cenozo`.`application_has_participant_AFTER_UPDATE` $$
USE `cenozo`$$
CREATE DEFINER = CURRENT_USER TRIGGER `cenozo`.`application_has_participant_AFTER_UPDATE` AFTER UPDATE ON `application_has_participant` FOR EACH ROW
BEGIN

  IF( NOT NEW.preferred_site_id <=> OLD.preferred_site_id ) THEN
    CALL update_participant_site_for_participant( NEW.participant_id );
  END IF;

END;$$


USE `cenozo`$$
DROP TRIGGER IF EXISTS `cenozo`.`application_has_participant_BEFORE_DELETE` $$
USE `cenozo`$$
CREATE DEFINER = CURRENT_USER TRIGGER `cenozo`.`application_has_participant_BEFORE_DELETE` BEFORE DELETE ON `application_has_participant` FOR EACH ROW
BEGIN

  IF( OLD.preferred_site_id ) THEN
    DELETE FROM participant_site
    WHERE participant_id = OLD.participant_id;
    CALL update_participant_site_for_participant( OLD.participant_id );
  END IF;

END;$$


DELIMITER ;
USE `magnolia`;

DELIMITER $$

USE `magnolia`$$
DROP TRIGGER IF EXISTS `magnolia`.`reqn_AFTER_INSERT` $$
USE `magnolia`$$
CREATE DEFINER = CURRENT_USER TRIGGER `magnolia`.`reqn_AFTER_INSERT` AFTER INSERT ON `reqn` FOR EACH ROW
BEGIN
  CALL update_reqn_last_ethics_approval( NEW.id );
END$$


USE `magnolia`$$
DROP TRIGGER IF EXISTS `magnolia`.`reqn_AFTER_UPDATE` $$
USE `magnolia`$$
CREATE DEFINER = CURRENT_USER TRIGGER `magnolia`.`reqn_AFTER_UPDATE` AFTER UPDATE ON `reqn` FOR EACH ROW
BEGIN
  IF !( NEW.state <=> OLD.state ) THEN
    UPDATE reqn SET state_date = IF( NEW.state IS NULL, NULL, UTC_TIMESTAMP() );
  END IF;
END$$


USE `magnolia`$$
DROP TRIGGER IF EXISTS `magnolia`.`reqn_version_AFTER_INSERT` $$
USE `magnolia`$$
CREATE DEFINER = CURRENT_USER TRIGGER `magnolia`.`reqn_version_AFTER_INSERT` AFTER INSERT ON `reqn_version` FOR EACH ROW
BEGIN
  CALL update_reqn_current_reqn_version( NEW.reqn_id );
END$$


USE `magnolia`$$
DROP TRIGGER IF EXISTS `magnolia`.`reqn_version_AFTER_DELETE` $$
USE `magnolia`$$
CREATE DEFINER = CURRENT_USER TRIGGER `magnolia`.`reqn_version_AFTER_DELETE` AFTER DELETE ON `reqn_version` FOR EACH ROW
BEGIN
  CALL update_reqn_current_reqn_version( OLD.reqn_id );
END$$


USE `magnolia`$$
DROP TRIGGER IF EXISTS `magnolia`.`stage_AFTER_INSERT` $$
USE `magnolia`$$
CREATE DEFINER = CURRENT_USER TRIGGER `magnolia`.`stage_AFTER_INSERT` AFTER INSERT ON `stage` FOR EACH ROW
BEGIN
  -- create any review associated with the stage_type
  INSERT IGNORE INTO review( create_timestamp, reqn_id, amendment, review_type_id )
  SELECT NULL, NEW.reqn_id, reqn_version.amendment, review_type.id
  FROM review_type
  JOIN stage_type ON review_type.stage_type_id = stage_type.id
  JOIN reqn_current_reqn_version ON NEW.reqn_id = reqn_current_reqn_version.reqn_id
  JOIN reqn_version ON reqn_current_reqn_version.reqn_version_id = reqn_version.id
  WHERE stage_type.id = NEW.stage_type_id;

  -- create the final report if we just created the report required stage
  SELECT name INTO @stage_type FROM stage_type WHERE id = NEW.stage_type_id;
  IF @stage_type = "Report Required" THEN
    INSERT IGNORE INTO final_report( create_timestamp, reqn_id )
    SELECT NULL, NEW.reqn_id;
  END IF;
END$$


USE `magnolia`$$
DROP TRIGGER IF EXISTS `magnolia`.`stage_AFTER_DELETE` $$
USE `magnolia`$$
CREATE DEFINER = CURRENT_USER TRIGGER `magnolia`.`stage_AFTER_DELETE` AFTER DELETE ON `stage` FOR EACH ROW
BEGIN
  -- delete all reviews belonging to the reqn associated with the stage_type
  DELETE FROM review
  WHERE review_type_id IN (
    SELECT review_type.id
    FROM review_type
    JOIN stage_type ON review_type.stage_type_id = stage_type.id
    WHERE stage_type.id = OLD.stage_type_id
  ) AND amendment = (
    SELECT amendment
    FROM reqn_current_reqn_version
    JOIN reqn_version ON reqn_current_reqn_version.reqn_version_id = reqn_version.id
    WHERE reqn_current_reqn_version.reqn_id = OLD.reqn_id
  )
  AND reqn_id = OLD.reqn_id;
END$$


USE `magnolia`$$
DROP TRIGGER IF EXISTS `magnolia`.`review_BEFORE_INSERT` $$
USE `magnolia`$$
CREATE DEFINER = CURRENT_USER TRIGGER `magnolia`.`review_BEFORE_INSERT` BEFORE INSERT ON `review` FOR EACH ROW
BEGIN
  IF !NEW.date THEN
    SET NEW.date = NOW();
  END IF;
END$$


USE `magnolia`$$
DROP TRIGGER IF EXISTS `magnolia`.`ethics_approval_AFTER_INSERT` $$
USE `magnolia`$$
CREATE DEFINER = CURRENT_USER TRIGGER `magnolia`.`ethics_approval_AFTER_INSERT` AFTER INSERT ON `ethics_approval` FOR EACH ROW
BEGIN
  CALL update_reqn_last_ethics_approval( NEW.reqn_id );
END$$


USE `magnolia`$$
DROP TRIGGER IF EXISTS `magnolia`.`ethics_approval_AFTER_DELETE` $$
USE `magnolia`$$
CREATE DEFINER = CURRENT_USER TRIGGER `magnolia`.`ethics_approval_AFTER_DELETE` AFTER DELETE ON `ethics_approval` FOR EACH ROW
BEGIN
  CALL update_reqn_last_ethics_approval( OLD.reqn_id );
END$$


DELIMITER ;

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
