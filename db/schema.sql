-- MySQL Script generated by MySQL Workbench
-- Wed 06 Sep 2023 03:19:19 PM
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='';

-- -----------------------------------------------------
-- Schema cenozo
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema cenozo
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `cenozo` DEFAULT CHARACTER SET utf8mb4 ;
-- -----------------------------------------------------
-- Schema magnolia
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema magnolia
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `magnolia` DEFAULT CHARACTER SET utf8mb4 ;
USE `cenozo` ;

-- -----------------------------------------------------
-- Table `cenozo`.`activity`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `cenozo`.`activity` (
  `id` INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  `user_id` INT(10) UNSIGNED NOT NULL,
  `application_id` INT(10) UNSIGNED NOT NULL,
  `site_id` INT(10) UNSIGNED NOT NULL,
  `role_id` INT(10) UNSIGNED NOT NULL,
  `start_datetime` DATETIME NOT NULL,
  `end_datetime` DATETIME NULL DEFAULT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_user_id` (`user_id` ASC),
  INDEX `fk_site_id` (`site_id` ASC),
  INDEX `fk_role_id` (`role_id` ASC),
  INDEX `fk_application_id` (`application_id` ASC),
  CONSTRAINT `fk_activity_application_id`
    FOREIGN KEY (`application_id`)
    REFERENCES `cenozo`.`application` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_activity_role_id`
    FOREIGN KEY (`role_id`)
    REFERENCES `cenozo`.`role` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_activity_site_id`
    FOREIGN KEY (`site_id`)
    REFERENCES `cenozo`.`site` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_activity_user_id`
    FOREIGN KEY (`user_id`)
    REFERENCES `cenozo`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4;


-- -----------------------------------------------------
-- Table `cenozo`.`application`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `cenozo`.`application` (
  `id` INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  `update_timestamp` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP() ON UPDATE CURRENT_TIMESTAMP(),
  `create_timestamp` TIMESTAMP NOT NULL DEFAULT '0000-00-00 00:00:00',
  `name` VARCHAR(45) NOT NULL,
  `title` VARCHAR(45) NOT NULL,
  `application_type_id` INT(10) UNSIGNED NOT NULL,
  `url` VARCHAR(511) NOT NULL,
  `version` VARCHAR(45) NOT NULL,
  `cenozo` VARCHAR(45) NOT NULL,
  `release_based` TINYINT(1) NOT NULL DEFAULT 1,
  `release_event_type_id` INT(10) UNSIGNED NULL DEFAULT NULL,
  `site_based` TINYINT(1) NOT NULL DEFAULT 0,
  `update_queue` TINYINT(1) NOT NULL DEFAULT 0,
  `country_id` INT(10) UNSIGNED NOT NULL,
  `timezone` VARCHAR(45) NOT NULL DEFAULT 'Canada/Eastern',
  `primary_color` CHAR(7) NOT NULL DEFAULT '#3f3f7d',
  `secondary_color` CHAR(7) NOT NULL DEFAULT '#9ba8b7',
  `theme_expired` TINYINT(1) NOT NULL DEFAULT 1,
  `study_phase_id` INT(10) UNSIGNED NULL DEFAULT NULL,
  `login_footer` MEDIUMTEXT NULL DEFAULT NULL,
  `mail_name` VARCHAR(255) NULL DEFAULT NULL,
  `mail_address` VARCHAR(127) NULL DEFAULT NULL,
  `mail_header` MEDIUMTEXT NULL DEFAULT NULL,
  `mail_footer` MEDIUMTEXT NULL DEFAULT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `uq_name` (`name` ASC),
  INDEX `fk_release_event_type_id` (`release_event_type_id` ASC),
  INDEX `fk_application_type_id` (`application_type_id` ASC),
  INDEX `fk_study_phase_id` (`study_phase_id` ASC),
  CONSTRAINT `fk_application_application_type_id`
    FOREIGN KEY (`application_type_id`)
    REFERENCES `cenozo`.`application_type` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_application_release_event_type_id`
    FOREIGN KEY (`release_event_type_id`)
    REFERENCES `cenozo`.`event_type` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_application_study_phase_id`
    FOREIGN KEY (`study_phase_id`)
    REFERENCES `cenozo`.`study_phase` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4;


-- -----------------------------------------------------
-- Table `cenozo`.`application_has_cohort`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `cenozo`.`application_has_cohort` (
  `application_id` INT(10) UNSIGNED NOT NULL,
  `cohort_id` INT(10) UNSIGNED NOT NULL,
  `update_timestamp` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP() ON UPDATE CURRENT_TIMESTAMP(),
  `create_timestamp` TIMESTAMP NOT NULL DEFAULT '0000-00-00 00:00:00',
  `grouping` ENUM('region', 'jurisdiction') NOT NULL DEFAULT 'region',
  PRIMARY KEY (`application_id`, `cohort_id`),
  INDEX `fk_cohort_id` (`cohort_id` ASC),
  INDEX `fk_application_id` (`application_id` ASC),
  CONSTRAINT `fk_application_has_cohort_application_id`
    FOREIGN KEY (`application_id`)
    REFERENCES `cenozo`.`application` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_application_has_cohort_cohort_id`
    FOREIGN KEY (`cohort_id`)
    REFERENCES `cenozo`.`cohort` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4;


-- -----------------------------------------------------
-- Table `cenozo`.`application_has_collection`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `cenozo`.`application_has_collection` (
  `application_id` INT(10) UNSIGNED NOT NULL,
  `collection_id` INT(10) UNSIGNED NOT NULL,
  `update_timestamp` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP() ON UPDATE CURRENT_TIMESTAMP(),
  `create_timestamp` TIMESTAMP NOT NULL DEFAULT '0000-00-00 00:00:00',
  PRIMARY KEY (`application_id`, `collection_id`),
  INDEX `fk_collection_id` (`collection_id` ASC),
  INDEX `fk_application_id` (`application_id` ASC),
  CONSTRAINT `fk_application_has_collection_application_id`
    FOREIGN KEY (`application_id`)
    REFERENCES `cenozo`.`application` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_application_has_collection_collection_id`
    FOREIGN KEY (`collection_id`)
    REFERENCES `cenozo`.`collection` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4;


-- -----------------------------------------------------
-- Table `cenozo`.`application_has_participant`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `cenozo`.`application_has_participant` (
  `application_id` INT(10) UNSIGNED NOT NULL,
  `participant_id` INT(10) UNSIGNED NOT NULL,
  `update_timestamp` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP() ON UPDATE CURRENT_TIMESTAMP(),
  `create_timestamp` TIMESTAMP NOT NULL DEFAULT '0000-00-00 00:00:00',
  `preferred_site_id` INT(10) UNSIGNED NULL DEFAULT NULL,
  `datetime` DATETIME NULL DEFAULT NULL,
  PRIMARY KEY (`application_id`, `participant_id`),
  INDEX `fk_participant_id` (`participant_id` ASC),
  INDEX `fk_preferred_site_id` (`preferred_site_id` ASC),
  INDEX `fk_application_id` (`application_id` ASC),
  CONSTRAINT `fk_application_has_participant_application_id`
    FOREIGN KEY (`application_id`)
    REFERENCES `cenozo`.`application` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_application_has_participant_participant_id`
    FOREIGN KEY (`participant_id`)
    REFERENCES `cenozo`.`participant` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_application_has_participant_preferred_site_id`
    FOREIGN KEY (`preferred_site_id`)
    REFERENCES `cenozo`.`site` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4;


-- -----------------------------------------------------
-- Table `cenozo`.`application_has_script`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `cenozo`.`application_has_script` (
  `application_id` INT(10) UNSIGNED NOT NULL,
  `script_id` INT(10) UNSIGNED NOT NULL,
  `update_timestamp` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP() ON UPDATE CURRENT_TIMESTAMP(),
  `create_timestamp` TIMESTAMP NOT NULL DEFAULT '0000-00-00 00:00:00',
  PRIMARY KEY (`application_id`, `script_id`),
  INDEX `fk_script_id` (`script_id` ASC),
  INDEX `fk_application_id` (`application_id` ASC),
  CONSTRAINT `fk_application_has_script_application_id`
    FOREIGN KEY (`application_id`)
    REFERENCES `cenozo`.`application` (`id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_application_has_script_script_id`
    FOREIGN KEY (`script_id`)
    REFERENCES `cenozo`.`script` (`id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4;


-- -----------------------------------------------------
-- Table `cenozo`.`application_has_site`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `cenozo`.`application_has_site` (
  `application_id` INT(10) UNSIGNED NOT NULL,
  `site_id` INT(10) UNSIGNED NOT NULL,
  `update_timestamp` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP() ON UPDATE CURRENT_TIMESTAMP(),
  `create_timestamp` TIMESTAMP NOT NULL DEFAULT '0000-00-00 00:00:00',
  PRIMARY KEY (`application_id`, `site_id`),
  INDEX `fk_site_id` (`site_id` ASC),
  INDEX `fk_application_id` (`application_id` ASC),
  CONSTRAINT `fk_application_has_site_application_id`
    FOREIGN KEY (`application_id`)
    REFERENCES `cenozo`.`application` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_application_has_site_site_id`
    FOREIGN KEY (`site_id`)
    REFERENCES `cenozo`.`site` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4;


-- -----------------------------------------------------
-- Table `cenozo`.`application_type`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `cenozo`.`application_type` (
  `id` INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  `update_timestamp` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP() ON UPDATE CURRENT_TIMESTAMP(),
  `create_timestamp` TIMESTAMP NOT NULL DEFAULT '0000-00-00 00:00:00',
  `name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `uq_name` (`name` ASC))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4;


-- -----------------------------------------------------
-- Table `cenozo`.`application_type_has_overview`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `cenozo`.`application_type_has_overview` (
  `application_type_id` INT(10) UNSIGNED NOT NULL,
  `overview_id` INT(10) UNSIGNED NOT NULL,
  `update_timestamp` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP() ON UPDATE CURRENT_TIMESTAMP(),
  `create_timestamp` TIMESTAMP NOT NULL DEFAULT '0000-00-00 00:00:00',
  PRIMARY KEY (`application_type_id`, `overview_id`),
  INDEX `fk_overview_id` (`overview_id` ASC),
  INDEX `fk_application_type_id` (`application_type_id` ASC),
  CONSTRAINT `fk_application_type_has_overview_application_type_id`
    FOREIGN KEY (`application_type_id`)
    REFERENCES `cenozo`.`application_type` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_application_type_has_overview_overview_id`
    FOREIGN KEY (`overview_id`)
    REFERENCES `cenozo`.`overview` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4;


-- -----------------------------------------------------
-- Table `cenozo`.`application_type_has_report_type`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `cenozo`.`application_type_has_report_type` (
  `application_type_id` INT(10) UNSIGNED NOT NULL,
  `report_type_id` INT(10) UNSIGNED NOT NULL,
  `update_timestamp` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP() ON UPDATE CURRENT_TIMESTAMP(),
  `create_timestamp` TIMESTAMP NOT NULL DEFAULT '0000-00-00 00:00:00',
  PRIMARY KEY (`application_type_id`, `report_type_id`),
  INDEX `fk_report_type_id` (`report_type_id` ASC),
  INDEX `fk_application_type_id` (`application_type_id` ASC),
  CONSTRAINT `fk_application_type_has_report_type_application_type_id`
    FOREIGN KEY (`application_type_id`)
    REFERENCES `cenozo`.`application_type` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_application_type_has_report_type_report_type_id`
    FOREIGN KEY (`report_type_id`)
    REFERENCES `cenozo`.`report_type` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4;


-- -----------------------------------------------------
-- Table `cenozo`.`application_type_has_role`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `cenozo`.`application_type_has_role` (
  `application_type_id` INT(10) UNSIGNED NOT NULL,
  `role_id` INT(10) UNSIGNED NOT NULL,
  `create_timestamp` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP() ON UPDATE CURRENT_TIMESTAMP(),
  `update_timestamp` TIMESTAMP NOT NULL DEFAULT '0000-00-00 00:00:00',
  PRIMARY KEY (`application_type_id`, `role_id`),
  INDEX `fk_role_id` (`role_id` ASC),
  INDEX `fk_application_type_id` (`application_type_id` ASC),
  CONSTRAINT `fk_application_type_has_role_application_type_id`
    FOREIGN KEY (`application_type_id`)
    REFERENCES `cenozo`.`application_type` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_application_type_has_role_role_id`
    FOREIGN KEY (`role_id`)
    REFERENCES `cenozo`.`role` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4;


-- -----------------------------------------------------
-- Table `cenozo`.`availability_type`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `cenozo`.`availability_type` (
  `id` INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  `update_timestamp` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP() ON UPDATE CURRENT_TIMESTAMP(),
  `create_timestamp` TIMESTAMP NOT NULL DEFAULT '0000-00-00 00:00:00',
  `name` VARCHAR(25) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `uq_name` (`name` ASC))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4;


-- -----------------------------------------------------
-- Table `cenozo`.`cohort`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `cenozo`.`cohort` (
  `id` INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  `update_timestamp` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP() ON UPDATE CURRENT_TIMESTAMP(),
  `create_timestamp` TIMESTAMP NOT NULL DEFAULT '0000-00-00 00:00:00',
  `name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `uq_name` (`name` ASC))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4;


-- -----------------------------------------------------
-- Table `cenozo`.`collection`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `cenozo`.`collection` (
  `id` INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  `update_timestamp` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP() ON UPDATE CURRENT_TIMESTAMP(),
  `create_timestamp` TIMESTAMP NOT NULL DEFAULT '0000-00-00 00:00:00',
  `name` VARCHAR(100) NOT NULL,
  `active` TINYINT(1) NOT NULL DEFAULT 1,
  `locked` TINYINT(1) NOT NULL DEFAULT 0,
  `description` MEDIUMTEXT NULL DEFAULT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `uq_name` (`name` ASC))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4;


-- -----------------------------------------------------
-- Table `cenozo`.`consent_type`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `cenozo`.`consent_type` (
  `id` INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  `update_timestamp` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP() ON UPDATE CURRENT_TIMESTAMP(),
  `create_timestamp` TIMESTAMP NOT NULL DEFAULT '0000-00-00 00:00:00',
  `name` VARCHAR(100) NOT NULL,
  `description` MEDIUMTEXT NULL DEFAULT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `uq_name` (`name` ASC))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4;


-- -----------------------------------------------------
-- Table `cenozo`.`country`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `cenozo`.`country` (
  `id` INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  `update_timestamp` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP() ON UPDATE CURRENT_TIMESTAMP(),
  `create_timestamp` TIMESTAMP NOT NULL DEFAULT '0000-00-00 00:00:00',
  `name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `uq_name` (`name` ASC))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4;


-- -----------------------------------------------------
-- Table `cenozo`.`event_type`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `cenozo`.`event_type` (
  `id` INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  `update_timestamp` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP() ON UPDATE CURRENT_TIMESTAMP(),
  `create_timestamp` TIMESTAMP NOT NULL DEFAULT '0000-00-00 00:00:00',
  `name` VARCHAR(100) NOT NULL,
  `record_address` TINYINT(1) NOT NULL DEFAULT 0,
  `description` MEDIUMTEXT NULL DEFAULT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `uq_name` (`name` ASC))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4;


-- -----------------------------------------------------
-- Table `cenozo`.`exclusion`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `cenozo`.`exclusion` (
  `id` INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  `update_timestamp` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP() ON UPDATE CURRENT_TIMESTAMP(),
  `create_timestamp` TIMESTAMP NOT NULL DEFAULT '0000-00-00 00:00:00',
  `name` VARCHAR(100) NOT NULL,
  `description` VARCHAR(512) NULL DEFAULT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `uq_name` (`name` ASC))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4;


-- -----------------------------------------------------
-- Table `cenozo`.`failed_login`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `cenozo`.`failed_login` (
  `id` INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  `update_timestamp` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP() ON UPDATE CURRENT_TIMESTAMP(),
  `create_timestamp` TIMESTAMP NOT NULL DEFAULT '0000-00-00 00:00:00',
  `user_id` INT(10) UNSIGNED NOT NULL,
  `application_id` INT(10) UNSIGNED NOT NULL,
  `address` VARCHAR(45) NOT NULL,
  `datetime` DATETIME NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_user_id` (`user_id` ASC),
  INDEX `fk_application_id` (`application_id` ASC),
  CONSTRAINT `fk_failed_login_application_id`
    FOREIGN KEY (`application_id`)
    REFERENCES `cenozo`.`application` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_failed_login_user_id`
    FOREIGN KEY (`user_id`)
    REFERENCES `cenozo`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4;


-- -----------------------------------------------------
-- Table `cenozo`.`hold_type`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `cenozo`.`hold_type` (
  `id` INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  `update_timestamp` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP() ON UPDATE CURRENT_TIMESTAMP(),
  `create_timestamp` TIMESTAMP NOT NULL DEFAULT '0000-00-00 00:00:00',
  `type` ENUM('final', 'temporary') NOT NULL,
  `name` VARCHAR(100) NOT NULL,
  `system` TINYINT(1) NOT NULL DEFAULT 0,
  `description` VARCHAR(512) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `uq_type_name` (`type` ASC, `name` ASC))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4;


-- -----------------------------------------------------
-- Table `cenozo`.`identifier`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `cenozo`.`identifier` (
  `id` INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  `update_timestamp` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP() ON UPDATE CURRENT_TIMESTAMP(),
  `create_timestamp` TIMESTAMP NOT NULL DEFAULT '0000-00-00 00:00:00',
  `name` VARCHAR(255) NOT NULL,
  `regex` VARCHAR(255) NULL DEFAULT NULL,
  `description` MEDIUMTEXT NULL DEFAULT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `uq_name` (`name` ASC))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4;


-- -----------------------------------------------------
-- Table `cenozo`.`language`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `cenozo`.`language` (
  `id` INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  `update_timestamp` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP() ON UPDATE CURRENT_TIMESTAMP(),
  `create_timestamp` TIMESTAMP NOT NULL DEFAULT '0000-00-00 00:00:00',
  `name` VARCHAR(45) NOT NULL,
  `active` TINYINT(1) NOT NULL DEFAULT 0,
  `code` CHAR(2) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `uq_name` (`name` ASC),
  UNIQUE INDEX `uq_code` (`code` ASC))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4;


-- -----------------------------------------------------
-- Table `cenozo`.`mail`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `cenozo`.`mail` (
  `id` INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  `update_timestamp` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP() ON UPDATE CURRENT_TIMESTAMP(),
  `create_timestamp` TIMESTAMP NOT NULL DEFAULT '0000-00-00 00:00:00',
  `participant_id` INT(10) UNSIGNED NOT NULL,
  `from_name` VARCHAR(255) NULL DEFAULT NULL,
  `from_address` VARCHAR(127) NOT NULL,
  `to_name` VARCHAR(255) NULL DEFAULT NULL,
  `to_address` VARCHAR(127) NOT NULL,
  `cc_address` VARCHAR(255) NULL DEFAULT NULL,
  `bcc_address` VARCHAR(255) NULL DEFAULT NULL,
  `schedule_datetime` DATETIME NOT NULL,
  `sent_datetime` DATETIME NULL DEFAULT NULL,
  `sent` TINYINT(1) NULL DEFAULT NULL,
  `subject` VARCHAR(255) NOT NULL,
  `body` MEDIUMTEXT NOT NULL,
  `note` MEDIUMTEXT NULL DEFAULT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `uq_participant_id_scheduled_datetime` (`participant_id` ASC, `schedule_datetime` ASC),
  INDEX `fk_participant_id` (`participant_id` ASC),
  CONSTRAINT `fk_mail_participant_id`
    FOREIGN KEY (`participant_id`)
    REFERENCES `cenozo`.`participant` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4;


-- -----------------------------------------------------
-- Table `cenozo`.`overview`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `cenozo`.`overview` (
  `id` INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  `update_timestamp` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP() ON UPDATE CURRENT_TIMESTAMP(),
  `create_timestamp` TIMESTAMP NOT NULL DEFAULT '0000-00-00 00:00:00',
  `name` VARCHAR(45) NOT NULL,
  `title` VARCHAR(255) NOT NULL,
  `description` MEDIUMTEXT NULL DEFAULT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `uq_name` (`name` ASC))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4;


-- -----------------------------------------------------
-- Table `cenozo`.`participant`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `cenozo`.`participant` (
  `id` INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  `update_timestamp` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP() ON UPDATE CURRENT_TIMESTAMP(),
  `create_timestamp` TIMESTAMP NOT NULL DEFAULT '0000-00-00 00:00:00',
  `uid` VARCHAR(45) NOT NULL COMMENT 'External unique ID',
  `source_id` INT(10) UNSIGNED NULL DEFAULT NULL,
  `cohort_id` INT(10) UNSIGNED NOT NULL,
  `grouping` VARCHAR(45) NULL DEFAULT NULL,
  `honorific` VARCHAR(10) NOT NULL DEFAULT '',
  `first_name` VARCHAR(45) NOT NULL,
  `other_name` VARCHAR(100) NULL DEFAULT NULL,
  `last_name` VARCHAR(45) NOT NULL,
  `sex` ENUM('male', 'female') NOT NULL,
  `current_sex` ENUM('male', 'female') NOT NULL,
  `date_of_birth` DATE NULL DEFAULT NULL,
  `date_of_death_accuracy` ENUM('full date known', 'day unknown', 'month and day unknown') NULL DEFAULT NULL,
  `date_of_death_ministry` TINYINT(1) NULL DEFAULT NULL,
  `date_of_death` DATE NULL DEFAULT NULL,
  `exclusion_id` INT(10) UNSIGNED NULL DEFAULT NULL,
  `language_id` INT(10) UNSIGNED NOT NULL,
  `availability_type_id` INT(10) UNSIGNED NULL DEFAULT NULL,
  `callback` DATETIME NULL DEFAULT NULL,
  `override_stratum` TINYINT(1) NOT NULL DEFAULT 0,
  `email` VARCHAR(255) NULL DEFAULT NULL,
  `email_datetime` DATETIME NULL DEFAULT NULL,
  `email_old` VARCHAR(255) NULL DEFAULT NULL,
  `email2` VARCHAR(255) NULL DEFAULT NULL,
  `email2_datetime` DATETIME NULL DEFAULT NULL,
  `email2_old` VARCHAR(255) NULL DEFAULT NULL,
  `mass_email` TINYINT(1) NOT NULL DEFAULT 1,
  `delink` TINYINT(1) NOT NULL DEFAULT 0,
  `withdraw_third_party` TINYINT(1) NULL DEFAULT NULL,
  `out_of_area` TINYINT(1) NOT NULL DEFAULT 0,
  `low_education` TINYINT(1) NOT NULL DEFAULT 0,
  `global_note` MEDIUMTEXT NULL DEFAULT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `uq_uid` (`uid` ASC),
  INDEX `dk_uid` (`uid` ASC),
  INDEX `fk_cohort_id` (`cohort_id` ASC),
  INDEX `fk_source_id` (`source_id` ASC),
  INDEX `dk_email_datetime` (`email_datetime` ASC),
  INDEX `fk_language_id` (`language_id` ASC),
  INDEX `fk_availability_type_id` (`availability_type_id` ASC),
  INDEX `dk_callback` (`callback` ASC),
  INDEX `fk_exclusion_id` (`exclusion_id` ASC),
  CONSTRAINT `fk_participant_availability_type_id`
    FOREIGN KEY (`availability_type_id`)
    REFERENCES `cenozo`.`availability_type` (`id`)
    ON DELETE SET NULL
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_participant_cohort_id`
    FOREIGN KEY (`cohort_id`)
    REFERENCES `cenozo`.`cohort` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_participant_exclusion_id`
    FOREIGN KEY (`exclusion_id`)
    REFERENCES `cenozo`.`exclusion` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_participant_language_id`
    FOREIGN KEY (`language_id`)
    REFERENCES `cenozo`.`language` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_participant_source_id`
    FOREIGN KEY (`source_id`)
    REFERENCES `cenozo`.`source` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4;


-- -----------------------------------------------------
-- Table `cenozo`.`participant_identifier`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `cenozo`.`participant_identifier` (
  `id` INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  `update_timestamp` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP() ON UPDATE CURRENT_TIMESTAMP(),
  `create_timestamp` TIMESTAMP NOT NULL DEFAULT '0000-00-00 00:00:00',
  `identifier_id` INT(10) UNSIGNED NOT NULL,
  `participant_id` INT(10) UNSIGNED NOT NULL,
  `value` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `uq_identifier_id_participant_id` (`identifier_id` ASC, `participant_id` ASC),
  UNIQUE INDEX `uq_identifier_id_value` (`identifier_id` ASC, `value` ASC),
  INDEX `fk_identifier_id` (`identifier_id` ASC),
  INDEX `fk_participant_id` (`participant_id` ASC),
  CONSTRAINT `fk_participant_identifier_identifier_id`
    FOREIGN KEY (`identifier_id`)
    REFERENCES `cenozo`.`identifier` (`id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_participant_identifier_participant_id`
    FOREIGN KEY (`participant_id`)
    REFERENCES `cenozo`.`participant` (`id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4;


-- -----------------------------------------------------
-- Table `cenozo`.`postcode`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `cenozo`.`postcode` (
  `id` INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  `update_timestamp` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP() ON UPDATE CURRENT_TIMESTAMP(),
  `create_timestamp` TIMESTAMP NOT NULL DEFAULT '0000-00-00 00:00:00',
  `name` VARCHAR(7) NOT NULL COMMENT 'Postcodes with the same province, tz and dst are grouped.',
  `region_id` INT(10) UNSIGNED NOT NULL,
  `timezone_offset` FLOAT NOT NULL,
  `daylight_savings` TINYINT(1) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `uq_name` (`name` ASC),
  INDEX `fk_region_id` (`region_id` ASC),
  CONSTRAINT `fk_postcode_region_id`
    FOREIGN KEY (`region_id`)
    REFERENCES `cenozo`.`region` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4;


-- -----------------------------------------------------
-- Table `cenozo`.`region`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `cenozo`.`region` (
  `id` INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  `update_timestamp` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP() ON UPDATE CURRENT_TIMESTAMP(),
  `create_timestamp` TIMESTAMP NOT NULL DEFAULT '0000-00-00 00:00:00',
  `name` VARCHAR(45) NOT NULL,
  `abbreviation` VARCHAR(5) NOT NULL,
  `country_id` INT(10) UNSIGNED NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `uq_name` (`name` ASC),
  UNIQUE INDEX `uq_abbreviation` (`abbreviation` ASC))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4;


-- -----------------------------------------------------
-- Table `cenozo`.`report`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `cenozo`.`report` (
  `id` INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  `update_timestamp` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP() ON UPDATE CURRENT_TIMESTAMP(),
  `create_timestamp` TIMESTAMP NOT NULL DEFAULT '0000-00-00 00:00:00',
  `report_type_id` INT(10) UNSIGNED NOT NULL,
  `report_schedule_id` INT(10) UNSIGNED NULL DEFAULT NULL,
  `user_id` INT(10) UNSIGNED NOT NULL,
  `application_id` INT(10) UNSIGNED NOT NULL,
  `site_id` INT(10) UNSIGNED NOT NULL,
  `role_id` INT(10) UNSIGNED NOT NULL,
  `format` ENUM('CSV', 'Excel', 'LibreOffice') NOT NULL DEFAULT 'CSV',
  `size` BIGINT(20) UNSIGNED NULL DEFAULT NULL,
  `stage` ENUM('started', 'reading data', 'writing data', 'completed', 'failed') NOT NULL DEFAULT 'started',
  `progress` FLOAT NOT NULL DEFAULT 0,
  `datetime` DATETIME NOT NULL,
  `elapsed` FLOAT NULL DEFAULT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_report_type_id` (`report_type_id` ASC),
  INDEX `fk_user_id` (`user_id` ASC),
  INDEX `fk_site_id` (`site_id` ASC),
  INDEX `fk_role_id` (`role_id` ASC),
  INDEX `fk_application_id` (`application_id` ASC),
  INDEX `fk_report_schedule_id` (`report_schedule_id` ASC),
  INDEX `dk_datetime` (`datetime` ASC),
  INDEX `dk_stage` (`stage` ASC),
  INDEX `dk_size` (`size` ASC),
  CONSTRAINT `fk_report_application_id`
    FOREIGN KEY (`application_id`)
    REFERENCES `cenozo`.`application` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_report_report_schedule_id`
    FOREIGN KEY (`report_schedule_id`)
    REFERENCES `cenozo`.`report_schedule` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_report_report_type_id`
    FOREIGN KEY (`report_type_id`)
    REFERENCES `cenozo`.`report_type` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_report_role_id`
    FOREIGN KEY (`role_id`)
    REFERENCES `cenozo`.`role` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_report_site_id`
    FOREIGN KEY (`site_id`)
    REFERENCES `cenozo`.`site` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_report_user_id`
    FOREIGN KEY (`user_id`)
    REFERENCES `cenozo`.`user` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4;


-- -----------------------------------------------------
-- Table `cenozo`.`report_has_report_restriction`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `cenozo`.`report_has_report_restriction` (
  `report_id` INT(10) UNSIGNED NOT NULL,
  `report_restriction_id` INT(10) UNSIGNED NOT NULL,
  `update_timestamp` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP() ON UPDATE CURRENT_TIMESTAMP(),
  `create_timestamp` TIMESTAMP NOT NULL DEFAULT '0000-00-00 00:00:00',
  `value` MEDIUMTEXT NOT NULL,
  PRIMARY KEY (`report_id`, `report_restriction_id`),
  INDEX `fk_report_restriction_id` (`report_restriction_id` ASC),
  INDEX `fk_report_id` (`report_id` ASC),
  CONSTRAINT `fk_report_has_report_restriction_report_id`
    FOREIGN KEY (`report_id`)
    REFERENCES `cenozo`.`report` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_report_has_report_restriction_report_restriction_id`
    FOREIGN KEY (`report_restriction_id`)
    REFERENCES `cenozo`.`report_restriction` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4;


-- -----------------------------------------------------
-- Table `cenozo`.`report_restriction`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `cenozo`.`report_restriction` (
  `id` INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  `update_timestamp` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP() ON UPDATE CURRENT_TIMESTAMP(),
  `create_timestamp` TIMESTAMP NOT NULL DEFAULT '0000-00-00 00:00:00',
  `report_type_id` INT(10) UNSIGNED NOT NULL,
  `rank` INT(11) NOT NULL,
  `name` VARCHAR(45) NOT NULL,
  `title` VARCHAR(45) NOT NULL,
  `mandatory` TINYINT(1) NOT NULL DEFAULT 0,
  `null_allowed` TINYINT(1) NOT NULL DEFAULT 0,
  `restriction_type` ENUM('table', 'identifier_list', 'string', 'integer', 'decimal', 'date', 'datetime', 'time', 'boolean', 'enum') NOT NULL,
  `custom` TINYINT(1) NOT NULL DEFAULT 0,
  `subject` VARCHAR(45) NULL DEFAULT NULL,
  `operator` ENUM('=', '<=>', '!=', '<>', '<', '<=', '>', '>=') NULL DEFAULT NULL,
  `enum_list` VARCHAR(511) NULL DEFAULT NULL,
  `description` MEDIUMTEXT NULL DEFAULT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `uq_report_type_id_name` (`report_type_id` ASC, `name` ASC),
  UNIQUE INDEX `uq_report_type_id_rank` (`report_type_id` ASC, `rank` ASC),
  INDEX `fk_report_type_id` (`report_type_id` ASC),
  CONSTRAINT `fk_report_restriction_report_type_id`
    FOREIGN KEY (`report_type_id`)
    REFERENCES `cenozo`.`report_type` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4;


-- -----------------------------------------------------
-- Table `cenozo`.`report_schedule`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `cenozo`.`report_schedule` (
  `id` INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  `update_timestamp` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP() ON UPDATE CURRENT_TIMESTAMP(),
  `create_timestamp` TIMESTAMP NOT NULL DEFAULT '0000-00-00 00:00:00',
  `report_type_id` INT(10) UNSIGNED NOT NULL,
  `user_id` INT(10) UNSIGNED NOT NULL,
  `application_id` INT(10) UNSIGNED NOT NULL,
  `site_id` INT(10) UNSIGNED NOT NULL,
  `role_id` INT(10) UNSIGNED NOT NULL,
  `schedule` ENUM('daily', 'weekly', 'monthly') NOT NULL,
  `format` ENUM('CSV', 'Excel', 'LibreOffice') NOT NULL DEFAULT 'CSV',
  PRIMARY KEY (`id`),
  INDEX `fk_report_type_id` (`report_type_id` ASC),
  INDEX `fk_user_id` (`user_id` ASC),
  INDEX `fk_application_id` (`application_id` ASC),
  INDEX `fk_site_id` (`site_id` ASC),
  INDEX `fk_role_id` (`role_id` ASC),
  INDEX `dk_repeat` (`schedule` ASC),
  CONSTRAINT `fk_report_schedule_application_id`
    FOREIGN KEY (`application_id`)
    REFERENCES `cenozo`.`application` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_report_schedule_report_type_id`
    FOREIGN KEY (`report_type_id`)
    REFERENCES `cenozo`.`report_type` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_report_schedule_role_id`
    FOREIGN KEY (`role_id`)
    REFERENCES `cenozo`.`role` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_report_schedule_site_id`
    FOREIGN KEY (`site_id`)
    REFERENCES `cenozo`.`site` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_report_schedule_user_id`
    FOREIGN KEY (`user_id`)
    REFERENCES `cenozo`.`user` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4;


-- -----------------------------------------------------
-- Table `cenozo`.`report_schedule_has_report_restriction`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `cenozo`.`report_schedule_has_report_restriction` (
  `report_schedule_id` INT(10) UNSIGNED NOT NULL,
  `report_restriction_id` INT(10) UNSIGNED NOT NULL,
  `update_timestamp` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP() ON UPDATE CURRENT_TIMESTAMP(),
  `create_timestamp` TIMESTAMP NOT NULL DEFAULT '0000-00-00 00:00:00',
  `value` MEDIUMTEXT NOT NULL,
  PRIMARY KEY (`report_schedule_id`, `report_restriction_id`),
  INDEX `fk_report_restriction_id` (`report_restriction_id` ASC),
  INDEX `fk_report_schedule_id` (`report_schedule_id` ASC),
  CONSTRAINT `fk_report_schedule_has_report_restriction_report_restriction_id`
    FOREIGN KEY (`report_restriction_id`)
    REFERENCES `cenozo`.`report_restriction` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_report_schedule_has_report_restriction_report_schedule_id`
    FOREIGN KEY (`report_schedule_id`)
    REFERENCES `cenozo`.`report_schedule` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4;


-- -----------------------------------------------------
-- Table `cenozo`.`report_type`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `cenozo`.`report_type` (
  `id` INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  `update_timestamp` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP() ON UPDATE CURRENT_TIMESTAMP(),
  `create_timestamp` TIMESTAMP NOT NULL DEFAULT '0000-00-00 00:00:00',
  `name` VARCHAR(45) NOT NULL,
  `title` VARCHAR(255) NOT NULL,
  `subject` VARCHAR(45) NOT NULL,
  `description` MEDIUMTEXT NULL DEFAULT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `uq_name` (`name` ASC),
  UNIQUE INDEX `uq_title` (`title` ASC))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4;


-- -----------------------------------------------------
-- Table `cenozo`.`role`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `cenozo`.`role` (
  `id` INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  `update_timestamp` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP() ON UPDATE CURRENT_TIMESTAMP(),
  `create_timestamp` TIMESTAMP NOT NULL DEFAULT '0000-00-00 00:00:00',
  `name` VARCHAR(45) NOT NULL,
  `tier` INT(10) UNSIGNED NOT NULL DEFAULT 1 COMMENT '1 = normal, 2 = site admin, 3 = global admin',
  `all_sites` TINYINT(1) NOT NULL DEFAULT 0,
  `special` TINYINT(1) NOT NULL DEFAULT 0,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `uq_name` (`name` ASC))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4;


-- -----------------------------------------------------
-- Table `cenozo`.`role_has_consent_type`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `cenozo`.`role_has_consent_type` (
  `role_id` INT(10) UNSIGNED NOT NULL,
  `consent_type_id` INT(10) UNSIGNED NOT NULL,
  `update_timestamp` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP() ON UPDATE CURRENT_TIMESTAMP(),
  `create_timestamp` TIMESTAMP NOT NULL DEFAULT '0000-00-00 00:00:00',
  PRIMARY KEY (`role_id`, `consent_type_id`),
  INDEX `fk_consent_type_id` (`consent_type_id` ASC),
  INDEX `fk_role_id` (`role_id` ASC),
  CONSTRAINT `fk_role_has_consent_type_consent_type_id`
    FOREIGN KEY (`consent_type_id`)
    REFERENCES `cenozo`.`consent_type` (`id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_role_has_consent_type_role_id`
    FOREIGN KEY (`role_id`)
    REFERENCES `cenozo`.`role` (`id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4;


-- -----------------------------------------------------
-- Table `cenozo`.`role_has_overview`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `cenozo`.`role_has_overview` (
  `role_id` INT(10) UNSIGNED NOT NULL,
  `overview_id` INT(10) UNSIGNED NOT NULL,
  `update_timestamp` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP() ON UPDATE CURRENT_TIMESTAMP(),
  `create_timestamp` TIMESTAMP NOT NULL DEFAULT '0000-00-00 00:00:00',
  PRIMARY KEY (`role_id`, `overview_id`),
  INDEX `fk_overview_id` (`overview_id` ASC),
  INDEX `fk_role_id` (`role_id` ASC),
  CONSTRAINT `fk_role_has_overview_overview_id`
    FOREIGN KEY (`overview_id`)
    REFERENCES `cenozo`.`overview` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_role_has_overview_role_id`
    FOREIGN KEY (`role_id`)
    REFERENCES `cenozo`.`role` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4;


-- -----------------------------------------------------
-- Table `cenozo`.`role_has_report_type`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `cenozo`.`role_has_report_type` (
  `role_id` INT(10) UNSIGNED NOT NULL,
  `report_type_id` INT(10) UNSIGNED NOT NULL,
  `update_timestamp` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP() ON UPDATE CURRENT_TIMESTAMP(),
  `create_timestamp` TIMESTAMP NOT NULL DEFAULT '0000-00-00 00:00:00',
  PRIMARY KEY (`role_id`, `report_type_id`),
  INDEX `fk_report_type_id` (`report_type_id` ASC),
  INDEX `fk_role_id` (`role_id` ASC),
  CONSTRAINT `fk_role_has_report_type_report_type_id`
    FOREIGN KEY (`report_type_id`)
    REFERENCES `cenozo`.`report_type` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_role_has_report_type_role_id`
    FOREIGN KEY (`role_id`)
    REFERENCES `cenozo`.`role` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4;


-- -----------------------------------------------------
-- Table `cenozo`.`script`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `cenozo`.`script` (
  `id` INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  `update_timestamp` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP() ON UPDATE CURRENT_TIMESTAMP(),
  `create_timestamp` TIMESTAMP NOT NULL DEFAULT '0000-00-00 00:00:00',
  `name` VARCHAR(255) NOT NULL,
  `started_event_type_id` INT(10) UNSIGNED NULL DEFAULT NULL,
  `finished_event_type_id` INT(10) UNSIGNED NULL DEFAULT NULL,
  `sid` INT(11) NULL DEFAULT NULL,
  `pine_qnaire_id` INT(10) UNSIGNED NULL DEFAULT NULL,
  `repeated` TINYINT(1) NOT NULL DEFAULT 0,
  `supporting` TINYINT(1) NOT NULL DEFAULT 0,
  `total_pages` INT(10) UNSIGNED NULL DEFAULT NULL,
  `description` MEDIUMTEXT NULL DEFAULT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `uq_name` (`name` ASC),
  UNIQUE INDEX `uq_sid` (`sid` ASC),
  UNIQUE INDEX `uq_pine_qnaire_id` (`pine_qnaire_id` ASC),
  INDEX `fk_started_event_type_id` (`started_event_type_id` ASC),
  INDEX `fk_finished_event_type_id` (`finished_event_type_id` ASC),
  CONSTRAINT `fk_script_finished_event_type_id`
    FOREIGN KEY (`finished_event_type_id`)
    REFERENCES `cenozo`.`event_type` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_script_started_event_type_id`
    FOREIGN KEY (`started_event_type_id`)
    REFERENCES `cenozo`.`event_type` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4;


-- -----------------------------------------------------
-- Table `cenozo`.`site`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `cenozo`.`site` (
  `id` INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  `update_timestamp` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP() ON UPDATE CURRENT_TIMESTAMP(),
  `create_timestamp` TIMESTAMP NOT NULL DEFAULT '0000-00-00 00:00:00',
  `name` VARCHAR(45) NOT NULL,
  `timezone` VARCHAR(45) NOT NULL DEFAULT 'Canada/Eastern',
  `title` VARCHAR(45) NULL DEFAULT NULL,
  `phone_number` VARCHAR(45) NULL DEFAULT NULL,
  `address1` VARCHAR(512) NULL DEFAULT NULL,
  `address2` VARCHAR(512) NULL DEFAULT NULL,
  `city` VARCHAR(100) NULL DEFAULT NULL,
  `region_id` INT(10) UNSIGNED NULL DEFAULT NULL,
  `postcode` VARCHAR(10) NULL DEFAULT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `uq_name` (`name` ASC),
  INDEX `fk_site_region_id` (`region_id` ASC),
  CONSTRAINT `fk_site_region_id`
    FOREIGN KEY (`region_id`)
    REFERENCES `cenozo`.`region` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4;


-- -----------------------------------------------------
-- Table `cenozo`.`source`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `cenozo`.`source` (
  `id` INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  `update_timestamp` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP() ON UPDATE CURRENT_TIMESTAMP(),
  `create_timestamp` TIMESTAMP NOT NULL DEFAULT '0000-00-00 00:00:00',
  `name` VARCHAR(45) NOT NULL,
  `override_stratum` TINYINT(1) NOT NULL DEFAULT 0,
  `description` MEDIUMTEXT NULL DEFAULT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `uq_name` (`name` ASC))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4;


-- -----------------------------------------------------
-- Table `cenozo`.`stratum`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `cenozo`.`stratum` (
  `id` INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  `update_timestamp` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP() ON UPDATE CURRENT_TIMESTAMP(),
  `create_timestamp` TIMESTAMP NOT NULL DEFAULT '0000-00-00 00:00:00',
  `study_id` INT(10) UNSIGNED NOT NULL,
  `name` VARCHAR(255) NOT NULL,
  `description` MEDIUMTEXT NULL DEFAULT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `uq_study_id_name` (`study_id` ASC, `name` ASC),
  INDEX `fk_study_id` (`study_id` ASC),
  CONSTRAINT `fk_stratum_study_id`
    FOREIGN KEY (`study_id`)
    REFERENCES `cenozo`.`study` (`id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4;


-- -----------------------------------------------------
-- Table `cenozo`.`stratum_has_participant`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `cenozo`.`stratum_has_participant` (
  `stratum_id` INT(10) UNSIGNED NOT NULL,
  `participant_id` INT(10) UNSIGNED NOT NULL,
  `update_timestamp` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP() ON UPDATE CURRENT_TIMESTAMP(),
  `create_timestamp` TIMESTAMP NOT NULL DEFAULT '0000-00-00 00:00:00',
  PRIMARY KEY (`stratum_id`, `participant_id`),
  INDEX `fk_participant_id` (`participant_id` ASC),
  INDEX `fk_stratum_id` (`stratum_id` ASC),
  CONSTRAINT `fk_stratum_has_participant_participant_id`
    FOREIGN KEY (`participant_id`)
    REFERENCES `cenozo`.`participant` (`id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_stratum_has_participant_stratum_id`
    FOREIGN KEY (`stratum_id`)
    REFERENCES `cenozo`.`stratum` (`id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4;


-- -----------------------------------------------------
-- Table `cenozo`.`study`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `cenozo`.`study` (
  `id` INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  `update_timestamp` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP() ON UPDATE CURRENT_TIMESTAMP(),
  `create_timestamp` TIMESTAMP NOT NULL DEFAULT '0000-00-00 00:00:00',
  `name` VARCHAR(45) NOT NULL,
  `identifier_id` INT(10) UNSIGNED NULL DEFAULT NULL,
  `consent_type_id` INT(10) UNSIGNED NULL DEFAULT NULL,
  `completed_event_type_id` INT(10) UNSIGNED NULL DEFAULT NULL,
  `description` MEDIUMTEXT NULL DEFAULT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `uq_name` (`name` ASC),
  INDEX `fk_consent_type_id` (`consent_type_id` ASC),
  INDEX `fk_completed_event_type_id` (`completed_event_type_id` ASC),
  INDEX `fk_identifier_id` (`identifier_id` ASC),
  CONSTRAINT `fk_study_completed_event_type_id`
    FOREIGN KEY (`completed_event_type_id`)
    REFERENCES `cenozo`.`event_type` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_study_consent_type_id`
    FOREIGN KEY (`consent_type_id`)
    REFERENCES `cenozo`.`consent_type` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_study_identifier_id`
    FOREIGN KEY (`identifier_id`)
    REFERENCES `cenozo`.`identifier` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4;


-- -----------------------------------------------------
-- Table `cenozo`.`study_phase`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `cenozo`.`study_phase` (
  `id` INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  `update_timestamp` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP() ON UPDATE CURRENT_TIMESTAMP(),
  `create_timestamp` TIMESTAMP NOT NULL DEFAULT '0000-00-00 00:00:00',
  `study_id` INT(10) UNSIGNED NOT NULL,
  `rank` INT(10) UNSIGNED NOT NULL,
  `code` CHAR(2) NOT NULL,
  `name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `uq_study_id_rank` (`study_id` ASC, `rank` ASC),
  UNIQUE INDEX `uq_study_id_code` (`study_id` ASC, `code` ASC),
  UNIQUE INDEX `uq_study_id_name` (`study_id` ASC, `name` ASC),
  INDEX `fk_study_id` (`study_id` ASC),
  CONSTRAINT `fk_study_phase_study_id`
    FOREIGN KEY (`study_id`)
    REFERENCES `cenozo`.`study` (`id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4;


-- -----------------------------------------------------
-- Table `cenozo`.`system_message`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `cenozo`.`system_message` (
  `id` INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  `update_timestamp` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP() ON UPDATE CURRENT_TIMESTAMP(),
  `create_timestamp` TIMESTAMP NOT NULL DEFAULT '0000-00-00 00:00:00',
  `application_id` INT(10) UNSIGNED NULL DEFAULT NULL,
  `site_id` INT(10) UNSIGNED NULL DEFAULT NULL,
  `role_id` INT(10) UNSIGNED NULL DEFAULT NULL,
  `title` VARCHAR(255) NOT NULL,
  `note` MEDIUMTEXT NOT NULL,
  `expiry` DATE NULL DEFAULT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_site_id` (`site_id` ASC),
  INDEX `fk_role_id` (`role_id` ASC),
  INDEX `fk_system_message_id` (`application_id` ASC),
  CONSTRAINT `fk_system_message_application_id`
    FOREIGN KEY (`application_id`)
    REFERENCES `cenozo`.`application` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_system_message_role_id`
    FOREIGN KEY (`role_id`)
    REFERENCES `cenozo`.`role` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_system_message_site_id`
    FOREIGN KEY (`site_id`)
    REFERENCES `cenozo`.`site` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4;


-- -----------------------------------------------------
-- Table `cenozo`.`user`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `cenozo`.`user` (
  `id` INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  `update_timestamp` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP() ON UPDATE CURRENT_TIMESTAMP(),
  `create_timestamp` TIMESTAMP NOT NULL DEFAULT '0000-00-00 00:00:00',
  `name` VARCHAR(45) NOT NULL,
  `password` VARCHAR(255) NULL DEFAULT NULL,
  `first_name` VARCHAR(255) NOT NULL,
  `last_name` VARCHAR(255) NOT NULL,
  `active` TINYINT(1) NOT NULL DEFAULT 1,
  `email` VARCHAR(255) NULL DEFAULT NULL,
  `timezone` VARCHAR(45) NOT NULL DEFAULT 'Canada/Eastern',
  `use_12hour_clock` TINYINT(1) NOT NULL DEFAULT 0,
  `login_failures` INT(11) NOT NULL DEFAULT 0,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `uq_name` (`name` ASC),
  UNIQUE INDEX `uq_email` (`email` ASC),
  INDEX `dk_active` (`active` ASC))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4;


-- -----------------------------------------------------
-- Table `cenozo`.`user_has_language`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `cenozo`.`user_has_language` (
  `user_id` INT(10) UNSIGNED NOT NULL,
  `language_id` INT(10) UNSIGNED NOT NULL,
  `update_timestamp` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP() ON UPDATE CURRENT_TIMESTAMP(),
  `create_timestamp` TIMESTAMP NOT NULL DEFAULT '0000-00-00 00:00:00',
  PRIMARY KEY (`user_id`, `language_id`),
  INDEX `fk_language_id` (`language_id` ASC),
  INDEX `fk_user_id` (`user_id` ASC),
  CONSTRAINT `fk_user_has_language_language_id`
    FOREIGN KEY (`language_id`)
    REFERENCES `cenozo`.`language` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_user_has_language_user_id`
    FOREIGN KEY (`user_id`)
    REFERENCES `cenozo`.`user` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4;


-- -----------------------------------------------------
-- Table `cenozo`.`user_has_system_message`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `cenozo`.`user_has_system_message` (
  `user_id` INT(10) UNSIGNED NOT NULL,
  `system_message_id` INT(10) UNSIGNED NOT NULL,
  `update_timestamp` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP() ON UPDATE CURRENT_TIMESTAMP(),
  `create_timestamp` TIMESTAMP NOT NULL DEFAULT '0000-00-00 00:00:00',
  PRIMARY KEY (`user_id`, `system_message_id`),
  INDEX `fk_system_message_id` (`system_message_id` ASC),
  INDEX `fk_user_id` (`user_id` ASC),
  CONSTRAINT `fk_user_has_system_message_system_message_id`
    FOREIGN KEY (`system_message_id`)
    REFERENCES `cenozo`.`system_message` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_user_has_system_message_user_id`
    FOREIGN KEY (`user_id`)
    REFERENCES `cenozo`.`user` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4;

USE `magnolia` ;

-- -----------------------------------------------------
-- Table `magnolia`.`access`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `magnolia`.`access` (
  `id` INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  `update_timestamp` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP() ON UPDATE CURRENT_TIMESTAMP(),
  `create_timestamp` TIMESTAMP NOT NULL DEFAULT '0000-00-00 00:00:00',
  `user_id` INT(10) UNSIGNED NOT NULL,
  `role_id` INT(10) UNSIGNED NOT NULL,
  `site_id` INT(10) UNSIGNED NOT NULL,
  `datetime` DATETIME NULL DEFAULT NULL,
  `microtime` DOUBLE NULL DEFAULT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `uq_user_id_role_id_site_id` (`user_id` ASC, `role_id` ASC, `site_id` ASC),
  INDEX `fk_user_id` (`user_id` ASC),
  INDEX `fk_role_id` (`role_id` ASC),
  INDEX `fk_site_id` (`site_id` ASC),
  INDEX `datetime_microtime` (`datetime` ASC, `microtime` ASC),
  CONSTRAINT `fk_access_role_id`
    FOREIGN KEY (`role_id`)
    REFERENCES `cenozo`.`role` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_access_site_id`
    FOREIGN KEY (`site_id`)
    REFERENCES `cenozo`.`site` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_access_user_id`
    FOREIGN KEY (`user_id`)
    REFERENCES `cenozo`.`user` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4;


-- -----------------------------------------------------
-- Table `magnolia`.`additional_fee`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `magnolia`.`additional_fee` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `update_timestamp` TIMESTAMP NOT NULL,
  `create_timestamp` TIMESTAMP NOT NULL,
  `name` VARCHAR(255) NOT NULL,
  `cost` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `uq_name` (`name` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `magnolia`.`amendment_justification`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `magnolia`.`amendment_justification` (
  `id` INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  `update_timestamp` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP() ON UPDATE CURRENT_TIMESTAMP(),
  `create_timestamp` TIMESTAMP NOT NULL DEFAULT '0000-00-00 00:00:00',
  `reqn_version_id` INT(10) UNSIGNED NOT NULL,
  `amendment_type_id` INT(10) UNSIGNED NOT NULL,
  `description` TEXT NULL DEFAULT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `uq_reqn_version_id_amendment_type_id` (`reqn_version_id` ASC, `amendment_type_id` ASC),
  INDEX `fk_reqn_version_id` (`reqn_version_id` ASC),
  INDEX `fk_amendment_type_id` (`amendment_type_id` ASC),
  CONSTRAINT `fk_amendment_justification_amendment_type_id`
    FOREIGN KEY (`amendment_type_id`)
    REFERENCES `magnolia`.`amendment_type` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_amendment_justification_reqn_version_id`
    FOREIGN KEY (`reqn_version_id`)
    REFERENCES `magnolia`.`reqn_version` (`id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4;


-- -----------------------------------------------------
-- Table `magnolia`.`amendment_type`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `magnolia`.`amendment_type` (
  `id` INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  `update_timestamp` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP() ON UPDATE CURRENT_TIMESTAMP(),
  `create_timestamp` TIMESTAMP NOT NULL DEFAULT '0000-00-00 00:00:00',
  `rank` INT(10) UNSIGNED NOT NULL,
  `new_user` TINYINT(1) NOT NULL,
  `show_in_description` TINYINT(1) NOT NULL DEFAULT 0,
  `fee_canada` INT UNSIGNED NOT NULL DEFAULT 0,
  `fee_international` INT UNSIGNED NOT NULL DEFAULT 0,
  `reason_en` VARCHAR(127) NOT NULL,
  `reason_fr` VARCHAR(127) NOT NULL,
  `justification_prompt_en` TEXT NULL DEFAULT NULL,
  `justification_prompt_fr` TEXT NULL DEFAULT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `uq_reason_en` (`reason_en` ASC),
  UNIQUE INDEX `uq_reason_fr` (`reason_fr` ASC),
  UNIQUE INDEX `uq_rank` (`rank` ASC))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4;


-- -----------------------------------------------------
-- Table `magnolia`.`applicant`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `magnolia`.`applicant` (
  `id` INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  `update_timestamp` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP() ON UPDATE CURRENT_TIMESTAMP(),
  `create_timestamp` TIMESTAMP NOT NULL DEFAULT '0000-00-00 00:00:00',
  `user_id` INT(10) UNSIGNED NOT NULL,
  `supervisor_user_id` INT(10) UNSIGNED NULL DEFAULT NULL,
  `suspended` TINYINT(1) NOT NULL DEFAULT 0,
  `newsletter` TINYINT(1) NOT NULL DEFAULT 0,
  `note` TEXT NULL DEFAULT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `uq_user_id` (`user_id` ASC),
  INDEX `fk_user_id` (`user_id` ASC),
  INDEX `fk_supervisor_user_id` (`supervisor_user_id` ASC),
  CONSTRAINT `fk_applicant_supervisor_user_id`
    FOREIGN KEY (`supervisor_user_id`)
    REFERENCES `cenozo`.`user` (`id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_applicant_user_id`
    FOREIGN KEY (`user_id`)
    REFERENCES `cenozo`.`user` (`id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4;


-- -----------------------------------------------------
-- Table `magnolia`.`coapplicant`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `magnolia`.`coapplicant` (
  `id` INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  `update_timestamp` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP() ON UPDATE CURRENT_TIMESTAMP(),
  `create_timestamp` TIMESTAMP NOT NULL DEFAULT '0000-00-00 00:00:00',
  `reqn_version_id` INT(10) UNSIGNED NOT NULL,
  `name` VARCHAR(63) NOT NULL,
  `position` VARCHAR(255) NOT NULL,
  `affiliation` VARCHAR(255) NOT NULL,
  `email` VARCHAR(127) NOT NULL,
  `role` VARCHAR(45) NOT NULL,
  `access` TINYINT(1) NOT NULL DEFAULT 1,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `uq_reqn_version_id_name` (`reqn_version_id` ASC, `name` ASC),
  INDEX `fk_reqn_version_id` (`reqn_version_id` ASC),
  CONSTRAINT `fk_coapplicant_reqn_version_id`
    FOREIGN KEY (`reqn_version_id`)
    REFERENCES `magnolia`.`reqn_version` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4;


-- -----------------------------------------------------
-- Table `magnolia`.`data_agreement`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `magnolia`.`data_agreement` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `update_timestamp` TIMESTAMP NOT NULL,
  `create_timestamp` TIMESTAMP NOT NULL,
  `institution` VARCHAR(127) NOT NULL,
  `version` DATE NOT NULL,
  `filename` VARCHAR(255) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `uq_institution_version` (`institution` ASC, `version` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `magnolia`.`data_category`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `magnolia`.`data_category` (
  `id` INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  `update_timestamp` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP() ON UPDATE CURRENT_TIMESTAMP(),
  `create_timestamp` TIMESTAMP NOT NULL DEFAULT '0000-00-00 00:00:00',
  `rank` INT(10) UNSIGNED NOT NULL,
  `comment` TINYINT(1) NOT NULL DEFAULT 0,
  `name_en` VARCHAR(127) NOT NULL,
  `name_fr` VARCHAR(127) NOT NULL,
  `condition_en` TEXT NULL DEFAULT NULL,
  `condition_fr` TEXT NULL DEFAULT NULL,
  `note_en` TEXT NULL DEFAULT NULL,
  `note_fr` TEXT NULL DEFAULT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `uq_rank` (`rank` ASC),
  UNIQUE INDEX `uq_name_en` (`name_en` ASC),
  UNIQUE INDEX `uq_name_fr` (`name_fr` ASC))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4;


-- -----------------------------------------------------
-- Table `magnolia`.`data_category_has_study_phase`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `magnolia`.`data_category_has_study_phase` (
  `data_category_id` INT(10) UNSIGNED NOT NULL,
  `study_phase_id` INT(10) UNSIGNED NOT NULL,
  `update_timestamp` TIMESTAMP NULL DEFAULT NULL,
  `create_timestamp` TIMESTAMP NULL DEFAULT NULL,
  PRIMARY KEY (`data_category_id`, `study_phase_id`),
  INDEX `fk_study_phase_id` (`study_phase_id` ASC),
  INDEX `fk_data_category_id` (`data_category_id` ASC),
  CONSTRAINT `fk_data_category_has_study_phase_data_category_id`
    FOREIGN KEY (`data_category_id`)
    REFERENCES `magnolia`.`data_category` (`id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_data_category_has_study_phase_study_phase_id`
    FOREIGN KEY (`study_phase_id`)
    REFERENCES `cenozo`.`study_phase` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4;


-- -----------------------------------------------------
-- Table `magnolia`.`data_detail`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `magnolia`.`data_detail` (
  `id` INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  `update_timestamp` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP() ON UPDATE CURRENT_TIMESTAMP(),
  `create_timestamp` TIMESTAMP NOT NULL DEFAULT '0000-00-00 00:00:00',
  `data_selection_id` INT(10) UNSIGNED NOT NULL,
  `rank` INT(10) UNSIGNED NOT NULL,
  `name_en` VARCHAR(127) NOT NULL,
  `name_fr` VARCHAR(127) NOT NULL,
  `note_en` TEXT NULL DEFAULT NULL,
  `note_fr` TEXT NULL DEFAULT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `uq_data_selection_id_rank` (`data_selection_id` ASC, `rank` ASC),
  INDEX `fk_data_selection_id` (`data_selection_id` ASC),
  CONSTRAINT `fk_data_detail_data_selection_id`
    FOREIGN KEY (`data_selection_id`)
    REFERENCES `magnolia`.`data_selection` (`id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4;


-- -----------------------------------------------------
-- Table `magnolia`.`data_justification`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `magnolia`.`data_justification` (
  `id` INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  `update_timestamp` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP() ON UPDATE CURRENT_TIMESTAMP(),
  `create_timestamp` TIMESTAMP NOT NULL DEFAULT '0000-00-00 00:00:00',
  `reqn_version_id` INT(10) UNSIGNED NOT NULL,
  `data_option_id` INT(10) UNSIGNED NOT NULL,
  `description` TEXT NULL DEFAULT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `uq_reqn_version_id_data_option_id` (`reqn_version_id` ASC, `data_option_id` ASC),
  INDEX `fk_reqn_version_id` (`reqn_version_id` ASC),
  INDEX `fk_data_option_id` (`data_option_id` ASC),
  CONSTRAINT `fk_data_justification_data_option_id`
    FOREIGN KEY (`data_option_id`)
    REFERENCES `magnolia`.`data_option` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_data_justification_reqn_version_id`
    FOREIGN KEY (`reqn_version_id`)
    REFERENCES `magnolia`.`reqn_version` (`id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4;


-- -----------------------------------------------------
-- Table `magnolia`.`data_option`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `magnolia`.`data_option` (
  `id` INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  `update_timestamp` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP() ON UPDATE CURRENT_TIMESTAMP(),
  `create_timestamp` TIMESTAMP NOT NULL DEFAULT '0000-00-00 00:00:00',
  `data_category_id` INT(10) UNSIGNED NOT NULL,
  `rank` INT(10) UNSIGNED NOT NULL,
  `justification` TINYINT(1) NOT NULL DEFAULT 0,
  `name_en` VARCHAR(127) NOT NULL,
  `name_fr` VARCHAR(127) NOT NULL,
  `condition_en` TEXT NULL DEFAULT NULL,
  `condition_fr` TEXT NULL DEFAULT NULL,
  `note_en` TEXT NULL DEFAULT NULL,
  `note_fr` TEXT NULL DEFAULT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `uq_name_en` (`name_en` ASC),
  UNIQUE INDEX `uq_name_fr` (`name_fr` ASC),
  UNIQUE INDEX `uq_data_category_id_rank` (`data_category_id` ASC, `rank` ASC),
  INDEX `fk_data_category_id` (`data_category_id` ASC),
  CONSTRAINT `fk_data_option_data_category_id`
    FOREIGN KEY (`data_category_id`)
    REFERENCES `magnolia`.`data_category` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4;


-- -----------------------------------------------------
-- Table `magnolia`.`data_release`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `magnolia`.`data_release` (
  `id` INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  `update_timestamp` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP() ON UPDATE CURRENT_TIMESTAMP(),
  `create_timestamp` TIMESTAMP NOT NULL DEFAULT '0000-00-00 00:00:00',
  `reqn_id` INT(10) UNSIGNED NOT NULL,
  `data_version_id` INT(10) UNSIGNED NOT NULL,
  `category` ENUM('standard', 'amendment', 'data release update') NOT NULL DEFAULT 'standard',
  `date` DATE NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_reqn_id` (`reqn_id` ASC),
  INDEX `fk_data_version_id` (`data_version_id` ASC),
  CONSTRAINT `fk_data_release_data_version_id`
    FOREIGN KEY (`data_version_id`)
    REFERENCES `magnolia`.`data_version` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_data_release_reqn_id`
    FOREIGN KEY (`reqn_id`)
    REFERENCES `magnolia`.`reqn` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4;


-- -----------------------------------------------------
-- Table `magnolia`.`data_selection`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `magnolia`.`data_selection` (
  `id` INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  `update_timestamp` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP() ON UPDATE CURRENT_TIMESTAMP(),
  `create_timestamp` TIMESTAMP NOT NULL DEFAULT '0000-00-00 00:00:00',
  `data_option_id` INT(10) UNSIGNED NOT NULL,
  `study_phase_id` INT(10) UNSIGNED NOT NULL,
  `cost` INT(10) UNSIGNED NOT NULL DEFAULT 0,
  `cost_combined` TINYINT(1) NOT NULL DEFAULT 0,
  `unavailable_en` VARCHAR(255) NULL DEFAULT NULL,
  `unavailable_fr` VARCHAR(255) NULL DEFAULT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `uq_data_option_id_study_phase_id` (`data_option_id` ASC, `study_phase_id` ASC),
  INDEX `fk_data_option_id` (`data_option_id` ASC),
  INDEX `fk_study_phase_id` (`study_phase_id` ASC),
  CONSTRAINT `fk_data_selection_data_option_id`
    FOREIGN KEY (`data_option_id`)
    REFERENCES `magnolia`.`data_option` (`id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_data_selection_study_phase_id`
    FOREIGN KEY (`study_phase_id`)
    REFERENCES `cenozo`.`study_phase` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4;


-- -----------------------------------------------------
-- Table `magnolia`.`data_version`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `magnolia`.`data_version` (
  `id` INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  `update_timestamp` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP() ON UPDATE CURRENT_TIMESTAMP(),
  `create_timestamp` TIMESTAMP NOT NULL DEFAULT '0000-00-00 00:00:00',
  `name` VARCHAR(127) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `uq_name` (`name` ASC))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4;


-- -----------------------------------------------------
-- Table `magnolia`.`deadline`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `magnolia`.`deadline` (
  `id` INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  `update_timestamp` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP() ON UPDATE CURRENT_TIMESTAMP(),
  `create_timestamp` TIMESTAMP NOT NULL DEFAULT '0000-00-00 00:00:00',
  `name` VARCHAR(45) NOT NULL,
  `datetime` DATETIME NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `uq_datetime` (`datetime` ASC),
  UNIQUE INDEX `uq_name` (`name` ASC))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4;


-- -----------------------------------------------------
-- Table `magnolia`.`ethics_approval`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `magnolia`.`ethics_approval` (
  `id` INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  `update_timestamp` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP() ON UPDATE CURRENT_TIMESTAMP(),
  `create_timestamp` TIMESTAMP NOT NULL DEFAULT '0000-00-00 00:00:00',
  `reqn_id` INT(10) UNSIGNED NOT NULL,
  `filename` VARCHAR(255) NOT NULL,
  `date` DATE NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `uq_reqn_id_date` (`reqn_id` ASC, `date` ASC),
  INDEX `fk_reqn_id` (`reqn_id` ASC),
  CONSTRAINT `fk_ethics_approval_reqn_id`
    FOREIGN KEY (`reqn_id`)
    REFERENCES `magnolia`.`reqn` (`id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4;


-- -----------------------------------------------------
-- Table `magnolia`.`final_report`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `magnolia`.`final_report` (
  `id` INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  `update_timestamp` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP() ON UPDATE CURRENT_TIMESTAMP(),
  `create_timestamp` TIMESTAMP NOT NULL DEFAULT '0000-00-00 00:00:00',
  `reqn_id` INT(10) UNSIGNED NOT NULL,
  `version` INT(10) UNSIGNED NOT NULL DEFAULT 1,
  `datetime` DATETIME NOT NULL,
  `achieved_objectives` TINYINT(1) NULL DEFAULT NULL,
  `findings` TEXT NULL DEFAULT NULL,
  `thesis_title` TEXT NULL DEFAULT NULL,
  `thesis_status` TEXT NULL DEFAULT NULL,
  `impact` TEXT NULL DEFAULT NULL,
  `opportunities` TEXT NULL DEFAULT NULL,
  `dissemination` TEXT NULL DEFAULT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `uq_reqn_id_version` (`reqn_id` ASC, `version` ASC),
  INDEX `fk_reqn_id` (`reqn_id` ASC),
  CONSTRAINT `fk_final_report_reqn_id`
    FOREIGN KEY (`reqn_id`)
    REFERENCES `magnolia`.`reqn` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4;


-- -----------------------------------------------------
-- Table `magnolia`.`notice`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `magnolia`.`notice` (
  `id` INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  `update_timestamp` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP() ON UPDATE CURRENT_TIMESTAMP(),
  `create_timestamp` TIMESTAMP NOT NULL DEFAULT '0000-00-00 00:00:00',
  `reqn_id` INT(10) UNSIGNED NOT NULL,
  `datetime` DATETIME NOT NULL,
  `title` VARCHAR(127) NOT NULL,
  `description` TEXT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_reqn_id` (`reqn_id` ASC),
  CONSTRAINT `fk_notice_reqn_id`
    FOREIGN KEY (`reqn_id`)
    REFERENCES `magnolia`.`reqn` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4;


-- -----------------------------------------------------
-- Table `magnolia`.`notice_has_user`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `magnolia`.`notice_has_user` (
  `notice_id` INT(10) UNSIGNED NOT NULL,
  `user_id` INT(10) UNSIGNED NOT NULL,
  `update_timestamp` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP() ON UPDATE CURRENT_TIMESTAMP(),
  `create_timestamp` TIMESTAMP NOT NULL DEFAULT '0000-00-00 00:00:00',
  PRIMARY KEY (`notice_id`, `user_id`),
  INDEX `fk_user_id` (`user_id` ASC),
  INDEX `fk_notice_id` (`notice_id` ASC),
  CONSTRAINT `fk_notice_has_user_notice_id`
    FOREIGN KEY (`notice_id`)
    REFERENCES `magnolia`.`notice` (`id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_notice_has_user_user_id`
    FOREIGN KEY (`user_id`)
    REFERENCES `cenozo`.`user` (`id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4;


-- -----------------------------------------------------
-- Table `magnolia`.`notification`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `magnolia`.`notification` (
  `id` INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  `update_timestamp` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP() ON UPDATE CURRENT_TIMESTAMP(),
  `create_timestamp` TIMESTAMP NOT NULL DEFAULT '0000-00-00 00:00:00',
  `reqn_id` INT(10) UNSIGNED NOT NULL,
  `notification_type_id` INT(10) UNSIGNED NOT NULL,
  `datetime` DATETIME NOT NULL,
  `sent` TINYINT(1) NOT NULL DEFAULT 0,
  PRIMARY KEY (`id`),
  INDEX `fk_reqn_id` (`reqn_id` ASC),
  INDEX `fk_notification_type_id` (`notification_type_id` ASC),
  CONSTRAINT `fk_notification_notification_type_id`
    FOREIGN KEY (`notification_type_id`)
    REFERENCES `magnolia`.`notification_type` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_notification_reqn_id`
    FOREIGN KEY (`reqn_id`)
    REFERENCES `magnolia`.`reqn` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4;


-- -----------------------------------------------------
-- Table `magnolia`.`notification_email`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `magnolia`.`notification_email` (
  `id` INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  `update_timestamp` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP() ON UPDATE CURRENT_TIMESTAMP(),
  `create_timestamp` TIMESTAMP NOT NULL DEFAULT '0000-00-00 00:00:00',
  `notification_id` INT(10) UNSIGNED NOT NULL,
  `email` VARCHAR(127) NOT NULL,
  `name` VARCHAR(127) NULL DEFAULT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `uq_notification_id_email` (`notification_id` ASC, `email` ASC),
  INDEX `fk_notification_id` (`notification_id` ASC),
  CONSTRAINT `fk_notification_email_notification_id`
    FOREIGN KEY (`notification_id`)
    REFERENCES `magnolia`.`notification` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4;


-- -----------------------------------------------------
-- Table `magnolia`.`notification_type`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `magnolia`.`notification_type` (
  `id` INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  `update_timestamp` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP() ON UPDATE CURRENT_TIMESTAMP(),
  `create_timestamp` TIMESTAMP NOT NULL DEFAULT '0000-00-00 00:00:00',
  `name` VARCHAR(45) NOT NULL,
  `title_en` VARCHAR(127) NOT NULL,
  `title_fr` VARCHAR(127) NOT NULL,
  `message_en` TEXT NOT NULL,
  `message_fr` TEXT NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `uq_name` (`name` ASC))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4;


-- -----------------------------------------------------
-- Table `magnolia`.`notification_type_email`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `magnolia`.`notification_type_email` (
  `id` INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  `update_timestamp` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP() ON UPDATE CURRENT_TIMESTAMP(),
  `create_timestamp` TIMESTAMP NOT NULL DEFAULT '0000-00-00 00:00:00',
  `notification_type_id` INT(10) UNSIGNED NOT NULL,
  `email` VARCHAR(127) NULL DEFAULT NULL,
  `blind` TINYINT(1) NOT NULL DEFAULT 0,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `uq_notification_type_id_email` (`notification_type_id` ASC, `email` ASC),
  INDEX `fk_notification_type_id` (`notification_type_id` ASC),
  CONSTRAINT `fk_notification_type_email_notification_type_id`
    FOREIGN KEY (`notification_type_id`)
    REFERENCES `magnolia`.`notification_type` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4;


-- -----------------------------------------------------
-- Table `magnolia`.`output`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `magnolia`.`output` (
  `id` INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  `update_timestamp` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP() ON UPDATE CURRENT_TIMESTAMP(),
  `create_timestamp` TIMESTAMP NOT NULL DEFAULT '0000-00-00 00:00:00',
  `reqn_id` INT(10) UNSIGNED NOT NULL,
  `output_type_id` INT(10) UNSIGNED NOT NULL,
  `detail` VARCHAR(511) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `uq_reqn_id_detail` USING HASH (`reqn_id`, `detail`),
  INDEX `fk_output_type_id` (`output_type_id` ASC),
  INDEX `fk_reqn_id` (`reqn_id` ASC),
  CONSTRAINT `fk_output_output_type_id`
    FOREIGN KEY (`output_type_id`)
    REFERENCES `magnolia`.`output_type` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_output_reqn_id`
    FOREIGN KEY (`reqn_id`)
    REFERENCES `magnolia`.`reqn` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4;


-- -----------------------------------------------------
-- Table `magnolia`.`output_source`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `magnolia`.`output_source` (
  `id` INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  `update_timestamp` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP() ON UPDATE CURRENT_TIMESTAMP(),
  `create_timestamp` TIMESTAMP NOT NULL DEFAULT '0000-00-00 00:00:00',
  `output_id` INT(10) UNSIGNED NOT NULL,
  `filename` VARCHAR(255) NULL DEFAULT NULL,
  `url` VARCHAR(1023) NULL DEFAULT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_output_id` (`output_id` ASC),
  CONSTRAINT `fk_output_source_output_id`
    FOREIGN KEY (`output_id`)
    REFERENCES `magnolia`.`output` (`id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4;


-- -----------------------------------------------------
-- Table `magnolia`.`output_type`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `magnolia`.`output_type` (
  `id` INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  `update_timestamp` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP() ON UPDATE CURRENT_TIMESTAMP(),
  `create_timestamp` TIMESTAMP NOT NULL DEFAULT '0000-00-00 00:00:00',
  `name_en` VARCHAR(127) NOT NULL,
  `name_fr` VARCHAR(127) NOT NULL,
  `note_en` VARCHAR(255) NULL DEFAULT NULL,
  `note_fr` VARCHAR(255) NULL DEFAULT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `uq_name_en` (`name_en` ASC),
  UNIQUE INDEX `uq_name_fr` (`name_fr` ASC))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4;


-- -----------------------------------------------------
-- Table `magnolia`.`pdf_form`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `magnolia`.`pdf_form` (
  `id` INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  `update_timestamp` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP() ON UPDATE CURRENT_TIMESTAMP(),
  `create_timestamp` TIMESTAMP NOT NULL DEFAULT '0000-00-00 00:00:00',
  `pdf_form_type_id` INT(10) UNSIGNED NOT NULL,
  `version` DATE NOT NULL,
  `active` TINYINT(1) NOT NULL DEFAULT 0,
  `data` LONGTEXT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_pdf_form_type_id` (`pdf_form_type_id` ASC),
  UNIQUE INDEX `uq_pdf_form_type_id_version` (`pdf_form_type_id` ASC, `version` ASC),
  CONSTRAINT `fk_pdf_form_pdf_form_type_id`
    FOREIGN KEY (`pdf_form_type_id`)
    REFERENCES `magnolia`.`pdf_form_type` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `magnolia`.`pdf_form_type`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `magnolia`.`pdf_form_type` (
  `id` INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  `update_timestamp` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP() ON UPDATE CURRENT_TIMESTAMP(),
  `create_timestamp` TIMESTAMP NOT NULL DEFAULT '0000-00-00 00:00:00',
  `name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `uq_name` (`name` ASC))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4;


-- -----------------------------------------------------
-- Table `magnolia`.`recommendation_type`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `magnolia`.`recommendation_type` (
  `id` INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  `update_timestamp` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP() ON UPDATE CURRENT_TIMESTAMP(),
  `create_timestamp` TIMESTAMP NOT NULL DEFAULT '0000-00-00 00:00:00',
  `name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `uq_name` (`name` ASC))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4;


-- -----------------------------------------------------
-- Table `magnolia`.`reference`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `magnolia`.`reference` (
  `id` INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  `update_timestamp` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP() ON UPDATE CURRENT_TIMESTAMP(),
  `create_timestamp` TIMESTAMP NOT NULL DEFAULT '0000-00-00 00:00:00',
  `reqn_version_id` INT(10) UNSIGNED NOT NULL,
  `rank` INT(10) UNSIGNED NOT NULL,
  `reference` VARCHAR(512) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `uq_reqn_version_id_rank` (`reqn_version_id` ASC, `rank` ASC),
  INDEX `fk_reqn_version_id` (`reqn_version_id` ASC),
  CONSTRAINT `fk_reference_reqn_version_id`
    FOREIGN KEY (`reqn_version_id`)
    REFERENCES `magnolia`.`reqn_version` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4;


-- -----------------------------------------------------
-- Table `magnolia`.`reqn`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `magnolia`.`reqn` (
  `id` INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  `update_timestamp` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP() ON UPDATE CURRENT_TIMESTAMP(),
  `create_timestamp` TIMESTAMP NOT NULL DEFAULT '0000-00-00 00:00:00',
  `reqn_type_id` INT(10) UNSIGNED NOT NULL,
  `disable_notification` TINYINT(1) NOT NULL DEFAULT 0,
  `user_id` INT(10) UNSIGNED NOT NULL,
  `trainee_user_id` INT(10) UNSIGNED NULL DEFAULT NULL,
  `designate_user_id` INT(10) UNSIGNED NULL DEFAULT NULL,
  `language_id` INT(10) UNSIGNED NOT NULL,
  `deadline_id` INT(10) UNSIGNED NULL DEFAULT NULL,
  `identifier` VARCHAR(45) NOT NULL,
  `legacy` TINYINT(1) NOT NULL DEFAULT 0,
  `show_prices` TINYINT(1) NOT NULL DEFAULT 1,
  `override_price` INT(10) UNSIGNED NULL DEFAULT NULL,
  `non_payment` TINYINT(1) NOT NULL DEFAULT 0,
  `data_directory` VARCHAR(45) NULL DEFAULT NULL,
  `data_expiry_date` DATE NULL DEFAULT NULL,
  `state` ENUM('deferred', 'inactive', 'abandoned') NULL DEFAULT NULL,
  `state_date` DATE NULL DEFAULT NULL,
  `website` TINYINT(1) NOT NULL DEFAULT 0,
  `data_sharing_approved` TINYINT(1) NULL DEFAULT NULL,
  `instruction_filename` VARCHAR(255) NULL DEFAULT NULL,
  `suggested_revisions` TINYINT(1) NOT NULL DEFAULT 0,
  `deferral_note_amendment` TEXT NULL DEFAULT NULL,
  `deferral_note_1a` TEXT NULL DEFAULT NULL,
  `deferral_note_1b` TEXT NULL DEFAULT NULL,
  `deferral_note_1c` TEXT NULL DEFAULT NULL,
  `deferral_note_1d` TEXT NULL DEFAULT NULL,
  `deferral_note_1e` TEXT NULL DEFAULT NULL,
  `deferral_note_1f` TEXT NULL DEFAULT NULL,
  `deferral_note_cohort` TEXT NULL DEFAULT NULL,
  `deferral_note_indigenous` TEXT NULL DEFAULT NULL,
  `deferral_note_2a` TEXT NULL DEFAULT NULL,
  `deferral_note_2b` TEXT NULL DEFAULT NULL,
  `deferral_note_2c` TEXT NULL DEFAULT NULL,
  `deferral_note_2d` TEXT NULL DEFAULT NULL,
  `deferral_note_2e` TEXT NULL DEFAULT NULL,
  `deferral_note_2f` TEXT NULL DEFAULT NULL,
  `deferral_note_report1` TEXT NULL DEFAULT NULL,
  `deferral_note_report2` TEXT NULL DEFAULT NULL,
  `deferral_note_report3` TEXT NULL DEFAULT NULL,
  `note` TEXT NULL DEFAULT NULL,
  `chair_note` TEXT NULL DEFAULT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `uq_identifier` (`identifier` ASC),
  UNIQUE INDEX `uq_data_directory` (`data_directory` ASC),
  INDEX `fk_user_id` (`user_id` ASC),
  INDEX `fk_language_id` (`language_id` ASC),
  INDEX `dk_state` (`state` ASC),
  INDEX `fk_deadline_id` (`deadline_id` ASC),
  INDEX `fk_reqn_type_id` (`reqn_type_id` ASC),
  INDEX `dk_state_date` (`state_date` ASC),
  INDEX `fk_trainee_user_id` (`trainee_user_id` ASC),
  INDEX `fk_designate_user_id` (`designate_user_id` ASC),
  CONSTRAINT `fk_reqn_deadline_id`
    FOREIGN KEY (`deadline_id`)
    REFERENCES `magnolia`.`deadline` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_reqn_designate_user_id`
    FOREIGN KEY (`designate_user_id`)
    REFERENCES `cenozo`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_reqn_language_id`
    FOREIGN KEY (`language_id`)
    REFERENCES `cenozo`.`language` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_reqn_trainee_user_id`
    FOREIGN KEY (`trainee_user_id`)
    REFERENCES `cenozo`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_reqn_type_id`
    FOREIGN KEY (`reqn_type_id`)
    REFERENCES `magnolia`.`reqn_type` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_reqn_user_id`
    FOREIGN KEY (`user_id`)
    REFERENCES `cenozo`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4;


-- -----------------------------------------------------
-- Table `magnolia`.`reqn_current_final_report`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `magnolia`.`reqn_current_final_report` (
  `reqn_id` INT(10) UNSIGNED NOT NULL,
  `final_report_id` INT(10) UNSIGNED NULL DEFAULT NULL,
  `update_timestamp` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP() ON UPDATE CURRENT_TIMESTAMP(),
  `create_timestamp` TIMESTAMP NOT NULL DEFAULT '0000-00-00 00:00:00',
  PRIMARY KEY (`reqn_id`),
  INDEX `fk_final_report_id` (`final_report_id` ASC),
  CONSTRAINT `fk_reqn_current_final_report_final_report_id`
    FOREIGN KEY (`final_report_id`)
    REFERENCES `magnolia`.`final_report` (`id`)
    ON DELETE SET NULL
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_reqn_current_final_report_reqn_id`
    FOREIGN KEY (`reqn_id`)
    REFERENCES `magnolia`.`reqn` (`id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4;


-- -----------------------------------------------------
-- Table `magnolia`.`reqn_current_reqn_version`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `magnolia`.`reqn_current_reqn_version` (
  `reqn_id` INT(10) UNSIGNED NOT NULL,
  `reqn_version_id` INT(10) UNSIGNED NULL DEFAULT NULL,
  `update_timestamp` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP() ON UPDATE CURRENT_TIMESTAMP(),
  `create_timestamp` TIMESTAMP NOT NULL DEFAULT '0000-00-00 00:00:00',
  PRIMARY KEY (`reqn_id`),
  INDEX `fk_reqn_version_id` (`reqn_version_id` ASC),
  CONSTRAINT `fk_reqn_current_reqn_version_reqn_id`
    FOREIGN KEY (`reqn_id`)
    REFERENCES `magnolia`.`reqn` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_reqn_current_reqn_version_reqn_version_id`
    FOREIGN KEY (`reqn_version_id`)
    REFERENCES `magnolia`.`reqn_version` (`id`)
    ON DELETE SET NULL
    ON UPDATE CASCADE)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4;


-- -----------------------------------------------------
-- Table `magnolia`.`reqn_has_additional_fee`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `magnolia`.`reqn_has_additional_fee` (
  `reqn_id` INT(10) UNSIGNED NOT NULL,
  `additional_fee_id` INT UNSIGNED NOT NULL,
  `update_timestamp` TIMESTAMP NOT NULL,
  `create_timestamp` TIMESTAMP NOT NULL,
  PRIMARY KEY (`reqn_id`, `additional_fee_id`),
  INDEX `fk_additional_fee_id` (`additional_fee_id` ASC),
  INDEX `fk_reqn_id` (`reqn_id` ASC),
  CONSTRAINT `fk_reqn_has_additional_fee_reqn_id`
    FOREIGN KEY (`reqn_id`)
    REFERENCES `magnolia`.`reqn` (`id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_reqn_has_additional_fee_additional_fee_id`
    FOREIGN KEY (`additional_fee_id`)
    REFERENCES `magnolia`.`additional_fee` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4;


-- -----------------------------------------------------
-- Table `magnolia`.`reqn_last_ethics_approval`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `magnolia`.`reqn_last_ethics_approval` (
  `reqn_id` INT(10) UNSIGNED NOT NULL,
  `ethics_approval_id` INT(10) UNSIGNED NULL DEFAULT NULL,
  `update_timestamp` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP() ON UPDATE CURRENT_TIMESTAMP(),
  `create_timestamp` TIMESTAMP NOT NULL DEFAULT '0000-00-00 00:00:00',
  PRIMARY KEY (`reqn_id`),
  INDEX `fk_ethics_approval_id` (`ethics_approval_id` ASC),
  CONSTRAINT `fk_reqn_last_ethics_approval_ethics_approval_id`
    FOREIGN KEY (`ethics_approval_id`)
    REFERENCES `magnolia`.`ethics_approval` (`id`)
    ON DELETE SET NULL
    ON UPDATE CASCADE,
  CONSTRAINT `fk_reqn_last_ethics_approval_reqn_id`
    FOREIGN KEY (`reqn_id`)
    REFERENCES `magnolia`.`reqn` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4;


-- -----------------------------------------------------
-- Table `magnolia`.`reqn_last_reqn_version_with_agreement`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `magnolia`.`reqn_last_reqn_version_with_agreement` (
  `reqn_id` INT(10) UNSIGNED NOT NULL,
  `reqn_version_id` INT(10) UNSIGNED NULL DEFAULT NULL,
  `update_timestamp` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP() ON UPDATE CURRENT_TIMESTAMP(),
  `create_timestamp` TIMESTAMP NOT NULL DEFAULT '0000-00-00 00:00:00',
  PRIMARY KEY (`reqn_id`),
  INDEX `fk_reqn_version_id` (`reqn_version_id` ASC),
  CONSTRAINT `fk_reqn_last_reqn_version_with_agreement_reqn_id`
    FOREIGN KEY (`reqn_id`)
    REFERENCES `magnolia`.`reqn` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_reqn_last_reqn_version_with_agreement_reqn_version_id`
    FOREIGN KEY (`reqn_version_id`)
    REFERENCES `magnolia`.`reqn_version` (`id`)
    ON DELETE SET NULL
    ON UPDATE CASCADE)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4;


-- -----------------------------------------------------
-- Table `magnolia`.`reqn_type`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `magnolia`.`reqn_type` (
  `id` INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  `update_timestamp` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP() ON UPDATE CURRENT_TIMESTAMP(),
  `create_timestamp` TIMESTAMP NOT NULL DEFAULT '0000-00-00 00:00:00',
  `name` VARCHAR(45) NOT NULL,
  `available` TINYINT(1) NOT NULL DEFAULT 0,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `uq_name` (`name` ASC))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4;


-- -----------------------------------------------------
-- Table `magnolia`.`reqn_type_has_stage_type`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `magnolia`.`reqn_type_has_stage_type` (
  `reqn_type_id` INT(10) UNSIGNED NOT NULL,
  `stage_type_id` INT(10) UNSIGNED NOT NULL,
  `update_timestamp` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP() ON UPDATE CURRENT_TIMESTAMP(),
  `create_timestamp` TIMESTAMP NOT NULL DEFAULT '0000-00-00 00:00:00',
  PRIMARY KEY (`reqn_type_id`, `stage_type_id`),
  INDEX `fk_stage_type_id` (`stage_type_id` ASC),
  INDEX `fk_reqn_type_id` (`reqn_type_id` ASC),
  CONSTRAINT `fk_reqn_type_has_stage_type_reqn_type_id`
    FOREIGN KEY (`reqn_type_id`)
    REFERENCES `magnolia`.`reqn_type` (`id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_reqn_type_has_stage_type_stage_type_id`
    FOREIGN KEY (`stage_type_id`)
    REFERENCES `magnolia`.`stage_type` (`id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4;


-- -----------------------------------------------------
-- Table `magnolia`.`reqn_version`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `magnolia`.`reqn_version` (
  `id` INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  `update_timestamp` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP() ON UPDATE CURRENT_TIMESTAMP(),
  `create_timestamp` TIMESTAMP NOT NULL DEFAULT '0000-00-00 00:00:00',
  `reqn_id` INT(10) UNSIGNED NOT NULL,
  `new_user_id` INT(10) UNSIGNED NULL DEFAULT NULL,
  `amendment` CHAR(1) NOT NULL DEFAULT '.',
  `version` INT(10) UNSIGNED NOT NULL DEFAULT 1,
  `datetime` DATETIME NOT NULL,
  `applicant_position` VARCHAR(255) NULL DEFAULT NULL,
  `applicant_affiliation` VARCHAR(255) NULL DEFAULT NULL,
  `applicant_address` VARCHAR(511) NULL DEFAULT NULL,
  `applicant_country_id` INT(10) UNSIGNED NULL DEFAULT NULL,
  `applicant_phone` VARCHAR(45) NULL DEFAULT NULL,
  `trainee_program` VARCHAR(255) NULL DEFAULT NULL,
  `trainee_institution` VARCHAR(255) NULL DEFAULT NULL,
  `trainee_address` VARCHAR(511) NULL DEFAULT NULL,
  `trainee_country_id` INT(10) UNSIGNED NULL DEFAULT NULL,
  `trainee_phone` VARCHAR(45) NULL DEFAULT NULL,
  `coapplicant_agreement_filename` VARCHAR(255) NULL DEFAULT NULL,
  `start_date` DATE NULL DEFAULT NULL,
  `duration` ENUM('2 years', '3 years', '2 years + 1 additional year', '2 years + 2 additional years', '2 years + 3 additional years', '3 years + 1 additional year', '3 years + 2 additional years', '3 years + 3 additional years') NULL DEFAULT NULL,
  `title` VARCHAR(511) NULL DEFAULT NULL,
  `keywords` VARCHAR(255) NULL DEFAULT NULL,
  `lay_summary` VARCHAR(2047) NULL DEFAULT NULL,
  `background` TEXT NULL DEFAULT NULL,
  `objectives` TEXT NULL DEFAULT NULL,
  `methodology` TEXT NULL DEFAULT NULL,
  `analysis` TEXT NULL DEFAULT NULL,
  `peer_review` TINYINT(1) NULL DEFAULT NULL,
  `peer_review_filename` VARCHAR(255) NULL DEFAULT NULL,
  `funding` ENUM('yes', 'no', 'requested') NULL DEFAULT NULL,
  `funding_filename` VARCHAR(255) NULL DEFAULT NULL,
  `funding_agency` VARCHAR(255) NULL DEFAULT NULL,
  `grant_number` VARCHAR(45) NULL DEFAULT NULL,
  `ethics` ENUM('yes', 'no', 'exempt') NULL DEFAULT NULL,
  `ethics_date` DATE NULL DEFAULT NULL,
  `ethics_filename` VARCHAR(255) NULL DEFAULT NULL,
  `waiver` ENUM('graduate', 'postdoc', 'clinical', 'none') NULL DEFAULT NULL,
  `comprehensive` TINYINT(1) NULL DEFAULT NULL,
  `tracking` TINYINT(1) NULL DEFAULT NULL,
  `longitudinal` TINYINT(1) NULL DEFAULT NULL,
  `last_identifier` CHAR(10) NULL DEFAULT NULL,
  `indigenous_first_nation` TINYINT(1) NULL,
  `indigenous_metis` TINYINT(1) NULL,
  `indigenous_inuit` TINYINT(1) NULL,
  `indigenous_description` TEXT NULL DEFAULT NULL,
  `indigenous1_filename` VARCHAR(255) NULL,
  `indigenous2_filename` VARCHAR(255) NULL,
  `indigenous3_filename` VARCHAR(255) NULL,
  `indigenous4_filename` VARCHAR(255) NULL,
  `data_sharing_filename` VARCHAR(255) NULL DEFAULT NULL,
  `agreement_filename` VARCHAR(255) NULL DEFAULT NULL,
  `agreement_start_date` DATE NULL DEFAULT NULL,
  `agreement_end_date` DATE NULL DEFAULT NULL,
  `data_agreement_id` INT UNSIGNED NULL DEFAULT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `uq_reqn_id_amendment_version` (`reqn_id` ASC, `amendment` ASC, `version` ASC),
  INDEX `fk_reqn_id` (`reqn_id` ASC),
  INDEX `fk_new_user_id` (`new_user_id` ASC),
  INDEX `fk_applicant_country_id` (`applicant_country_id` ASC),
  INDEX `fk_trainee_country_id` (`trainee_country_id` ASC),
  INDEX `fk_data_agreement_id` (`data_agreement_id` ASC),
  CONSTRAINT `fk_reqn_version_applicant_country_id`
    FOREIGN KEY (`applicant_country_id`)
    REFERENCES `cenozo`.`country` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_reqn_version_new_user_id`
    FOREIGN KEY (`new_user_id`)
    REFERENCES `cenozo`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_reqn_version_reqn_id`
    FOREIGN KEY (`reqn_id`)
    REFERENCES `magnolia`.`reqn` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_reqn_version_trainee_country_id`
    FOREIGN KEY (`trainee_country_id`)
    REFERENCES `cenozo`.`country` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_reqn_version_data_agreement_id`
    FOREIGN KEY (`data_agreement_id`)
    REFERENCES `magnolia`.`data_agreement` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4;


-- -----------------------------------------------------
-- Table `magnolia`.`reqn_version_comment`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `magnolia`.`reqn_version_comment` (
  `id` INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  `update_timestamp` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP() ON UPDATE CURRENT_TIMESTAMP(),
  `create_timestamp` TIMESTAMP NOT NULL DEFAULT '0000-00-00 00:00:00',
  `reqn_version_id` INT(10) UNSIGNED NOT NULL,
  `data_category_id` INT(10) UNSIGNED NOT NULL,
  `description` TEXT NULL DEFAULT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `uq_reqn_version_id_data_category_id` (`reqn_version_id` ASC, `data_category_id` ASC),
  INDEX `fk_reqn_version_id` (`reqn_version_id` ASC),
  INDEX `fk_data_category_id` (`data_category_id` ASC),
  CONSTRAINT `fk_reqn_version_comment_data_category_id`
    FOREIGN KEY (`data_category_id`)
    REFERENCES `magnolia`.`data_category` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_reqn_version_comment_reqn_version_id`
    FOREIGN KEY (`reqn_version_id`)
    REFERENCES `magnolia`.`reqn_version` (`id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4;


-- -----------------------------------------------------
-- Table `magnolia`.`reqn_version_has_amendment_type`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `magnolia`.`reqn_version_has_amendment_type` (
  `reqn_version_id` INT(10) UNSIGNED NOT NULL,
  `amendment_type_id` INT(10) UNSIGNED NOT NULL,
  `update_timestamp` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP() ON UPDATE CURRENT_TIMESTAMP(),
  `create_timestamp` TIMESTAMP NOT NULL DEFAULT '0000-00-00 00:00:00',
  PRIMARY KEY (`reqn_version_id`, `amendment_type_id`),
  INDEX `fk_amendment_type_id` (`amendment_type_id` ASC),
  INDEX `fk_reqn_version_id` (`reqn_version_id` ASC),
  CONSTRAINT `fk_reqn_version_has_amendment_type_amendment_type_id`
    FOREIGN KEY (`amendment_type_id`)
    REFERENCES `magnolia`.`amendment_type` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_reqn_version_has_amendment_type_reqn_version_id`
    FOREIGN KEY (`reqn_version_id`)
    REFERENCES `magnolia`.`reqn_version` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4;


-- -----------------------------------------------------
-- Table `magnolia`.`reqn_version_has_data_selection`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `magnolia`.`reqn_version_has_data_selection` (
  `reqn_version_id` INT(10) UNSIGNED NOT NULL,
  `data_selection_id` INT(10) UNSIGNED NOT NULL,
  `update_timestamp` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP() ON UPDATE CURRENT_TIMESTAMP(),
  `create_timestamp` TIMESTAMP NOT NULL DEFAULT '0000-00-00 00:00:00',
  PRIMARY KEY (`reqn_version_id`, `data_selection_id`),
  INDEX `fk_data_selection_id` (`data_selection_id` ASC),
  INDEX `fk_reqn_version_id` (`reqn_version_id` ASC),
  CONSTRAINT `fk_reqn_version_has_data_selection_data_selection_id`
    FOREIGN KEY (`data_selection_id`)
    REFERENCES `magnolia`.`data_selection` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_reqn_version_has_data_selection_reqn_version_id`
    FOREIGN KEY (`reqn_version_id`)
    REFERENCES `magnolia`.`reqn_version` (`id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4;


-- -----------------------------------------------------
-- Table `magnolia`.`review`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `magnolia`.`review` (
  `id` INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  `update_timestamp` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP() ON UPDATE CURRENT_TIMESTAMP(),
  `create_timestamp` TIMESTAMP NOT NULL DEFAULT '0000-00-00 00:00:00',
  `reqn_id` INT(10) UNSIGNED NOT NULL,
  `amendment` CHAR(1) NOT NULL DEFAULT '.',
  `review_type_id` INT(10) UNSIGNED NOT NULL,
  `user_id` INT(10) UNSIGNED NULL DEFAULT NULL,
  `datetime` DATETIME NOT NULL,
  `recommendation_type_id` INT(10) UNSIGNED NULL DEFAULT NULL,
  `note` TEXT NULL DEFAULT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `uq_reqn_id_amendment_review_type_id` (`reqn_id` ASC, `amendment` ASC, `review_type_id` ASC),
  INDEX `fk_reqn_id` (`reqn_id` ASC),
  INDEX `fk_user_id` (`user_id` ASC),
  INDEX `fk_review_review_type_id` (`review_type_id` ASC),
  INDEX `fk_recommendation_type_id` (`recommendation_type_id` ASC),
  UNIQUE INDEX `uq_reqn_id_amendment_review_type_id` (`reqn_id` ASC, `amendment` ASC, `review_type_id` ASC),
  CONSTRAINT `fk_review_recommendation_type_id`
    FOREIGN KEY (`recommendation_type_id`)
    REFERENCES `magnolia`.`recommendation_type` (`id`)
    ON DELETE NO ACTION,
  CONSTRAINT `fk_review_reqn_id`
    FOREIGN KEY (`reqn_id`)
    REFERENCES `magnolia`.`reqn` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_review_review_type_id`
    FOREIGN KEY (`review_type_id`)
    REFERENCES `magnolia`.`review_type` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_review_user_id`
    FOREIGN KEY (`user_id`)
    REFERENCES `cenozo`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4;


-- -----------------------------------------------------
-- Table `magnolia`.`review_answer`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `magnolia`.`review_answer` (
  `id` INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  `update_timestamp` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP() ON UPDATE CURRENT_TIMESTAMP(),
  `create_timestamp` TIMESTAMP NOT NULL DEFAULT '0000-00-00 00:00:00',
  `review_id` INT(10) UNSIGNED NOT NULL,
  `review_type_question_id` INT(10) UNSIGNED NOT NULL,
  `answer` TINYINT(1) NULL DEFAULT NULL,
  `comment` TEXT NULL DEFAULT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `uq_review_id_review_type_question_id` (`review_id` ASC, `review_type_question_id` ASC),
  INDEX `fk_review_id` (`review_id` ASC),
  INDEX `fk_review_type_question_id` (`review_type_question_id` ASC),
  CONSTRAINT `fk_review_answer_review_id`
    FOREIGN KEY (`review_id`)
    REFERENCES `magnolia`.`review` (`id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_review_answer_review_type_question_id`
    FOREIGN KEY (`review_type_question_id`)
    REFERENCES `magnolia`.`review_type_question` (`id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4;


-- -----------------------------------------------------
-- Table `magnolia`.`review_type`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `magnolia`.`review_type` (
  `id` INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  `update_timestamp` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP() ON UPDATE CURRENT_TIMESTAMP(),
  `create_timestamp` TIMESTAMP NOT NULL DEFAULT '0000-00-00 00:00:00',
  `name` VARCHAR(45) NOT NULL,
  `stage_type_id` INT(10) UNSIGNED NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `uq_name` (`name` ASC),
  INDEX `fk_stage_type_id` (`stage_type_id` ASC),
  CONSTRAINT `fk_review_type_stage_type_id`
    FOREIGN KEY (`stage_type_id`)
    REFERENCES `magnolia`.`stage_type` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4;


-- -----------------------------------------------------
-- Table `magnolia`.`review_type_has_recommendation_type`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `magnolia`.`review_type_has_recommendation_type` (
  `review_type_id` INT(10) UNSIGNED NOT NULL,
  `recommendation_type_id` INT(10) UNSIGNED NOT NULL,
  `update_timestamp` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP() ON UPDATE CURRENT_TIMESTAMP(),
  `create_timestamp` TIMESTAMP NOT NULL DEFAULT '0000-00-00 00:00:00',
  PRIMARY KEY (`review_type_id`, `recommendation_type_id`),
  INDEX `fk_recommendation_type_id` (`recommendation_type_id` ASC),
  INDEX `fk_review_type_id` (`review_type_id` ASC),
  CONSTRAINT `fk_review_type_has_recommendation_type_recommendation_type_id`
    FOREIGN KEY (`recommendation_type_id`)
    REFERENCES `magnolia`.`recommendation_type` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_review_type_has_recommendation_typereview_type_id`
    FOREIGN KEY (`review_type_id`)
    REFERENCES `magnolia`.`review_type` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4;


-- -----------------------------------------------------
-- Table `magnolia`.`review_type_question`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `magnolia`.`review_type_question` (
  `id` INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  `update_timestamp` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP() ON UPDATE CURRENT_TIMESTAMP(),
  `create_timestamp` TIMESTAMP NOT NULL DEFAULT '0000-00-00 00:00:00',
  `review_type_id` INT(10) UNSIGNED NOT NULL,
  `rank` INT(10) UNSIGNED NOT NULL,
  `question` TEXT NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `uq_review_type_id_rank` (`review_type_id` ASC, `rank` ASC),
  INDEX `fk_review_type_id` (`review_type_id` ASC),
  CONSTRAINT `fk_review_type_question_review_type_id`
    FOREIGN KEY (`review_type_id`)
    REFERENCES `magnolia`.`review_type` (`id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4;


-- -----------------------------------------------------
-- Table `magnolia`.`role_has_review_type`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `magnolia`.`role_has_review_type` (
  `role_id` INT(10) UNSIGNED NOT NULL,
  `review_type_id` INT(10) UNSIGNED NOT NULL,
  `update_timestamp` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP() ON UPDATE CURRENT_TIMESTAMP(),
  `create_timestamp` TIMESTAMP NOT NULL DEFAULT '0000-00-00 00:00:00',
  PRIMARY KEY (`role_id`, `review_type_id`),
  INDEX `fk_review_type_id` (`review_type_id` ASC),
  INDEX `fk_role_id` (`role_id` ASC),
  CONSTRAINT `fk_role_has_review_type_review_type_id`
    FOREIGN KEY (`review_type_id`)
    REFERENCES `magnolia`.`review_type` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_role_has_review_type_role_id`
    FOREIGN KEY (`role_id`)
    REFERENCES `cenozo`.`role` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4;


-- -----------------------------------------------------
-- Table `magnolia`.`role_has_service`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `magnolia`.`role_has_service` (
  `role_id` INT(10) UNSIGNED NOT NULL,
  `service_id` INT(10) UNSIGNED NOT NULL,
  `update_timestamp` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP() ON UPDATE CURRENT_TIMESTAMP(),
  `create_timestamp` TIMESTAMP NOT NULL DEFAULT '0000-00-00 00:00:00',
  PRIMARY KEY (`role_id`, `service_id`),
  INDEX `fk_role_id` (`role_id` ASC),
  INDEX `fk_service_id` (`service_id` ASC),
  CONSTRAINT `fk_role_has_service_role_id`
    FOREIGN KEY (`role_id`)
    REFERENCES `cenozo`.`role` (`id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_role_has_service_service_id`
    FOREIGN KEY (`service_id`)
    REFERENCES `magnolia`.`service` (`id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4;


-- -----------------------------------------------------
-- Table `magnolia`.`service`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `magnolia`.`service` (
  `id` INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  `update_timestamp` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP() ON UPDATE CURRENT_TIMESTAMP(),
  `create_timestamp` TIMESTAMP NOT NULL DEFAULT '0000-00-00 00:00:00',
  `method` ENUM('DELETE', 'GET', 'PATCH', 'POST', 'PUT') NOT NULL,
  `subject` VARCHAR(45) NOT NULL,
  `resource` TINYINT(1) NOT NULL DEFAULT 0,
  `restricted` TINYINT(1) NOT NULL DEFAULT 1,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `uq_method_subject_resource` (`method` ASC, `subject` ASC, `resource` ASC))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4;


-- -----------------------------------------------------
-- Table `magnolia`.`setting`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `magnolia`.`setting` (
  `id` INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  `update_timestamp` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP() ON UPDATE CURRENT_TIMESTAMP(),
  `create_timestamp` TIMESTAMP NOT NULL DEFAULT '0000-00-00 00:00:00',
  `site_id` INT(10) UNSIGNED NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `uq_site_id` (`site_id` ASC),
  INDEX `fk_site_id` (`site_id` ASC),
  CONSTRAINT `fk_setting_site_id`
    FOREIGN KEY (`site_id`)
    REFERENCES `cenozo`.`site` (`id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4;


-- -----------------------------------------------------
-- Table `magnolia`.`stage`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `magnolia`.`stage` (
  `id` INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  `update_timestamp` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP() ON UPDATE CURRENT_TIMESTAMP(),
  `create_timestamp` TIMESTAMP NOT NULL DEFAULT '0000-00-00 00:00:00',
  `reqn_id` INT(10) UNSIGNED NOT NULL,
  `amendment` CHAR(1) NOT NULL,
  `stage_type_id` INT(10) UNSIGNED NOT NULL,
  `user_id` INT(10) UNSIGNED NULL DEFAULT NULL,
  `datetime` DATETIME NULL DEFAULT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_reqn_id` (`reqn_id` ASC),
  INDEX `fk_stage_type_id` (`stage_type_id` ASC),
  INDEX `fk_user_id` (`user_id` ASC),
  UNIQUE INDEX `uq_reqn_id_amendment_stage_type_id` (`reqn_id` ASC, `amendment` ASC, `stage_type_id` ASC),
  CONSTRAINT `fk_stage_reqn_id`
    FOREIGN KEY (`reqn_id`)
    REFERENCES `magnolia`.`reqn` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_stage_stage_type_id`
    FOREIGN KEY (`stage_type_id`)
    REFERENCES `magnolia`.`stage_type` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_stage_user_id`
    FOREIGN KEY (`user_id`)
    REFERENCES `cenozo`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4;


-- -----------------------------------------------------
-- Table `magnolia`.`stage_type`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `magnolia`.`stage_type` (
  `id` INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  `update_timestamp` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP() ON UPDATE CURRENT_TIMESTAMP(),
  `create_timestamp` TIMESTAMP NOT NULL DEFAULT '0000-00-00 00:00:00',
  `phase` ENUM('new', 'review', 'active', 'finalization', 'complete') NOT NULL,
  `rank` INT(10) UNSIGNED NOT NULL,
  `name` VARCHAR(45) NOT NULL,
  `status` VARCHAR(45) NOT NULL,
  `notification_type_id` INT(10) UNSIGNED NULL DEFAULT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `uq_name` (`name` ASC),
  UNIQUE INDEX `uq_rank` (`rank` ASC),
  INDEX `fk_notification_type_id` (`notification_type_id` ASC),
  CONSTRAINT `fk_stage_type_notification_type_id`
    FOREIGN KEY (`notification_type_id`)
    REFERENCES `magnolia`.`notification_type` (`id`)
    ON DELETE SET NULL
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4;


-- -----------------------------------------------------
-- Table `magnolia`.`stage_type_has_stage_type`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `magnolia`.`stage_type_has_stage_type` (
  `stage_type_id` INT(10) UNSIGNED NOT NULL,
  `next_stage_type_id` INT(10) UNSIGNED NOT NULL,
  `update_timestamp` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP() ON UPDATE CURRENT_TIMESTAMP(),
  `create_timestamp` TIMESTAMP NOT NULL DEFAULT '0000-00-00 00:00:00',
  PRIMARY KEY (`stage_type_id`, `next_stage_type_id`),
  INDEX `fk_next_stage_type_id` (`next_stage_type_id` ASC),
  INDEX `fk_stage_type_id` (`stage_type_id` ASC),
  CONSTRAINT `fk_stage_type_has_stage_type_next_stage_type_id`
    FOREIGN KEY (`next_stage_type_id`)
    REFERENCES `magnolia`.`stage_type` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_stage_type_has_stage_type_stage_type_id`
    FOREIGN KEY (`stage_type_id`)
    REFERENCES `magnolia`.`stage_type` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4;


-- -----------------------------------------------------
-- Table `magnolia`.`supplemental_file`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `magnolia`.`supplemental_file` (
  `id` INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  `update_timestamp` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP() ON UPDATE CURRENT_TIMESTAMP(),
  `create_timestamp` TIMESTAMP NOT NULL DEFAULT '0000-00-00 00:00:00',
  `name_en` VARCHAR(127) NOT NULL,
  `name_fr` VARCHAR(127) NOT NULL,
  `filename_en` VARCHAR(255) NULL DEFAULT NULL,
  `filename_fr` VARCHAR(255) NULL DEFAULT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `uq_name_en` (`name_en` ASC),
  UNIQUE INDEX `uq_name_fr` (`name_fr` ASC))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4;


-- -----------------------------------------------------
-- Table `magnolia`.`writelog`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `magnolia`.`writelog` (
  `id` INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  `user_id` INT(10) UNSIGNED NOT NULL,
  `site_id` INT(10) UNSIGNED NOT NULL,
  `role_id` INT(10) UNSIGNED NOT NULL,
  `method` ENUM('DELETE', 'PATCH', 'POST', 'PUT') NULL DEFAULT NULL,
  `path` VARCHAR(512) NULL DEFAULT NULL,
  `elapsed` FLOAT NULL DEFAULT NULL,
  `status` INT(11) NULL DEFAULT NULL,
  `datetime` DATETIME NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_user_id` (`user_id` ASC),
  INDEX `fk_site_id` (`site_id` ASC),
  INDEX `fk_role_id` (`role_id` ASC),
  INDEX `dk_datetime` (`datetime` ASC),
  CONSTRAINT `fk_writelog_role_id`
    FOREIGN KEY (`role_id`)
    REFERENCES `cenozo`.`role` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_writelog_site_id`
    FOREIGN KEY (`site_id`)
    REFERENCES `cenozo`.`site` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_writelog_user_id`
    FOREIGN KEY (`user_id`)
    REFERENCES `cenozo`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4;

USE `cenozo` ;

-- -----------------------------------------------------
-- procedure contact_changed
-- -----------------------------------------------------

DELIMITER $$
USE `cenozo`$$
CREATE DEFINER=`patrick`@`localhost` PROCEDURE `contact_changed`(IN proc_participant_id INT(10) UNSIGNED)
BEGIN
  IF proc_participant_id IS NOT NULL THEN
    SELECT trace_type.name, IF( address.id IS NULL, 0, COUNT(*) )
    INTO @trace_type, @address_count
    FROM participant
    JOIN participant_last_trace ON participant.id = participant_last_trace.participant_id
    LEFT JOIN trace ON participant_last_trace.trace_id = trace.id
    LEFT JOIN trace_type ON trace.trace_type_id = trace_type.id
    LEFT JOIN address ON participant.id = address.participant_id AND address.active = 1
    WHERE participant.id = proc_participant_id;

    SELECT IF( phone.id IS NULL, 0, COUNT(*) )
    INTO @phone_count
    FROM participant
    LEFT JOIN phone ON participant.id = phone.participant_id AND phone.active = 1
    WHERE participant.id = proc_participant_id;

    IF 0 = @address_count OR 0 = @phone_count THEN
      IF @trace_type IS NULL THEN
        INSERT INTO trace( participant_id, trace_type_id, datetime, note )
        SELECT proc_participant_id, trace_type.id, UTC_TIMESTAMP(),
               "Automatically added after address or phone changed."
        FROM trace_type
        WHERE name = "site";
      END IF;
    ELSE
      IF @trace_type IS NOT NULL THEN
        INSERT INTO trace( participant_id, trace_type_id, datetime, note )
        VALUES( proc_participant_id, NULL, UTC_TIMESTAMP(),
                "Automatically added after address or phone changed." );
      END IF;
    END IF;
  END IF;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure get_hold_from_consent
-- -----------------------------------------------------

DELIMITER $$
USE `cenozo`$$
CREATE DEFINER=`patrick`@`localhost` PROCEDURE `get_hold_from_consent`(IN proc_consent_id INT(10) UNSIGNED, OUT proc_hold_id INT(10) UNSIGNED)
BEGIN
  SELECT hold.id INTO proc_hold_id
  FROM consent
  JOIN consent_type ON consent.consent_type_id = consent_type.id
  LEFT JOIN hold ON consent.datetime = hold.datetime
   AND hold.participant_id = consent.participant_id
  WHERE consent_type.name = "participation"
  AND consent.id = proc_consent_id;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure remove_duplicate_hold
-- -----------------------------------------------------

DELIMITER $$
USE `cenozo`$$
CREATE DEFINER=`patrick`@`localhost` PROCEDURE `remove_duplicate_hold`(IN proc_participant_id INT(10) UNSIGNED)
BEGIN
  
  DECLARE id_val INT UNSIGNED;
  DECLARE participant_id_val INT UNSIGNED;
  DECLARE hold_type_id_val INT UNSIGNED;
  DECLARE last_participant_id_val INT UNSIGNED;
  DECLARE last_hold_type_id_val INT UNSIGNED;

  
  DECLARE no_more_rows BOOLEAN;
  DECLARE loop_cntr INT DEFAULT 0;
  DECLARE num_rows INT DEFAULT 0;

  
  DECLARE the_cursor CURSOR FOR
  SELECT id, participant_id, hold_type_id
  FROM hold
  WHERE participant_id = IFNULL( proc_participant_id, participant_id )
  ORDER BY participant_id, datetime;

  
  DECLARE CONTINUE HANDLER FOR NOT FOUND
  SET no_more_rows = TRUE;

  
  
  OPEN the_cursor;
  select FOUND_ROWS() into num_rows;

  SET last_participant_id_val = NULL;
  SET last_hold_type_id_val = NULL;

  the_loop: LOOP

    FETCH the_cursor
    INTO id_val, participant_id_val, hold_type_id_val;

    
      
      
    IF no_more_rows THEN
      CLOSE the_cursor;
      LEAVE the_loop;
    END IF;

    IF NOT (participant_id_val <=> last_participant_id_val ) THEN
      

      IF hold_type_id_val IS NULL THEN
        
        DELETE FROM hold WHERE id = id_val;
        SET last_participant_id_val = NULL;
        SET last_hold_type_id_val = NULL;
      ELSE
        
        SET last_participant_id_val = participant_id_val;
        SET last_hold_type_id_val = hold_type_id_val;
      END IF;
    ELSE
      

      
      IF hold_type_id_val <=> last_hold_type_id_val THEN
        
        DELETE FROM hold WHERE id = id_val;
      ELSE
        
        SET last_participant_id_val = participant_id_val;
        SET last_hold_type_id_val = hold_type_id_val;
      END IF;
    END IF;

    
    SET loop_cntr = loop_cntr + 1;

  END LOOP the_loop;

END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure update_alternate_first_address
-- -----------------------------------------------------

DELIMITER $$
USE `cenozo`$$
CREATE DEFINER=`patrick`@`localhost` PROCEDURE `update_alternate_first_address`(IN proc_alternate_id INT(10) UNSIGNED)
BEGIN
  REPLACE INTO alternate_first_address( alternate_id, address_id )
  SELECT alternate.id, address.id
  FROM alternate
  LEFT JOIN address ON alternate.id = address.alternate_id
  AND address.rank <=> (
    SELECT MIN( address.rank )
    FROM address
    WHERE address.active
    AND alternate.id = address.alternate_id
    AND CASE MONTH( CURRENT_DATE() )
      WHEN 1 THEN address.january
      WHEN 2 THEN address.february
      WHEN 3 THEN address.march
      WHEN 4 THEN address.april
      WHEN 5 THEN address.may
      WHEN 6 THEN address.june
      WHEN 7 THEN address.july
      WHEN 8 THEN address.august
      WHEN 9 THEN address.september
      WHEN 10 THEN address.october
      WHEN 11 THEN address.november
      WHEN 12 THEN address.december
      ELSE 0 END = 1
    GROUP BY address.alternate_id
  )
  WHERE alternate.id = proc_alternate_id;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure update_alternate_last_alternate_consent
-- -----------------------------------------------------

DELIMITER $$
USE `cenozo`$$
CREATE DEFINER=`patrick`@`localhost` PROCEDURE `update_alternate_last_alternate_consent`(IN proc_alternate_id INT(10) UNSIGNED, IN proc_alternate_consent_type_id INT(10) UNSIGNED)
BEGIN
  REPLACE INTO alternate_last_alternate_consent( alternate_id, alternate_consent_type_id, alternate_consent_id )
  SELECT alternate.id, alternate_consent_type.id, alternate_consent.id
  FROM alternate
  CROSS JOIN alternate_consent_type
  LEFT JOIN alternate_consent ON alternate.id = alternate_consent.alternate_id
  AND alternate_consent_type.id = alternate_consent.alternate_consent_type_id
  AND alternate_consent.datetime <=> (
    SELECT MAX( datetime )
    FROM alternate_consent
    WHERE alternate.id = alternate_consent.alternate_id
    AND alternate_consent_type.id = alternate_consent.alternate_consent_type_id
    GROUP BY alternate_consent.alternate_id, alternate_consent.alternate_consent_type_id
    LIMIT 1
  )
  WHERE alternate.id = proc_alternate_id
  AND alternate_consent_type.id = proc_alternate_consent_type_id;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure update_alternate_last_alternate_consents
-- -----------------------------------------------------

DELIMITER $$
USE `cenozo`$$
CREATE DEFINER=`patrick`@`localhost` PROCEDURE `update_alternate_last_alternate_consents`(IN proc_alternate_id INT(10) UNSIGNED)
BEGIN
  REPLACE INTO alternate_last_alternate_consent( alternate_id, alternate_consent_type_id, alternate_consent_id )
  SELECT alternate.id, alternate_consent_type.id, alternate_consent.id
  FROM alternate
  CROSS JOIN alternate_consent_type
  LEFT JOIN alternate_consent ON alternate.id = alternate_consent.alternate_id
  AND alternate_consent_type.id = alternate_consent.alternate_consent_type_id
  AND alternate_consent.datetime <=> (
    SELECT MAX( datetime )
    FROM alternate_consent
    WHERE alternate.id = alternate_consent.alternate_id
    AND alternate_consent_type.id = alternate_consent.alternate_consent_type_id
    GROUP BY alternate_consent.alternate_id, alternate_consent.alternate_consent_type_id
    LIMIT 1
  )
  WHERE alternate.id = proc_alternate_id;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure update_alternate_last_written_alternate_consent
-- -----------------------------------------------------

DELIMITER $$
USE `cenozo`$$
CREATE DEFINER=`patrick`@`localhost` PROCEDURE `update_alternate_last_written_alternate_consent`(IN proc_alternate_id INT(10) UNSIGNED, IN proc_alternate_consent_type_id INT(10) UNSIGNED)
BEGIN
  REPLACE INTO alternate_last_written_alternate_consent( alternate_id, alternate_consent_type_id, alternate_consent_id )
  SELECT alternate.id, alternate_consent_type.id, alternate_consent.id
  FROM alternate
  CROSS JOIN alternate_consent_type
  LEFT JOIN alternate_consent ON alternate.id = alternate_consent.alternate_id
  AND alternate_consent_type.id = alternate_consent.alternate_consent_type_id
  AND alternate_consent.datetime <=> (
    SELECT MAX( datetime )
    FROM alternate_consent
    WHERE alternate_consent.written = true
    AND alternate.id = alternate_consent.alternate_id
    AND alternate_consent_type.id = alternate_consent.alternate_consent_type_id
    GROUP BY alternate_consent.alternate_id, alternate_consent.alternate_consent_type_id
    LIMIT 1
  )
  WHERE alternate.id = proc_alternate_id
  AND alternate_consent_type.id = proc_alternate_consent_type_id;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure update_alternate_last_written_alternate_consents
-- -----------------------------------------------------

DELIMITER $$
USE `cenozo`$$
CREATE DEFINER=`patrick`@`localhost` PROCEDURE `update_alternate_last_written_alternate_consents`(IN proc_alternate_id INT(10) UNSIGNED)
BEGIN
  REPLACE INTO alternate_last_written_alternate_consent( alternate_id, alternate_consent_type_id, alternate_consent_id )
  SELECT alternate.id, alternate_consent_type.id, alternate_consent.id
  FROM alternate
  CROSS JOIN alternate_consent_type
  LEFT JOIN alternate_consent ON alternate.id = alternate_consent.alternate_id
  AND alternate_consent_type.id = alternate_consent.alternate_consent_type_id
  AND alternate_consent.datetime <=> (
    SELECT MAX( datetime )
    FROM alternate_consent
    WHERE alternate_consent.written = true
    AND alternate.id = alternate_consent.alternate_id
    AND alternate_consent_type.id = alternate_consent.alternate_consent_type_id
    GROUP BY alternate_consent.alternate_id, alternate_consent.alternate_consent_type_id
    LIMIT 1
  )
  WHERE alternate.id = proc_alternate_id;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure update_participant_first_address
-- -----------------------------------------------------

DELIMITER $$
USE `cenozo`$$
CREATE DEFINER=`patrick`@`localhost` PROCEDURE `update_participant_first_address`(IN proc_participant_id INT(10) UNSIGNED)
BEGIN
  REPLACE INTO participant_first_address( participant_id, address_id )
  SELECT participant.id, address.id
  FROM participant
  LEFT JOIN address ON participant.id = address.participant_id
  AND address.rank <=> (
    SELECT MIN( address.rank )
    FROM address
    WHERE address.active
    AND participant.id = address.participant_id
    AND CASE MONTH( CURRENT_DATE() )
      WHEN 1 THEN address.january
      WHEN 2 THEN address.february
      WHEN 3 THEN address.march
      WHEN 4 THEN address.april
      WHEN 5 THEN address.may
      WHEN 6 THEN address.june
      WHEN 7 THEN address.july
      WHEN 8 THEN address.august
      WHEN 9 THEN address.september
      WHEN 10 THEN address.october
      WHEN 11 THEN address.november
      WHEN 12 THEN address.december
      ELSE 0 END = 1
    GROUP BY address.participant_id
  )
  WHERE participant.id = proc_participant_id;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure update_participant_last_consent
-- -----------------------------------------------------

DELIMITER $$
USE `cenozo`$$
CREATE DEFINER=`patrick`@`localhost` PROCEDURE `update_participant_last_consent`(IN proc_participant_id INT(10) UNSIGNED, IN proc_consent_type_id INT(10) UNSIGNED)
BEGIN
  REPLACE INTO participant_last_consent( participant_id, consent_type_id, consent_id )
  SELECT participant.id, consent_type.id, consent.id
  FROM participant
  CROSS JOIN consent_type
  LEFT JOIN consent ON participant.id = consent.participant_id
  AND consent_type.id = consent.consent_type_id
  AND consent.datetime <=> (
    SELECT MAX( datetime )
    FROM consent
    WHERE participant.id = consent.participant_id
    AND consent_type.id = consent.consent_type_id
    GROUP BY consent.participant_id, consent.consent_type_id
    LIMIT 1
  )
  WHERE participant.id = proc_participant_id
  AND consent_type.id = proc_consent_type_id;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure update_participant_last_consents
-- -----------------------------------------------------

DELIMITER $$
USE `cenozo`$$
CREATE DEFINER=`patrick`@`localhost` PROCEDURE `update_participant_last_consents`(IN proc_participant_id INT(10) UNSIGNED)
BEGIN
  REPLACE INTO participant_last_consent( participant_id, consent_type_id, consent_id )
  SELECT participant.id, consent_type.id, consent.id
  FROM participant
  CROSS JOIN consent_type
  LEFT JOIN consent ON participant.id = consent.participant_id
  AND consent_type.id = consent.consent_type_id
  AND consent.datetime <=> (
    SELECT MAX( datetime )
    FROM consent
    WHERE participant.id = consent.participant_id
    AND consent_type.id = consent.consent_type_id
    GROUP BY consent.participant_id, consent.consent_type_id
    LIMIT 1
  )
  WHERE participant.id = proc_participant_id;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure update_participant_last_event
-- -----------------------------------------------------

DELIMITER $$
USE `cenozo`$$
CREATE DEFINER=`patrick`@`localhost` PROCEDURE `update_participant_last_event`(IN proc_participant_id INT(10) UNSIGNED, IN proc_event_type_id INT(10) UNSIGNED)
BEGIN
  REPLACE INTO participant_last_event( participant_id, event_type_id, event_id )
  SELECT participant.id, event_type.id, event.id
  FROM participant
  CROSS JOIN event_type
  LEFT JOIN event ON participant.id = event.participant_id
  AND event_type.id = event.event_type_id
  AND event.datetime <=> (
    SELECT MAX( datetime )
    FROM event
    WHERE participant.id = event.participant_id
    AND event_type.id = event.event_type_id
    GROUP BY event.participant_id, event.event_type_id
    LIMIT 1
  )
  WHERE participant.id = proc_participant_id
  AND event_type.id = proc_event_type_id;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure update_participant_last_events
-- -----------------------------------------------------

DELIMITER $$
USE `cenozo`$$
CREATE DEFINER=`patrick`@`localhost` PROCEDURE `update_participant_last_events`(IN proc_participant_id INT(10) UNSIGNED)
BEGIN
  REPLACE INTO participant_last_event( participant_id, event_type_id, event_id )
  SELECT participant.id, event_type.id, event.id
  FROM participant
  CROSS JOIN event_type
  LEFT JOIN event ON participant.id = event.participant_id
  AND event_type.id = event.event_type_id
  AND event.datetime <=> (
    SELECT MAX( datetime )
    FROM event
    WHERE participant.id = event.participant_id
    AND event_type.id = event.event_type_id
    GROUP BY event.participant_id, event.event_type_id
    LIMIT 1
  )
  WHERE participant.id = proc_participant_id;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure update_participant_last_hin
-- -----------------------------------------------------

DELIMITER $$
USE `cenozo`$$
CREATE DEFINER=`patrick`@`localhost` PROCEDURE `update_participant_last_hin`(IN proc_participant_id INT(10) UNSIGNED)
BEGIN
  REPLACE INTO participant_last_hin( participant_id, hin_id )
  SELECT participant.id, hin.id
  FROM participant
  LEFT JOIN hin ON participant.id = hin.participant_id
  AND hin.datetime <=> (
    SELECT MAX( datetime )
    FROM hin
    WHERE participant.id = hin.participant_id
    GROUP BY hin.participant_id
    LIMIT 1
  )
  WHERE participant.id = proc_participant_id;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure update_participant_last_hold
-- -----------------------------------------------------

DELIMITER $$
USE `cenozo`$$
CREATE DEFINER=`patrick`@`localhost` PROCEDURE `update_participant_last_hold`(IN proc_participant_id INT(10) UNSIGNED)
BEGIN
  REPLACE INTO participant_last_hold( participant_id, hold_id )
  SELECT participant.id, hold.id
  FROM participant
  LEFT JOIN hold ON participant.id = hold.participant_id
  AND hold.datetime <=> (
    SELECT MAX( datetime )
    FROM hold
    WHERE participant.id = hold.participant_id
    GROUP BY hold.participant_id
    LIMIT 1
  )
  WHERE participant.id = proc_participant_id;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure update_participant_last_proxy
-- -----------------------------------------------------

DELIMITER $$
USE `cenozo`$$
CREATE DEFINER=`patrick`@`localhost` PROCEDURE `update_participant_last_proxy`(IN proc_participant_id INT(10) UNSIGNED)
BEGIN
  REPLACE INTO participant_last_proxy( participant_id, proxy_id )
  SELECT participant.id, proxy.id
  FROM participant
  LEFT JOIN proxy ON participant.id = proxy.participant_id
  AND proxy.datetime <=> (
    SELECT MAX( datetime )
    FROM proxy
    WHERE participant.id = proxy.participant_id
    GROUP BY proxy.participant_id
    LIMIT 1
  )
  WHERE participant.id = proc_participant_id;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure update_participant_last_trace
-- -----------------------------------------------------

DELIMITER $$
USE `cenozo`$$
CREATE DEFINER=`patrick`@`localhost` PROCEDURE `update_participant_last_trace`(IN proc_participant_id INT(10) UNSIGNED)
BEGIN
  REPLACE INTO participant_last_trace( participant_id, trace_id )
  SELECT participant.id, trace.id
  FROM participant
  LEFT JOIN trace ON participant.id = trace.participant_id
  AND trace.datetime <=> (
    SELECT MAX( datetime )
    FROM trace
    WHERE participant.id = trace.participant_id
    GROUP BY trace.participant_id
    LIMIT 1
  )
  WHERE participant.id = proc_participant_id;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure update_participant_last_written_consent
-- -----------------------------------------------------

DELIMITER $$
USE `cenozo`$$
CREATE DEFINER=`patrick`@`localhost` PROCEDURE `update_participant_last_written_consent`(IN proc_participant_id INT(10) UNSIGNED, IN proc_consent_type_id INT(10) UNSIGNED)
BEGIN
  REPLACE INTO participant_last_written_consent( participant_id, consent_type_id, consent_id )
  SELECT participant.id, consent_type.id, consent.id
  FROM participant
  CROSS JOIN consent_type
  LEFT JOIN consent ON participant.id = consent.participant_id
  AND consent_type.id = consent.consent_type_id
  AND consent.datetime <=> (
    SELECT MAX( datetime )
    FROM consent
    WHERE consent.written = true
    AND participant.id = consent.participant_id
    AND consent_type.id = consent.consent_type_id
    GROUP BY consent.participant_id, consent.consent_type_id
    LIMIT 1
  )
  WHERE participant.id = proc_participant_id
  AND consent_type.id = proc_consent_type_id;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure update_participant_last_written_consents
-- -----------------------------------------------------

DELIMITER $$
USE `cenozo`$$
CREATE DEFINER=`patrick`@`localhost` PROCEDURE `update_participant_last_written_consents`(IN proc_participant_id INT(10) UNSIGNED)
BEGIN
  REPLACE INTO participant_last_written_consent( participant_id, consent_type_id, consent_id )
  SELECT participant.id, consent_type.id, consent.id
  FROM participant
  CROSS JOIN consent_type
  LEFT JOIN consent ON participant.id = consent.participant_id
  AND consent_type.id = consent.consent_type_id
  AND consent.datetime <=> (
    SELECT MAX( datetime )
    FROM consent
    WHERE consent.written = true
    AND participant.id = consent.participant_id
    AND consent_type.id = consent.consent_type_id
    GROUP BY consent.participant_id, consent.consent_type_id
    LIMIT 1
  )
  WHERE participant.id = proc_participant_id;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure update_participant_primary_address
-- -----------------------------------------------------

DELIMITER $$
USE `cenozo`$$
CREATE DEFINER=`patrick`@`localhost` PROCEDURE `update_participant_primary_address`(IN proc_participant_id INT(10) UNSIGNED)
BEGIN

  REPLACE INTO participant_primary_address( participant_id, address_id )
  SELECT participant.id, address.id
  FROM participant
  LEFT JOIN address ON participant.id = address.participant_id
  AND address.rank <=> (
    SELECT MIN( address.rank )
    FROM address
    JOIN region ON address.region_id = region.id
    WHERE address.active = true 
    AND address.international = false
    AND address.region_id IS NOT NULL 
    AND address.postcode IS NOT NULL 
    AND participant.id = address.participant_id
    GROUP BY address.participant_id
  )
  WHERE participant.id = proc_participant_id;

END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure update_participant_site_for_participant
-- -----------------------------------------------------

DELIMITER $$
USE `cenozo`$$
CREATE DEFINER=`patrick`@`localhost` PROCEDURE `update_participant_site_for_participant`(IN proc_participant_id INT(10) UNSIGNED)
BEGIN
  REPLACE INTO participant_site( application_id, participant_id, site_id, default_site_id )
  SELECT application.id,
         participant.id,
         IF(
           ISNULL( application_has_participant.preferred_site_id ),
           IF(
             application_has_cohort.grouping = 'jurisdiction',
             jurisdiction.site_id,
             region_site.site_id
           ),
           application_has_participant.preferred_site_id
         ) AS site_id,
         IF(
           application_has_cohort.grouping = 'jurisdiction',
           jurisdiction.site_id,
           region_site.site_id
         ) AS default_site_id
  FROM application
  CROSS JOIN participant
  JOIN application_has_cohort ON application.id = application_has_cohort.application_id
  AND application_has_cohort.cohort_id = participant.cohort_id
  LEFT JOIN participant_primary_address ON participant.id = participant_primary_address.participant_id
  LEFT JOIN address ON participant_primary_address.address_id = address.id
  LEFT JOIN jurisdiction ON address.postcode = jurisdiction.postcode
  AND jurisdiction.site_id IN (
    SELECT site_id FROM application_has_site WHERE application_id = application.id
  )
  LEFT JOIN site AS jurisdiction_site ON jurisdiction.site_id = jurisdiction_site.id
  LEFT JOIN region ON address.region_id = region.id
  LEFT JOIN region_site ON region.id = region_site.region_id
  AND region_site.site_id IN (
    SELECT site_id FROM application_has_site WHERE application_id = application.id
  )
  LEFT JOIN site AS region_site_site ON region_site.site_id = region_site_site.id
  AND participant.language_id = region_site.language_id
  LEFT JOIN application_has_participant ON application.id = application_has_participant.application_id
  AND application_has_participant.participant_id = participant.id
  WHERE participant.id = proc_participant_id
  
  AND jurisdiction.site_id <=> jurisdiction_site.id
  AND region_site.site_id <=> region_site_site.id;
END$$

DELIMITER ;
USE `magnolia` ;

-- -----------------------------------------------------
-- procedure update_reqn_current_final_report
-- -----------------------------------------------------

DELIMITER $$
USE `magnolia`$$
CREATE DEFINER=`patrick`@`localhost` PROCEDURE `update_reqn_current_final_report`(IN proc_reqn_id INT(10) UNSIGNED)
BEGIN
  REPLACE INTO reqn_current_final_report( reqn_id, final_report_id )
  SELECT reqn.id, final_report.id
  FROM reqn
  LEFT JOIN final_report ON reqn.id = final_report.reqn_id
  AND final_report.version <=> (
    SELECT MAX( version )
    FROM final_report
    WHERE reqn.id = final_report.reqn_id
    GROUP BY final_report.reqn_id
    LIMIT 1
  )
  WHERE reqn.id = proc_reqn_id;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure update_reqn_current_reqn_version
-- -----------------------------------------------------

DELIMITER $$
USE `magnolia`$$
CREATE DEFINER=`patrick`@`localhost` PROCEDURE `update_reqn_current_reqn_version`(IN proc_reqn_id INT(10) UNSIGNED)
BEGIN
  REPLACE INTO reqn_current_reqn_version( reqn_id, reqn_version_id )
  SELECT reqn.id, reqn_version.id
  FROM reqn
  LEFT JOIN reqn_version ON reqn.id = reqn_version.reqn_id
  AND CONCAT( reqn_version.amendment, reqn_version.version ) <=> (
    SELECT MAX( CONCAT( amendment, version ) )
    FROM reqn_version
    WHERE reqn.id = reqn_version.reqn_id
    GROUP BY reqn_version.reqn_id
    LIMIT 1
  )
  WHERE reqn.id = proc_reqn_id;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure update_reqn_last_ethics_approval
-- -----------------------------------------------------

DELIMITER $$
USE `magnolia`$$
CREATE DEFINER=`patrick`@`localhost` PROCEDURE `update_reqn_last_ethics_approval`(IN proc_reqn_id INT(10) UNSIGNED)
BEGIN
  REPLACE INTO reqn_last_ethics_approval( reqn_id, ethics_approval_id )
  SELECT reqn.id, ethics_approval.id
  FROM reqn
  LEFT JOIN ethics_approval ON reqn.id = ethics_approval.reqn_id
  AND ethics_approval.date <=> (
    SELECT MAX( date )
    FROM ethics_approval
    WHERE reqn.id = ethics_approval.reqn_id
    GROUP BY ethics_approval.reqn_id
    LIMIT 1
  )
  WHERE reqn.id = proc_reqn_id;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure update_reqn_last_reqn_version_with_agreement
-- -----------------------------------------------------

DELIMITER $$
USE `magnolia`$$
CREATE DEFINER=`patrick`@`localhost` PROCEDURE `update_reqn_last_reqn_version_with_agreement`(IN proc_reqn_id INT(10) UNSIGNED)
BEGIN
  REPLACE INTO reqn_last_reqn_version_with_agreement( reqn_id, reqn_version_id )
  SELECT reqn.id, reqn_version.id
  FROM reqn 
  LEFT JOIN reqn_version ON reqn.id = reqn_version.reqn_id
  AND CONCAT( reqn_version.amendment, reqn_version.version ) <=> (
    SELECT MAX( CONCAT( amendment, version ) )
    FROM reqn_version
    WHERE reqn.id = reqn_version.reqn_id
    AND reqn_version.agreement_filename IS NOT NULL 
    GROUP BY reqn_version.reqn_id
    LIMIT 1
  )
  WHERE reqn.id = proc_reqn_id;
END$$

DELIMITER ;
USE `cenozo`;

DELIMITER $$
USE `cenozo`$$
CREATE
DEFINER=`patrick`@`localhost`
TRIGGER `cenozo`.`application_has_participant_AFTER_INSERT`
AFTER INSERT ON `cenozo`.`application_has_participant`
FOR EACH ROW
BEGIN

  IF( NEW.preferred_site_id IS NOT NULL ) THEN
    CALL update_participant_site_for_participant( NEW.participant_id );
  END IF;

END$$

USE `cenozo`$$
CREATE
DEFINER=`patrick`@`localhost`
TRIGGER `cenozo`.`application_has_participant_AFTER_UPDATE`
AFTER UPDATE ON `cenozo`.`application_has_participant`
FOR EACH ROW
BEGIN

  IF( NOT NEW.preferred_site_id <=> OLD.preferred_site_id ) THEN
    CALL update_participant_site_for_participant( NEW.participant_id );
  END IF;

END$$

USE `cenozo`$$
CREATE
DEFINER=`patrick`@`localhost`
TRIGGER `cenozo`.`application_has_participant_BEFORE_DELETE`
BEFORE DELETE ON `cenozo`.`application_has_participant`
FOR EACH ROW
BEGIN

  IF( OLD.preferred_site_id ) THEN
    DELETE FROM participant_site
    WHERE participant_id = OLD.participant_id;
    CALL update_participant_site_for_participant( OLD.participant_id );
  END IF;

END$$

USE `cenozo`$$
CREATE
DEFINER=`patrick`@`localhost`
TRIGGER `cenozo`.`consent_type_AFTER_INSERT`
AFTER INSERT ON `cenozo`.`consent_type`
FOR EACH ROW
BEGIN
  INSERT INTO participant_last_consent( participant_id, consent_type_id, consent_id )
  SELECT participant.id, NEW.id, NULL 
  FROM participant;
  INSERT INTO participant_last_written_consent( participant_id, consent_type_id, consent_id )
  SELECT participant.id, NEW.id, NULL 
  FROM participant;
END$$

USE `cenozo`$$
CREATE
DEFINER=`patrick`@`localhost`
TRIGGER `cenozo`.`event_type_AFTER_INSERT`
AFTER INSERT ON `cenozo`.`event_type`
FOR EACH ROW
BEGIN
  INSERT INTO participant_last_event( participant_id, event_type_id, event_id )
  SELECT participant.id, NEW.id, NULL 
  FROM participant;
END$$

USE `cenozo`$$
CREATE
DEFINER=`patrick`@`localhost`
TRIGGER `cenozo`.`participant_AFTER_INSERT`
AFTER INSERT ON `cenozo`.`participant`
FOR EACH ROW
BEGIN
  CALL update_participant_site_for_participant( NEW.id );
  CALL update_participant_first_address( NEW.id );
  CALL update_participant_primary_address( NEW.id );
  CALL update_participant_last_consents( NEW.id );
  CALL update_participant_last_written_consents( NEW.id );
  CALL update_participant_last_events( NEW.id );
  CALL update_participant_last_hin( NEW.id );
  CALL update_participant_last_hold( NEW.id );
  CALL update_participant_last_proxy( NEW.id );
  CALL update_participant_last_trace( NEW.id );
END$$

USE `cenozo`$$
CREATE
DEFINER=`patrick`@`localhost`
TRIGGER `cenozo`.`remove_uid_from_pool`
BEFORE INSERT ON `cenozo`.`participant`
FOR EACH ROW
BEGIN
  DELETE FROM unique_identifier_pool WHERE uid = new.uid;
END$$

USE `cenozo`$$
CREATE
DEFINER=`patrick`@`localhost`
TRIGGER `cenozo`.`script_BEFORE_INSERT`
BEFORE INSERT ON `cenozo`.`script`
FOR EACH ROW
BEGIN
  IF ( NEW.sid IS NULL AND NEW.pine_qnaire_id IS NULL ) or
     ( NEW.sid IS NOT NULL AND NEW.pine_qnaire_id IS NOT NULL ) THEN
    
    SIGNAL SQLSTATE '23000'
    SET MESSAGE_TEXT = "Either column 'sid' or 'pine_qnaire_id' cannot be null",
    MYSQL_ERRNO = 1048;
  END IF;
END$$

USE `cenozo`$$
CREATE
DEFINER=`patrick`@`localhost`
TRIGGER `cenozo`.`script_BEFORE_UPDATE`
BEFORE UPDATE ON `cenozo`.`script`
FOR EACH ROW
BEGIN
  IF ( NEW.sid IS NULL AND NEW.pine_qnaire_id IS NULL ) or
     ( NEW.sid IS NOT NULL AND NEW.pine_qnaire_id IS NOT NULL ) THEN
    
    SIGNAL SQLSTATE '23000'
    SET MESSAGE_TEXT = "Either column 'sid' or 'pine_qnaire_id' cannot be null",
    MYSQL_ERRNO = 1048;
  END IF;
END$$


DELIMITER ;
USE `magnolia`;

DELIMITER $$
USE `magnolia`$$
CREATE
DEFINER=`patrick`@`localhost`
TRIGGER `magnolia`.`data_category_AFTER_INSERT`
AFTER INSERT ON `magnolia`.`data_category`
FOR EACH ROW
BEGIN
  IF NEW.comment THEN 
    
    INSERT INTO reqn_version_comment( create_timestamp, reqn_version_id, data_category_id )
    SELECT NEW.create_timestamp, reqn_version.id, NEW.id
    FROM reqn_version;
  END IF;
END$$

USE `magnolia`$$
CREATE
DEFINER=`patrick`@`localhost`
TRIGGER `magnolia`.`data_category_BEFORE_UPDATE`
BEFORE UPDATE ON `magnolia`.`data_category`
FOR EACH ROW
BEGIN
  IF NEW.comment != OLD.comment THEN 
    IF NEW.comment THEN 
      
      INSERT IGNORE INTO reqn_version_comment( create_timestamp, reqn_version_id, data_category_id )
      SELECT NEW.create_timestamp, reqn_version.id, NEW.id
      FROM reqn_version;
    ELSE 
      
      DELETE FROM reqn_version_comment WHERE data_category_id = NEW.id AND comment IS NULL;
    END IF;
  END IF;
END$$

USE `magnolia`$$
CREATE
DEFINER=`patrick`@`localhost`
TRIGGER `magnolia`.`ethics_approval_AFTER_DELETE`
AFTER DELETE ON `magnolia`.`ethics_approval`
FOR EACH ROW
BEGIN
  CALL update_reqn_last_ethics_approval( OLD.reqn_id );
END$$

USE `magnolia`$$
CREATE
DEFINER=`patrick`@`localhost`
TRIGGER `magnolia`.`ethics_approval_AFTER_INSERT`
AFTER INSERT ON `magnolia`.`ethics_approval`
FOR EACH ROW
BEGIN
  CALL update_reqn_last_ethics_approval( NEW.reqn_id );
END$$

USE `magnolia`$$
CREATE
DEFINER=`patrick`@`localhost`
TRIGGER `magnolia`.`final_report_AFTER_INSERT`
AFTER INSERT ON `magnolia`.`final_report`
FOR EACH ROW
BEGIN
  CALL update_reqn_current_final_report( NEW.reqn_id );
END$$

USE `magnolia`$$
CREATE
DEFINER=`patrick`@`localhost`
TRIGGER `magnolia`.`final_report_AFTER_DELETE`
AFTER DELETE ON `magnolia`.`final_report`
FOR EACH ROW
BEGIN
  CALL update_reqn_current_final_report( OLD.reqn_id );
END$$

USE `magnolia`$$
CREATE
DEFINER=`patrick`@`localhost`
TRIGGER `magnolia`.`reqn_AFTER_INSERT`
AFTER INSERT ON `magnolia`.`reqn`
FOR EACH ROW
BEGIN
  CALL update_reqn_last_ethics_approval( NEW.id );
  CALL update_reqn_current_final_report( NEW.id );
END$$

USE `magnolia`$$
CREATE
DEFINER=`patrick`@`localhost`
TRIGGER `magnolia`.`reqn_BEFORE_UPDATE`
BEFORE UPDATE ON `magnolia`.`reqn`
FOR EACH ROW
BEGIN
  IF !( NEW.state <=> OLD.state ) THEN
    SET NEW.state_date = IF( NEW.state IS NULL, NULL, UTC_TIMESTAMP() );
  END IF;
END$$

USE `magnolia`$$
CREATE
DEFINER=`patrick`@`localhost`
TRIGGER `magnolia`.`reqn_version_AFTER_INSERT`
AFTER INSERT ON `magnolia`.`reqn_version`
FOR EACH ROW
BEGIN
  CALL update_reqn_current_reqn_version( NEW.reqn_id );
  CALL update_reqn_last_reqn_version_with_agreement( NEW.reqn_id );

  INSERT INTO reqn_version_comment( create_timestamp, reqn_version_id, data_category_id )
  SELECT NEW.create_timestamp, NEW.id, data_category.id
  FROM data_category
  WHERE comment = true;
END$$

USE `magnolia`$$
CREATE
DEFINER=`patrick`@`localhost`
TRIGGER `magnolia`.`reqn_version_AFTER_UPDATE`
AFTER UPDATE ON `magnolia`.`reqn_version`
FOR EACH ROW
BEGIN
  IF NOT NEW.agreement_filename <=> OLD.agreement_filename THEN
    CALL update_reqn_last_reqn_version_with_agreement( NEW.reqn_id );
  END IF;
END$$

USE `magnolia`$$
CREATE
DEFINER=`patrick`@`localhost`
TRIGGER `magnolia`.`reqn_version_AFTER_DELETE`
AFTER DELETE ON `magnolia`.`reqn_version`
FOR EACH ROW
BEGIN
  CALL update_reqn_current_reqn_version( OLD.reqn_id );
  CALL update_reqn_last_reqn_version_with_agreement( OLD.reqn_id );
END$$

USE `magnolia`$$
CREATE
DEFINER=`patrick`@`localhost`
TRIGGER `magnolia`.`reqn_version_has_amendment_type_AFTER_DELETE`
AFTER DELETE ON `magnolia`.`reqn_version_has_amendment_type`
FOR EACH ROW
BEGIN
  
  DELETE FROM amendment_justification
  WHERE reqn_version_id = OLD.reqn_version_id
  AND amendment_type_id = OLD.amendment_type_id;
END$$

USE `magnolia`$$
CREATE
DEFINER=`patrick`@`localhost`
TRIGGER `magnolia`.`reqn_version_has_amendment_type_AFTER_INSERT`
AFTER INSERT ON `magnolia`.`reqn_version_has_amendment_type`
FOR EACH ROW
BEGIN
  
  SELECT justification_prompt_en IS NOT NULL OR justification_prompt_fr IS NOT NULL INTO @justification
  FROM amendment_type
  WHERE id = NEW.amendment_type_id;

  IF @justification THEN
    INSERT IGNORE INTO amendment_justification
    SET reqn_version_id = NEW.reqn_version_id,
        amendment_type_id = NEW.amendment_type_id;
  END IF;
END$$

USE `magnolia`$$
CREATE
DEFINER=`patrick`@`localhost`
TRIGGER `magnolia`.`reqn_version_has_data_selection_AFTER_DELETE`
AFTER DELETE ON `magnolia`.`reqn_version_has_data_selection`
FOR EACH ROW
BEGIN
  SELECT data_option_id INTO @data_option_id FROM data_selection WHERE id = OLD.data_selection_id;

  
  SELECT COUNT(*) INTO @count
  FROM reqn_version_has_data_selection
  JOIN data_selection ON reqn_version_has_data_selection.data_selection_id = data_selection.id
  WHERE reqn_version_id = OLD.reqn_version_id
  AND data_option_id = @data_option_id;

  IF 0 = @count THEN
    DELETE FROM data_justification
    WHERE reqn_version_id = OLD.reqn_version_id
    AND data_option_id = (
      SELECT data_option_id FROM data_selection WHERE id = OLD.data_selection_id
    );
  END IF;
END$$

USE `magnolia`$$
CREATE
DEFINER=`patrick`@`localhost`
TRIGGER `magnolia`.`reqn_version_has_data_selection_AFTER_INSERT`
AFTER INSERT ON `magnolia`.`reqn_version_has_data_selection`
FOR EACH ROW
BEGIN
  SELECT data_option_id INTO @data_option_id FROM data_selection WHERE id = NEW.data_selection_id;

  
  INSERT IGNORE INTO data_justification
  SET reqn_version_id = NEW.reqn_version_id,
      data_option_id = @data_option_id;
END$$

USE `magnolia`$$
CREATE
DEFINER=`patrick`@`localhost`
TRIGGER `magnolia`.`review_BEFORE_INSERT`
BEFORE INSERT ON `magnolia`.`review`
FOR EACH ROW
BEGIN
  IF !NEW.datetime THEN 
    SET NEW.datetime = UTC_TIMESTAMP();
  END IF;
END$$

USE `magnolia`$$
CREATE
DEFINER=`patrick`@`localhost`
TRIGGER `magnolia`.`review_AFTER_INSERT`
AFTER INSERT ON `magnolia`.`review`
FOR EACH ROW
BEGIN
  
  INSERT INTO review_answer( review_id, review_type_question_id )
  SELECT NEW.id, review_type_question.id
  FROM review_type_question
  WHERE review_type_id = NEW.review_type_id;
END$$

USE `magnolia`$$
CREATE
DEFINER=`patrick`@`localhost`
TRIGGER `magnolia`.`review_type_question_AFTER_INSERT`
AFTER INSERT ON `magnolia`.`review_type_question`
FOR EACH ROW
BEGIN
  
  INSERT INTO review_answer( review_id, review_type_question_id )
  SELECT review.id, NEW.id
  FROM review_type
  JOIN review ON review_type.id = review.review_type_id
  WHERE review_type.id = NEW.review_type_id;
END$$

USE `magnolia`$$
CREATE
DEFINER=`patrick`@`localhost`
TRIGGER `magnolia`.`stage_AFTER_INSERT`
AFTER INSERT ON `magnolia`.`stage`
FOR EACH ROW
BEGIN
  INSERT IGNORE INTO review( create_timestamp, reqn_id, amendment, review_type_id )
  SELECT NULL, NEW.reqn_id, reqn_version.amendment, review_type.id
  FROM review_type
  JOIN stage_type ON review_type.stage_type_id = stage_type.id
  JOIN reqn_current_reqn_version ON NEW.reqn_id = reqn_current_reqn_version.reqn_id
  JOIN reqn_version ON reqn_current_reqn_version.reqn_version_id = reqn_version.id
  WHERE stage_type.id = NEW.stage_type_id;
END$$

USE `magnolia`$$
CREATE
DEFINER=`patrick`@`localhost`
TRIGGER `magnolia`.`stage_AFTER_DELETE`
AFTER DELETE ON `magnolia`.`stage`
FOR EACH ROW
BEGIN
  
  DELETE FROM review
  WHERE review_type_id IN (
    SELECT review_type.id
    FROM review_type
    JOIN stage_type ON review_type.stage_type_id = stage_type.id
    WHERE stage_type.id = OLD.stage_type_id
  ) AND amendment = (
    SELECT amendment
    FROM reqn_current_reqn_version
    JOIN reqn_version ON reqn_current_reqn_version.reqn_version_id = reqn_version.id
    WHERE reqn_current_reqn_version.reqn_id = OLD.reqn_id
  )
  AND reqn_id = OLD.reqn_id;
END$$


DELIMITER ;

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
