define(function(){"use strict";try{var module=cenozoApp.module("stage_type",true)}catch(err){console.warn(err);return}angular.extend(module,{identifier:{column:"name"},name:{singular:"stage type",plural:"stage types",possessive:"stage type's"},columnList:{rank:{title:"Rank",type:"rank"},name:{title:"Name"},phase:{title:"Phase"},notification_type:{column:"notification_type.name",title:"Notification"},reqn_count:{title:"Requisitions",type:"number"}},defaultOrder:{column:"rank",reverse:false}});module.addInputGroup("",{rank:{title:"Rank",type:"rank"},name:{title:"Name",type:"string"},phase:{title:"Phase",type:"string"},notification_type:{column:"notification_type.name",title:"Notification",type:"string",help:"The notification to send after the stage is complete."}});cenozo.providers.directive("cnStageTypeList",["CnStageTypeModelFactory",function(CnStageTypeModelFactory){return{templateUrl:module.getFileUrl("list.tpl.html"),restrict:"E",scope:{model:"=?"},controller:function($scope){if(angular.isUndefined($scope.model))$scope.model=CnStageTypeModelFactory.root}}}]);cenozo.providers.directive("cnStageTypeView",["CnStageTypeModelFactory",function(CnStageTypeModelFactory){return{templateUrl:module.getFileUrl("view.tpl.html"),restrict:"E",scope:{model:"=?"},controller:function($scope){if(angular.isUndefined($scope.model))$scope.model=CnStageTypeModelFactory.root}}}]);cenozo.providers.factory("CnStageTypeListFactory",["CnBaseListFactory",function(CnBaseListFactory){var object=function(parentModel){CnBaseListFactory.construct(this,parentModel)};return{instance:function(parentModel){return new object(parentModel)}}}]);cenozo.providers.factory("CnStageTypeViewFactory",["CnBaseViewFactory",function(CnBaseViewFactory){var object=function(parentModel,root){CnBaseViewFactory.construct(this,parentModel,root)};return{instance:function(parentModel,root){return new object(parentModel,root)}}}]);cenozo.providers.factory("CnStageTypeModelFactory",["CnBaseModelFactory","CnStageTypeListFactory","CnStageTypeViewFactory",function(CnBaseModelFactory,CnStageTypeListFactory,CnStageTypeViewFactory){var object=function(root){var self=this;CnBaseModelFactory.construct(this,module);this.listModel=CnStageTypeListFactory.instance(this);this.viewModel=CnStageTypeViewFactory.instance(this,root)};return{root:new object(true),instance:function(){return new object(false)}}}])});
